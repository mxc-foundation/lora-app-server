{
  "swagger": "2.0",
  "info": {
    "title": "serviceProfile.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/service-profiles": {
      "get": {
        "summary": "List lists the available service-profiles.",
        "operationId": "List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/appserver_serves_uiListServiceProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Max number of items to return.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset in the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "organizationID",
            "description": "Organization id to filter on.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ServiceProfileService"
        ]
      },
      "post": {
        "summary": "Create creates the given service-profile.",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/appserver_serves_uiCreateServiceProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appserver_serves_uiCreateServiceProfileRequest"
            }
          }
        ],
        "tags": [
          "ServiceProfileService"
        ]
      }
    },
    "/api/service-profiles/{id}": {
      "get": {
        "summary": "Get returns the service-profile matching the given id.",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/appserver_serves_uiGetServiceProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Service-profile ID (UUID string).",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceProfileService"
        ]
      },
      "delete": {
        "summary": "Delete deletes the service-profile matching the given id.",
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Service-profile ID (UUID string).",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceProfileService"
        ]
      }
    },
    "/api/service-profiles/{serviceProfile.id}": {
      "put": {
        "summary": "Update updates the given serviceprofile.",
        "operationId": "Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "serviceProfile.id",
            "description": "Service-profile ID (UUID string).\nThis will be automatically set on create.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appserver_serves_uiUpdateServiceProfileRequest"
            }
          }
        ],
        "tags": [
          "ServiceProfileService"
        ]
      }
    }
  },
  "definitions": {
    "appserver_serves_uiCreateServiceProfileRequest": {
      "type": "object",
      "properties": {
        "serviceProfile": {
          "$ref": "#/definitions/appserver_serves_uiServiceProfile",
          "description": "Service-profile object to create."
        }
      }
    },
    "appserver_serves_uiCreateServiceProfileResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Service-profile ID (UUID string)."
        }
      }
    },
    "appserver_serves_uiGetServiceProfileResponse": {
      "type": "object",
      "properties": {
        "serviceProfile": {
          "$ref": "#/definitions/appserver_serves_uiServiceProfile",
          "description": "Service-profile object."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      }
    },
    "appserver_serves_uiListServiceProfileResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of service-profiles."
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/appserver_serves_uiServiceProfileListItem"
          }
        }
      }
    },
    "appserver_serves_uiRatePolicy": {
      "type": "string",
      "enum": [
        "DROP",
        "MARK"
      ],
      "default": "DROP",
      "title": "- DROP: Drop\n - MARK: Mark"
    },
    "appserver_serves_uiServiceProfile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Service-profile ID (UUID string).\nThis will be automatically set on create."
        },
        "name": {
          "type": "string",
          "description": "Service-profile name."
        },
        "organizationID": {
          "type": "string",
          "format": "int64",
          "description": "Organization ID to which the service-profile is assigned."
        },
        "networkServerID": {
          "type": "string",
          "format": "int64",
          "description": "Network-server ID on which the service-profile is provisioned."
        },
        "ulRate": {
          "type": "integer",
          "format": "int64",
          "description": "Token bucket filling rate, including ACKs (packet/h)."
        },
        "ulBucketSize": {
          "type": "integer",
          "format": "int64",
          "description": "Token bucket burst size."
        },
        "ulRatePolicy": {
          "$ref": "#/definitions/appserver_serves_uiRatePolicy",
          "description": "Drop or mark when exceeding ULRate."
        },
        "dlRate": {
          "type": "integer",
          "format": "int64",
          "description": "Token bucket filling rate, including ACKs (packet/h)."
        },
        "dlBucketSize": {
          "type": "integer",
          "format": "int64",
          "description": "Token bucket burst size."
        },
        "dlRatePolicy": {
          "$ref": "#/definitions/appserver_serves_uiRatePolicy",
          "description": "Drop or mark when exceeding DLRate."
        },
        "addGWMetaData": {
          "type": "boolean",
          "description": "GW metadata (RSSI, SNR, GW geoloc., etc.) are added to the packet sent to AS."
        },
        "devStatusReqFreq": {
          "type": "integer",
          "format": "int64",
          "description": "Frequency to initiate an End-Device status request (request/day)."
        },
        "reportDevStatusBattery": {
          "type": "boolean",
          "description": "Report End-Device battery level to AS."
        },
        "reportDevStatusMargin": {
          "type": "boolean",
          "description": "Report End-Device margin to AS."
        },
        "drMin": {
          "type": "integer",
          "format": "int64",
          "description": "Minimum allowed data rate. Used for ADR."
        },
        "drMax": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum allowed data rate. Used for ADR."
        },
        "channelMask": {
          "type": "string",
          "format": "byte",
          "description": "Channel mask. sNS does not have to obey (i.e., informative)."
        },
        "prAllowed": {
          "type": "boolean",
          "description": "Passive Roaming allowed."
        },
        "hrAllowed": {
          "type": "boolean",
          "description": "Handover Roaming allowed."
        },
        "raAllowed": {
          "type": "boolean",
          "description": "Roaming Activation allowed."
        },
        "nwkGeoLoc": {
          "type": "boolean",
          "description": "Enable network geolocation service."
        },
        "targetPER": {
          "type": "integer",
          "format": "int64",
          "description": "Target Packet Error Rate."
        },
        "minGWDiversity": {
          "type": "integer",
          "format": "int64",
          "description": "Minimum number of receiving GWs (informative)."
        }
      }
    },
    "appserver_serves_uiServiceProfileListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Service-profile ID (UUID string)."
        },
        "name": {
          "type": "string",
          "description": "Service-profile name."
        },
        "organizationID": {
          "type": "string",
          "format": "int64",
          "description": "Organization ID of the service-profile."
        },
        "networkServerID": {
          "type": "string",
          "format": "int64",
          "description": "Network-server ID of the service-profile."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      }
    },
    "appserver_serves_uiUpdateServiceProfileRequest": {
      "type": "object",
      "properties": {
        "serviceProfile": {
          "$ref": "#/definitions/appserver_serves_uiServiceProfile",
          "description": "Service-profile object to update."
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
