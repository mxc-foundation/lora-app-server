// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.2
// source: provisionedDevice.proto

package appserver_serves_ui

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ProvisionedDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Device EUI (HEX string without 0x prefix).
	ProvisionId string `protobuf:"bytes,1,opt,name=provisionId,proto3" json:"provisionId,omitempty"`
	// Name of the device (if left blank, it will be set to the DevEUI).
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// ID of the application to which the device must be added.
	// It is possible to move a device to a different application on update,
	// given that both the old and the new application share the same
	// service-profile.
	ApplicationId int64 `protobuf:"varint,3,opt,name=application_id,json=applicationID,proto3" json:"application_id,omitempty"`
	// Description of the device.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// DeviceProfileID attached to the device.
	DeviceProfileId string `protobuf:"bytes,5,opt,name=device_profile_id,json=deviceProfileID,proto3" json:"device_profile_id,omitempty"`
	// Skip frame-counter checks (this is insecure, but could be helpful for debugging).
	SkipFCntCheck bool `protobuf:"varint,6,opt,name=skip_f_cnt_check,json=skipFCntCheck,proto3" json:"skip_f_cnt_check,omitempty"`
	// Reference altitude.
	// When using geolocation, this altitude will be used as a reference
	// (when supported by the geolocation-server) to increase geolocation
	// accuracy.
	ReferenceAltitude float64 `protobuf:"fixed64,7,opt,name=reference_altitude,json=referenceAltitude,proto3" json:"reference_altitude,omitempty"`
	// Variables (user defined).
	// These variables can be used together with integrations to store tokens /
	// secrets that must be configured per device. These variables are not
	// exposed in the event payloads.
	Variables map[string]string `protobuf:"bytes,8,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Tags (user defined).
	// These tags are exposed in the event payloads or to integration. Tags are
	// intended for aggregation and filtering.
	Tags map[string]string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Device is disabled.
	IsDisabled bool `protobuf:"varint,10,opt,name=is_disabled,json=isDisabled,proto3" json:"is_disabled,omitempty"`
}

func (x *ProvisionedDevice) Reset() {
	*x = ProvisionedDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provisionedDevice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionedDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionedDevice) ProtoMessage() {}

func (x *ProvisionedDevice) ProtoReflect() protoreflect.Message {
	mi := &file_provisionedDevice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionedDevice.ProtoReflect.Descriptor instead.
func (*ProvisionedDevice) Descriptor() ([]byte, []int) {
	return file_provisionedDevice_proto_rawDescGZIP(), []int{0}
}

func (x *ProvisionedDevice) GetProvisionId() string {
	if x != nil {
		return x.ProvisionId
	}
	return ""
}

func (x *ProvisionedDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProvisionedDevice) GetApplicationId() int64 {
	if x != nil {
		return x.ApplicationId
	}
	return 0
}

func (x *ProvisionedDevice) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProvisionedDevice) GetDeviceProfileId() string {
	if x != nil {
		return x.DeviceProfileId
	}
	return ""
}

func (x *ProvisionedDevice) GetSkipFCntCheck() bool {
	if x != nil {
		return x.SkipFCntCheck
	}
	return false
}

func (x *ProvisionedDevice) GetReferenceAltitude() float64 {
	if x != nil {
		return x.ReferenceAltitude
	}
	return 0
}

func (x *ProvisionedDevice) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *ProvisionedDevice) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ProvisionedDevice) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

type CreateProvisionedDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Device object to create.
	Device *ProvisionedDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *CreateProvisionedDeviceRequest) Reset() {
	*x = CreateProvisionedDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provisionedDevice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProvisionedDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProvisionedDeviceRequest) ProtoMessage() {}

func (x *CreateProvisionedDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provisionedDevice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProvisionedDeviceRequest.ProtoReflect.Descriptor instead.
func (*CreateProvisionedDeviceRequest) Descriptor() ([]byte, []int) {
	return file_provisionedDevice_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProvisionedDeviceRequest) GetDevice() *ProvisionedDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type GetProvisionedDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Provision ID (HEX string without 0x prefix).
	ProvisionId string `protobuf:"bytes,1,opt,name=provisionId,proto3" json:"provisionId,omitempty"`
}

func (x *GetProvisionedDeviceRequest) Reset() {
	*x = GetProvisionedDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provisionedDevice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProvisionedDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProvisionedDeviceRequest) ProtoMessage() {}

func (x *GetProvisionedDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provisionedDevice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProvisionedDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetProvisionedDeviceRequest) Descriptor() ([]byte, []int) {
	return file_provisionedDevice_proto_rawDescGZIP(), []int{2}
}

func (x *GetProvisionedDeviceRequest) GetProvisionId() string {
	if x != nil {
		return x.ProvisionId
	}
	return ""
}

type GetProvisionedDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Provision ID (HEX string without 0x prefix).
	ProvisionId string `protobuf:"bytes,1,opt,name=provisionId,proto3" json:"provisionId,omitempty"`
	// Manufacturer info
	ManufacturerId   int64  `protobuf:"zigzag64,2,opt,name=manufacturerId,proto3" json:"manufacturerId,omitempty"`
	ManufacturerName string `protobuf:"bytes,3,opt,name=manufacturerName,proto3" json:"manufacturerName,omitempty"`
	// Model of the device
	Model string `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	// Serial number of the device
	SerialNumber string `protobuf:"bytes,5,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	// Is a fixed Device EUI
	FixedDevEUI bool `protobuf:"varint,6,opt,name=fixedDevEUI,proto3" json:"fixedDevEUI,omitempty"`
	// Device EUI (HEX string without 0x prefix).
	DevEUI string `protobuf:"bytes,7,opt,name=devEUI,proto3" json:"devEUI,omitempty"`
	// Status. (NEW / PROVISIONED / DISABLED)
	Status string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	// Server added to.
	Server string `protobuf:"bytes,9,opt,name=server,proto3" json:"server,omitempty"`
	// Timestamp
	TimeCreated     *timestamp.Timestamp `protobuf:"bytes,10,opt,name=timeCreated,proto3" json:"timeCreated,omitempty"`
	TimeProvisioned *timestamp.Timestamp `protobuf:"bytes,11,opt,name=timeProvisioned,proto3" json:"timeProvisioned,omitempty"`
	TimeAddToServer *timestamp.Timestamp `protobuf:"bytes,12,opt,name=timeAddToServer,proto3" json:"timeAddToServer,omitempty"`
}

func (x *GetProvisionedDeviceResponse) Reset() {
	*x = GetProvisionedDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provisionedDevice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProvisionedDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProvisionedDeviceResponse) ProtoMessage() {}

func (x *GetProvisionedDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provisionedDevice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProvisionedDeviceResponse.ProtoReflect.Descriptor instead.
func (*GetProvisionedDeviceResponse) Descriptor() ([]byte, []int) {
	return file_provisionedDevice_proto_rawDescGZIP(), []int{3}
}

func (x *GetProvisionedDeviceResponse) GetProvisionId() string {
	if x != nil {
		return x.ProvisionId
	}
	return ""
}

func (x *GetProvisionedDeviceResponse) GetManufacturerId() int64 {
	if x != nil {
		return x.ManufacturerId
	}
	return 0
}

func (x *GetProvisionedDeviceResponse) GetManufacturerName() string {
	if x != nil {
		return x.ManufacturerName
	}
	return ""
}

func (x *GetProvisionedDeviceResponse) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GetProvisionedDeviceResponse) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *GetProvisionedDeviceResponse) GetFixedDevEUI() bool {
	if x != nil {
		return x.FixedDevEUI
	}
	return false
}

func (x *GetProvisionedDeviceResponse) GetDevEUI() string {
	if x != nil {
		return x.DevEUI
	}
	return ""
}

func (x *GetProvisionedDeviceResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetProvisionedDeviceResponse) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *GetProvisionedDeviceResponse) GetTimeCreated() *timestamp.Timestamp {
	if x != nil {
		return x.TimeCreated
	}
	return nil
}

func (x *GetProvisionedDeviceResponse) GetTimeProvisioned() *timestamp.Timestamp {
	if x != nil {
		return x.TimeProvisioned
	}
	return nil
}

func (x *GetProvisionedDeviceResponse) GetTimeAddToServer() *timestamp.Timestamp {
	if x != nil {
		return x.TimeAddToServer
	}
	return nil
}

var File_provisionedDevice_proto protoreflect.FileDescriptor

var file_provisionedDevice_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x70, 0x70, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x5f, 0x75, 0x69, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x04, 0x0a, 0x11, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x10, 0x73,
	0x6b, 0x69, 0x70, 0x5f, 0x66, 0x5f, 0x63, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x46, 0x43, 0x6e, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x6c, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x53, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x5f, 0x75, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x5f, 0x75, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a,
	0x3c, 0x0a, 0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a,
	0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x60, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x5f, 0x75, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x3f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x82, 0x04, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x44, 0x65, 0x76, 0x45, 0x55, 0x49, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x66, 0x69, 0x78, 0x65, 0x64, 0x44, 0x65, 0x76, 0x45, 0x55, 0x49, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x76, 0x45, 0x55, 0x49, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x45, 0x55, 0x49, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x44, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65,
	0x41, 0x64, 0x64, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x74,
	0x69, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x32, 0xad,
	0x02, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x5f, 0x75, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x97, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x30, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x5f,
	0x75, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x73, 0x5f, 0x75, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x7d, 0x42, 0x58,
	0x5a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x78, 0x63,
	0x2d, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x70, 0x77, 0x61,
	0x6e, 0x2d, 0x61, 0x70, 0x70, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x73, 0x2d, 0x75, 0x69, 0x3b, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x73, 0x5f, 0x75, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_provisionedDevice_proto_rawDescOnce sync.Once
	file_provisionedDevice_proto_rawDescData = file_provisionedDevice_proto_rawDesc
)

func file_provisionedDevice_proto_rawDescGZIP() []byte {
	file_provisionedDevice_proto_rawDescOnce.Do(func() {
		file_provisionedDevice_proto_rawDescData = protoimpl.X.CompressGZIP(file_provisionedDevice_proto_rawDescData)
	})
	return file_provisionedDevice_proto_rawDescData
}

var file_provisionedDevice_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_provisionedDevice_proto_goTypes = []interface{}{
	(*ProvisionedDevice)(nil),              // 0: appserver_serves_ui.ProvisionedDevice
	(*CreateProvisionedDeviceRequest)(nil), // 1: appserver_serves_ui.CreateProvisionedDeviceRequest
	(*GetProvisionedDeviceRequest)(nil),    // 2: appserver_serves_ui.GetProvisionedDeviceRequest
	(*GetProvisionedDeviceResponse)(nil),   // 3: appserver_serves_ui.GetProvisionedDeviceResponse
	nil,                                    // 4: appserver_serves_ui.ProvisionedDevice.VariablesEntry
	nil,                                    // 5: appserver_serves_ui.ProvisionedDevice.TagsEntry
	(*timestamp.Timestamp)(nil),            // 6: google.protobuf.Timestamp
	(*empty.Empty)(nil),                    // 7: google.protobuf.Empty
}
var file_provisionedDevice_proto_depIdxs = []int32{
	4, // 0: appserver_serves_ui.ProvisionedDevice.variables:type_name -> appserver_serves_ui.ProvisionedDevice.VariablesEntry
	5, // 1: appserver_serves_ui.ProvisionedDevice.tags:type_name -> appserver_serves_ui.ProvisionedDevice.TagsEntry
	0, // 2: appserver_serves_ui.CreateProvisionedDeviceRequest.device:type_name -> appserver_serves_ui.ProvisionedDevice
	6, // 3: appserver_serves_ui.GetProvisionedDeviceResponse.timeCreated:type_name -> google.protobuf.Timestamp
	6, // 4: appserver_serves_ui.GetProvisionedDeviceResponse.timeProvisioned:type_name -> google.protobuf.Timestamp
	6, // 5: appserver_serves_ui.GetProvisionedDeviceResponse.timeAddToServer:type_name -> google.protobuf.Timestamp
	1, // 6: appserver_serves_ui.ProvisionedDeviceService.Create:input_type -> appserver_serves_ui.CreateProvisionedDeviceRequest
	2, // 7: appserver_serves_ui.ProvisionedDeviceService.Get:input_type -> appserver_serves_ui.GetProvisionedDeviceRequest
	7, // 8: appserver_serves_ui.ProvisionedDeviceService.Create:output_type -> google.protobuf.Empty
	3, // 9: appserver_serves_ui.ProvisionedDeviceService.Get:output_type -> appserver_serves_ui.GetProvisionedDeviceResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_provisionedDevice_proto_init() }
func file_provisionedDevice_proto_init() {
	if File_provisionedDevice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_provisionedDevice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionedDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provisionedDevice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProvisionedDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provisionedDevice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProvisionedDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provisionedDevice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProvisionedDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_provisionedDevice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_provisionedDevice_proto_goTypes,
		DependencyIndexes: file_provisionedDevice_proto_depIdxs,
		MessageInfos:      file_provisionedDevice_proto_msgTypes,
	}.Build()
	File_provisionedDevice_proto = out.File
	file_provisionedDevice_proto_rawDesc = nil
	file_provisionedDevice_proto_goTypes = nil
	file_provisionedDevice_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProvisionedDeviceServiceClient is the client API for ProvisionedDeviceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProvisionedDeviceServiceClient interface {
	// Create - creates the given provisioned device.
	Create(ctx context.Context, in *CreateProvisionedDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get - returns the provision info of a device matching the given Provision ID.
	Get(ctx context.Context, in *GetProvisionedDeviceRequest, opts ...grpc.CallOption) (*GetProvisionedDeviceResponse, error)
}

type provisionedDeviceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProvisionedDeviceServiceClient(cc grpc.ClientConnInterface) ProvisionedDeviceServiceClient {
	return &provisionedDeviceServiceClient{cc}
}

func (c *provisionedDeviceServiceClient) Create(ctx context.Context, in *CreateProvisionedDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.ProvisionedDeviceService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *provisionedDeviceServiceClient) Get(ctx context.Context, in *GetProvisionedDeviceRequest, opts ...grpc.CallOption) (*GetProvisionedDeviceResponse, error) {
	out := new(GetProvisionedDeviceResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.ProvisionedDeviceService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProvisionedDeviceServiceServer is the server API for ProvisionedDeviceService service.
type ProvisionedDeviceServiceServer interface {
	// Create - creates the given provisioned device.
	Create(context.Context, *CreateProvisionedDeviceRequest) (*empty.Empty, error)
	// Get - returns the provision info of a device matching the given Provision ID.
	Get(context.Context, *GetProvisionedDeviceRequest) (*GetProvisionedDeviceResponse, error)
}

// UnimplementedProvisionedDeviceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProvisionedDeviceServiceServer struct {
}

func (*UnimplementedProvisionedDeviceServiceServer) Create(context.Context, *CreateProvisionedDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedProvisionedDeviceServiceServer) Get(context.Context, *GetProvisionedDeviceRequest) (*GetProvisionedDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterProvisionedDeviceServiceServer(s *grpc.Server, srv ProvisionedDeviceServiceServer) {
	s.RegisterService(&_ProvisionedDeviceService_serviceDesc, srv)
}

func _ProvisionedDeviceService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProvisionedDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvisionedDeviceServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.ProvisionedDeviceService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvisionedDeviceServiceServer).Create(ctx, req.(*CreateProvisionedDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProvisionedDeviceService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProvisionedDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvisionedDeviceServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.ProvisionedDeviceService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvisionedDeviceServiceServer).Get(ctx, req.(*GetProvisionedDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProvisionedDeviceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appserver_serves_ui.ProvisionedDeviceService",
	HandlerType: (*ProvisionedDeviceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ProvisionedDeviceService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ProvisionedDeviceService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "provisionedDevice.proto",
}
