// Code generated by protoc-gen-go. DO NOT EDIT.
// source: staking.proto

package appserver_serves_ui

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StakingRevenueRequest struct {
	OrgId                int64                `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Currency             string               `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	From                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Till                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=till,proto3" json:"till,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StakingRevenueRequest) Reset()         { *m = StakingRevenueRequest{} }
func (m *StakingRevenueRequest) String() string { return proto.CompactTextString(m) }
func (*StakingRevenueRequest) ProtoMessage()    {}
func (*StakingRevenueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{0}
}

func (m *StakingRevenueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakingRevenueRequest.Unmarshal(m, b)
}
func (m *StakingRevenueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakingRevenueRequest.Marshal(b, m, deterministic)
}
func (m *StakingRevenueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakingRevenueRequest.Merge(m, src)
}
func (m *StakingRevenueRequest) XXX_Size() int {
	return xxx_messageInfo_StakingRevenueRequest.Size(m)
}
func (m *StakingRevenueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StakingRevenueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StakingRevenueRequest proto.InternalMessageInfo

func (m *StakingRevenueRequest) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *StakingRevenueRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *StakingRevenueRequest) GetFrom() *timestamp.Timestamp {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *StakingRevenueRequest) GetTill() *timestamp.Timestamp {
	if m != nil {
		return m.Till
	}
	return nil
}

type StakingRevenueResponse struct {
	Amount               string   `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StakingRevenueResponse) Reset()         { *m = StakingRevenueResponse{} }
func (m *StakingRevenueResponse) String() string { return proto.CompactTextString(m) }
func (*StakingRevenueResponse) ProtoMessage()    {}
func (*StakingRevenueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{1}
}

func (m *StakingRevenueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakingRevenueResponse.Unmarshal(m, b)
}
func (m *StakingRevenueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakingRevenueResponse.Marshal(b, m, deterministic)
}
func (m *StakingRevenueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakingRevenueResponse.Merge(m, src)
}
func (m *StakingRevenueResponse) XXX_Size() int {
	return xxx_messageInfo_StakingRevenueResponse.Size(m)
}
func (m *StakingRevenueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StakingRevenueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StakingRevenueResponse proto.InternalMessageInfo

func (m *StakingRevenueResponse) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type StakeRequest struct {
	OrgId                int64    `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string   `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StakeRequest) Reset()         { *m = StakeRequest{} }
func (m *StakeRequest) String() string { return proto.CompactTextString(m) }
func (*StakeRequest) ProtoMessage()    {}
func (*StakeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{2}
}

func (m *StakeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakeRequest.Unmarshal(m, b)
}
func (m *StakeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakeRequest.Marshal(b, m, deterministic)
}
func (m *StakeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakeRequest.Merge(m, src)
}
func (m *StakeRequest) XXX_Size() int {
	return xxx_messageInfo_StakeRequest.Size(m)
}
func (m *StakeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StakeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StakeRequest proto.InternalMessageInfo

func (m *StakeRequest) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *StakeRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *StakeRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type StakeResponse struct {
	Status               string           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	UserProfile          *ProfileResponse `protobuf:"bytes,2,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *StakeResponse) Reset()         { *m = StakeResponse{} }
func (m *StakeResponse) String() string { return proto.CompactTextString(m) }
func (*StakeResponse) ProtoMessage()    {}
func (*StakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{3}
}

func (m *StakeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakeResponse.Unmarshal(m, b)
}
func (m *StakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakeResponse.Marshal(b, m, deterministic)
}
func (m *StakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakeResponse.Merge(m, src)
}
func (m *StakeResponse) XXX_Size() int {
	return xxx_messageInfo_StakeResponse.Size(m)
}
func (m *StakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StakeResponse proto.InternalMessageInfo

func (m *StakeResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *StakeResponse) GetUserProfile() *ProfileResponse {
	if m != nil {
		return m.UserProfile
	}
	return nil
}

type UnstakeRequest struct {
	OrgId                int64    `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnstakeRequest) Reset()         { *m = UnstakeRequest{} }
func (m *UnstakeRequest) String() string { return proto.CompactTextString(m) }
func (*UnstakeRequest) ProtoMessage()    {}
func (*UnstakeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{4}
}

func (m *UnstakeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnstakeRequest.Unmarshal(m, b)
}
func (m *UnstakeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnstakeRequest.Marshal(b, m, deterministic)
}
func (m *UnstakeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnstakeRequest.Merge(m, src)
}
func (m *UnstakeRequest) XXX_Size() int {
	return xxx_messageInfo_UnstakeRequest.Size(m)
}
func (m *UnstakeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnstakeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnstakeRequest proto.InternalMessageInfo

func (m *UnstakeRequest) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *UnstakeRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type UnstakeResponse struct {
	Status               string           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	UserProfile          *ProfileResponse `protobuf:"bytes,2,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UnstakeResponse) Reset()         { *m = UnstakeResponse{} }
func (m *UnstakeResponse) String() string { return proto.CompactTextString(m) }
func (*UnstakeResponse) ProtoMessage()    {}
func (*UnstakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{5}
}

func (m *UnstakeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnstakeResponse.Unmarshal(m, b)
}
func (m *UnstakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnstakeResponse.Marshal(b, m, deterministic)
}
func (m *UnstakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnstakeResponse.Merge(m, src)
}
func (m *UnstakeResponse) XXX_Size() int {
	return xxx_messageInfo_UnstakeResponse.Size(m)
}
func (m *UnstakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnstakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnstakeResponse proto.InternalMessageInfo

func (m *UnstakeResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UnstakeResponse) GetUserProfile() *ProfileResponse {
	if m != nil {
		return m.UserProfile
	}
	return nil
}

type GetActiveStakesRequest struct {
	OrgId                int64    `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetActiveStakesRequest) Reset()         { *m = GetActiveStakesRequest{} }
func (m *GetActiveStakesRequest) String() string { return proto.CompactTextString(m) }
func (*GetActiveStakesRequest) ProtoMessage()    {}
func (*GetActiveStakesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{6}
}

func (m *GetActiveStakesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActiveStakesRequest.Unmarshal(m, b)
}
func (m *GetActiveStakesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActiveStakesRequest.Marshal(b, m, deterministic)
}
func (m *GetActiveStakesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActiveStakesRequest.Merge(m, src)
}
func (m *GetActiveStakesRequest) XXX_Size() int {
	return xxx_messageInfo_GetActiveStakesRequest.Size(m)
}
func (m *GetActiveStakesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActiveStakesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetActiveStakesRequest proto.InternalMessageInfo

func (m *GetActiveStakesRequest) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *GetActiveStakesRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type ActiveStake struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount               string               `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	StakeStatus          string               `protobuf:"bytes,4,opt,name=stake_status,json=stakeStatus,proto3" json:"stake_status,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ActiveStake) Reset()         { *m = ActiveStake{} }
func (m *ActiveStake) String() string { return proto.CompactTextString(m) }
func (*ActiveStake) ProtoMessage()    {}
func (*ActiveStake) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{7}
}

func (m *ActiveStake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveStake.Unmarshal(m, b)
}
func (m *ActiveStake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveStake.Marshal(b, m, deterministic)
}
func (m *ActiveStake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveStake.Merge(m, src)
}
func (m *ActiveStake) XXX_Size() int {
	return xxx_messageInfo_ActiveStake.Size(m)
}
func (m *ActiveStake) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveStake.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveStake proto.InternalMessageInfo

func (m *ActiveStake) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ActiveStake) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *ActiveStake) GetStakeStatus() string {
	if m != nil {
		return m.StakeStatus
	}
	return ""
}

func (m *ActiveStake) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *ActiveStake) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type GetActiveStakesResponse struct {
	ActStake             *ActiveStake     `protobuf:"bytes,1,opt,name=act_stake,json=actStake,proto3" json:"act_stake,omitempty"`
	UserProfile          *ProfileResponse `protobuf:"bytes,2,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetActiveStakesResponse) Reset()         { *m = GetActiveStakesResponse{} }
func (m *GetActiveStakesResponse) String() string { return proto.CompactTextString(m) }
func (*GetActiveStakesResponse) ProtoMessage()    {}
func (*GetActiveStakesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{8}
}

func (m *GetActiveStakesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActiveStakesResponse.Unmarshal(m, b)
}
func (m *GetActiveStakesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActiveStakesResponse.Marshal(b, m, deterministic)
}
func (m *GetActiveStakesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActiveStakesResponse.Merge(m, src)
}
func (m *GetActiveStakesResponse) XXX_Size() int {
	return xxx_messageInfo_GetActiveStakesResponse.Size(m)
}
func (m *GetActiveStakesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActiveStakesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetActiveStakesResponse proto.InternalMessageInfo

func (m *GetActiveStakesResponse) GetActStake() *ActiveStake {
	if m != nil {
		return m.ActStake
	}
	return nil
}

func (m *GetActiveStakesResponse) GetUserProfile() *ProfileResponse {
	if m != nil {
		return m.UserProfile
	}
	return nil
}

type StakingHistoryRequest struct {
	OrgId                int64                `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Currency             string               `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	From                 *timestamp.Timestamp `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	Till                 *timestamp.Timestamp `protobuf:"bytes,6,opt,name=till,proto3" json:"till,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StakingHistoryRequest) Reset()         { *m = StakingHistoryRequest{} }
func (m *StakingHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*StakingHistoryRequest) ProtoMessage()    {}
func (*StakingHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{9}
}

func (m *StakingHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakingHistoryRequest.Unmarshal(m, b)
}
func (m *StakingHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakingHistoryRequest.Marshal(b, m, deterministic)
}
func (m *StakingHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakingHistoryRequest.Merge(m, src)
}
func (m *StakingHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_StakingHistoryRequest.Size(m)
}
func (m *StakingHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StakingHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StakingHistoryRequest proto.InternalMessageInfo

func (m *StakingHistoryRequest) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *StakingHistoryRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *StakingHistoryRequest) GetFrom() *timestamp.Timestamp {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *StakingHistoryRequest) GetTill() *timestamp.Timestamp {
	if m != nil {
		return m.Till
	}
	return nil
}

type Stake struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Amount               string               `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Active               bool                 `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Stake) Reset()         { *m = Stake{} }
func (m *Stake) String() string { return proto.CompactTextString(m) }
func (*Stake) ProtoMessage()    {}
func (*Stake) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{10}
}

func (m *Stake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stake.Unmarshal(m, b)
}
func (m *Stake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stake.Marshal(b, m, deterministic)
}
func (m *Stake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stake.Merge(m, src)
}
func (m *Stake) XXX_Size() int {
	return xxx_messageInfo_Stake.Size(m)
}
func (m *Stake) XXX_DiscardUnknown() {
	xxx_messageInfo_Stake.DiscardUnknown(m)
}

var xxx_messageInfo_Stake proto.InternalMessageInfo

func (m *Stake) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Stake) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Stake) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *Stake) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *Stake) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type StakingHistory struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Amount               string               `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Type                 string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Stake                *Stake               `protobuf:"bytes,4,opt,name=stake,proto3" json:"stake,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StakingHistory) Reset()         { *m = StakingHistory{} }
func (m *StakingHistory) String() string { return proto.CompactTextString(m) }
func (*StakingHistory) ProtoMessage()    {}
func (*StakingHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{11}
}

func (m *StakingHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakingHistory.Unmarshal(m, b)
}
func (m *StakingHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakingHistory.Marshal(b, m, deterministic)
}
func (m *StakingHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakingHistory.Merge(m, src)
}
func (m *StakingHistory) XXX_Size() int {
	return xxx_messageInfo_StakingHistory.Size(m)
}
func (m *StakingHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_StakingHistory.DiscardUnknown(m)
}

var xxx_messageInfo_StakingHistory proto.InternalMessageInfo

func (m *StakingHistory) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *StakingHistory) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *StakingHistory) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *StakingHistory) GetStake() *Stake {
	if m != nil {
		return m.Stake
	}
	return nil
}

type StakingHistoryResponse struct {
	UserProfile          *ProfileResponse  `protobuf:"bytes,1,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	StakingHist          []*StakingHistory `protobuf:"bytes,2,rep,name=staking_hist,json=stakingHist,proto3" json:"staking_hist,omitempty"`
	Count                int64             `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StakingHistoryResponse) Reset()         { *m = StakingHistoryResponse{} }
func (m *StakingHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*StakingHistoryResponse) ProtoMessage()    {}
func (*StakingHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{12}
}

func (m *StakingHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakingHistoryResponse.Unmarshal(m, b)
}
func (m *StakingHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakingHistoryResponse.Marshal(b, m, deterministic)
}
func (m *StakingHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakingHistoryResponse.Merge(m, src)
}
func (m *StakingHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_StakingHistoryResponse.Size(m)
}
func (m *StakingHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StakingHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StakingHistoryResponse proto.InternalMessageInfo

func (m *StakingHistoryResponse) GetUserProfile() *ProfileResponse {
	if m != nil {
		return m.UserProfile
	}
	return nil
}

func (m *StakingHistoryResponse) GetStakingHist() []*StakingHistory {
	if m != nil {
		return m.StakingHist
	}
	return nil
}

func (m *StakingHistoryResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type StakingPercentageRequest struct {
	OrgId                int64    `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StakingPercentageRequest) Reset()         { *m = StakingPercentageRequest{} }
func (m *StakingPercentageRequest) String() string { return proto.CompactTextString(m) }
func (*StakingPercentageRequest) ProtoMessage()    {}
func (*StakingPercentageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{13}
}

func (m *StakingPercentageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakingPercentageRequest.Unmarshal(m, b)
}
func (m *StakingPercentageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakingPercentageRequest.Marshal(b, m, deterministic)
}
func (m *StakingPercentageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakingPercentageRequest.Merge(m, src)
}
func (m *StakingPercentageRequest) XXX_Size() int {
	return xxx_messageInfo_StakingPercentageRequest.Size(m)
}
func (m *StakingPercentageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StakingPercentageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StakingPercentageRequest proto.InternalMessageInfo

func (m *StakingPercentageRequest) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *StakingPercentageRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type StakingPercentageResponse struct {
	StakingPercentage    float64  `protobuf:"fixed64,1,opt,name=staking_percentage,json=stakingPercentage,proto3" json:"staking_percentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StakingPercentageResponse) Reset()         { *m = StakingPercentageResponse{} }
func (m *StakingPercentageResponse) String() string { return proto.CompactTextString(m) }
func (*StakingPercentageResponse) ProtoMessage()    {}
func (*StakingPercentageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{14}
}

func (m *StakingPercentageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakingPercentageResponse.Unmarshal(m, b)
}
func (m *StakingPercentageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakingPercentageResponse.Marshal(b, m, deterministic)
}
func (m *StakingPercentageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakingPercentageResponse.Merge(m, src)
}
func (m *StakingPercentageResponse) XXX_Size() int {
	return xxx_messageInfo_StakingPercentageResponse.Size(m)
}
func (m *StakingPercentageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StakingPercentageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StakingPercentageResponse proto.InternalMessageInfo

func (m *StakingPercentageResponse) GetStakingPercentage() float64 {
	if m != nil {
		return m.StakingPercentage
	}
	return 0
}

func init() {
	proto.RegisterType((*StakingRevenueRequest)(nil), "appserver_serves_ui.StakingRevenueRequest")
	proto.RegisterType((*StakingRevenueResponse)(nil), "appserver_serves_ui.StakingRevenueResponse")
	proto.RegisterType((*StakeRequest)(nil), "appserver_serves_ui.StakeRequest")
	proto.RegisterType((*StakeResponse)(nil), "appserver_serves_ui.StakeResponse")
	proto.RegisterType((*UnstakeRequest)(nil), "appserver_serves_ui.UnstakeRequest")
	proto.RegisterType((*UnstakeResponse)(nil), "appserver_serves_ui.UnstakeResponse")
	proto.RegisterType((*GetActiveStakesRequest)(nil), "appserver_serves_ui.GetActiveStakesRequest")
	proto.RegisterType((*ActiveStake)(nil), "appserver_serves_ui.ActiveStake")
	proto.RegisterType((*GetActiveStakesResponse)(nil), "appserver_serves_ui.GetActiveStakesResponse")
	proto.RegisterType((*StakingHistoryRequest)(nil), "appserver_serves_ui.StakingHistoryRequest")
	proto.RegisterType((*Stake)(nil), "appserver_serves_ui.Stake")
	proto.RegisterType((*StakingHistory)(nil), "appserver_serves_ui.StakingHistory")
	proto.RegisterType((*StakingHistoryResponse)(nil), "appserver_serves_ui.StakingHistoryResponse")
	proto.RegisterType((*StakingPercentageRequest)(nil), "appserver_serves_ui.StakingPercentageRequest")
	proto.RegisterType((*StakingPercentageResponse)(nil), "appserver_serves_ui.StakingPercentageResponse")
}

func init() { proto.RegisterFile("staking.proto", fileDescriptor_289e7c8aea278311) }

var fileDescriptor_289e7c8aea278311 = []byte{
	// 847 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0xd7, 0xe4, 0xdf, 0x26, 0xcf, 0xdd, 0xac, 0x76, 0xd8, 0x2d, 0xc1, 0x80, 0x36, 0x3b, 0x14,
	0x14, 0xa5, 0xd4, 0xa9, 0x82, 0x90, 0x00, 0x89, 0x03, 0x42, 0xa2, 0xfc, 0x11, 0x52, 0xe5, 0xc2,
	0x81, 0x93, 0xe5, 0x3a, 0xd3, 0xd4, 0x22, 0x19, 0x9b, 0x99, 0x71, 0xa4, 0x0a, 0xc1, 0x81, 0xaf,
	0xd0, 0x0b, 0x57, 0x4e, 0x20, 0xbe, 0x01, 0x27, 0xee, 0x5c, 0xf9, 0x0a, 0x7c, 0x09, 0x6e, 0xc8,
	0x33, 0x63, 0x27, 0x4e, 0x9d, 0xc4, 0x6d, 0xd1, 0x9e, 0x92, 0x37, 0xfe, 0xbd, 0x79, 0xbf, 0xf7,
	0xde, 0xef, 0x3d, 0x1b, 0x1e, 0x0a, 0xe9, 0x7f, 0x1b, 0xb2, 0xa9, 0x13, 0xf3, 0x48, 0x46, 0xf8,
	0x25, 0x3f, 0x8e, 0x05, 0xe5, 0x0b, 0xca, 0x3d, 0xf5, 0x23, 0xbc, 0x24, 0xb4, 0x5f, 0x9b, 0x46,
	0xd1, 0x74, 0x46, 0x47, 0x7e, 0x1c, 0x8e, 0x7c, 0xc6, 0x22, 0xe9, 0xcb, 0x30, 0x62, 0x42, 0xbb,
	0xd8, 0xdd, 0x90, 0x49, 0xca, 0x99, 0x3f, 0x33, 0xf6, 0x33, 0x83, 0x56, 0xd6, 0x79, 0x72, 0x31,
	0x92, 0xe1, 0x9c, 0x0a, 0xe9, 0xcf, 0x63, 0x0d, 0x20, 0xbf, 0x23, 0x78, 0x7a, 0xa6, 0xa3, 0xba,
	0x74, 0x41, 0x59, 0x42, 0x5d, 0xfa, 0x5d, 0x42, 0x85, 0xc4, 0x4f, 0xa1, 0x15, 0xf1, 0xa9, 0x17,
	0x4e, 0x7a, 0xa8, 0x8f, 0x06, 0x75, 0xb7, 0x19, 0xf1, 0xe9, 0x67, 0x13, 0x6c, 0x43, 0x3b, 0x48,
	0x38, 0xa7, 0x2c, 0xb8, 0xea, 0xd5, 0xfa, 0x68, 0xd0, 0x71, 0x73, 0x1b, 0x3b, 0xd0, 0xb8, 0xe0,
	0xd1, 0xbc, 0x57, 0xef, 0xa3, 0x81, 0x35, 0xb6, 0x1d, 0x1d, 0xdc, 0xc9, 0x82, 0x3b, 0x5f, 0x65,
	0xc1, 0x5d, 0x85, 0x4b, 0xf1, 0x32, 0x9c, 0xcd, 0x7a, 0x8d, 0xdd, 0xf8, 0x14, 0x47, 0x8e, 0x61,
	0x7f, 0x9d, 0xab, 0x88, 0x23, 0x26, 0x28, 0xde, 0x87, 0x96, 0x3f, 0x8f, 0x12, 0x26, 0x15, 0xd9,
	0x8e, 0x6b, 0x2c, 0xf2, 0x0d, 0xec, 0xa5, 0x1e, 0xbb, 0x92, 0x5a, 0xba, 0xd7, 0x56, 0xdd, 0x0b,
	0xc9, 0xd6, 0x8b, 0xc9, 0x92, 0x18, 0x1e, 0x9a, 0xab, 0x97, 0x1c, 0x84, 0xf4, 0x65, 0x22, 0x32,
	0x0e, 0xda, 0xc2, 0x27, 0xb0, 0x97, 0x08, 0xca, 0xbd, 0x98, 0x47, 0x17, 0xe1, 0x8c, 0xaa, 0x10,
	0xd6, 0xf8, 0xc0, 0x29, 0xe9, 0xae, 0x73, 0xaa, 0x31, 0xd9, 0x9d, 0xae, 0x95, 0x7a, 0x9a, 0x43,
	0xf2, 0x31, 0x74, 0xbf, 0x66, 0xa2, 0x42, 0x3a, 0x5b, 0x7a, 0x44, 0x38, 0x3c, 0xca, 0x2f, 0x79,
	0x51, 0xc4, 0xbf, 0x80, 0xfd, 0x13, 0x2a, 0x3f, 0x0a, 0x64, 0xb8, 0xa0, 0xaa, 0x66, 0xe2, 0x1e,
	0x09, 0xfc, 0x85, 0xc0, 0x5a, 0xb9, 0x0a, 0x77, 0xa1, 0x96, 0xbb, 0xd7, 0xc2, 0xd5, 0x5e, 0xd6,
	0x0b, 0xbd, 0x7c, 0x0e, 0x7b, 0x2a, 0x6d, 0xcf, 0xe4, 0xda, 0x50, 0x4f, 0x2d, 0x75, 0x76, 0xa6,
	0x13, 0x7e, 0x1f, 0x40, 0x48, 0x9f, 0x4b, 0x2f, 0x9d, 0x92, 0x5e, 0x73, 0xa7, 0x2a, 0x3b, 0x0a,
	0x9d, 0xda, 0xf8, 0x5d, 0x68, 0x53, 0x36, 0xd1, 0x8e, 0xad, 0x9d, 0x8e, 0x0f, 0x28, 0x9b, 0xa4,
	0x16, 0xf9, 0x05, 0xc1, 0xcb, 0x37, 0x4a, 0x63, 0xda, 0xf2, 0x21, 0x74, 0xfc, 0x40, 0x7a, 0x8a,
	0xa0, 0xca, 0xcf, 0x1a, 0xf7, 0x4b, 0x6b, 0xbf, 0xe2, 0xed, 0xb6, 0xfd, 0x40, 0xea, 0xba, 0xfc,
	0x6f, 0xdd, 0x5b, 0x59, 0x11, 0x9f, 0x86, 0x42, 0x46, 0xfc, 0xea, 0x16, 0xdd, 0x6b, 0x6c, 0x58,
	0x11, 0xcd, 0x5b, 0xae, 0x88, 0x56, 0xc5, 0x15, 0xf1, 0x07, 0x82, 0x66, 0xb9, 0x2e, 0x8a, 0xcd,
	0xad, 0xdd, 0xb5, 0xb9, 0xf5, 0xca, 0xcd, 0x5d, 0x51, 0x62, 0xa3, 0xa0, 0xc4, 0xf4, 0x5c, 0xb5,
	0x4c, 0x55, 0xa1, 0xed, 0x1a, 0x8b, 0xfc, 0x86, 0xa0, 0x5b, 0x2c, 0x34, 0x7e, 0x0f, 0x3a, 0xf9,
	0xc6, 0x36, 0x1a, 0xd8, 0xca, 0x39, 0x07, 0x6f, 0x5c, 0x69, 0x18, 0x1a, 0xf2, 0x2a, 0xa6, 0x66,
	0x38, 0xd4, 0x7f, 0x7c, 0x0c, 0x4d, 0xad, 0xb2, 0x6c, 0x11, 0x97, 0x69, 0x44, 0xeb, 0x4b, 0x03,
	0xc9, 0x9f, 0x28, 0x5f, 0xc5, 0xb9, 0x26, 0x8c, 0x6c, 0xd7, 0x75, 0x87, 0xee, 0xa8, 0x3b, 0xfc,
	0x89, 0x1e, 0xd8, 0x90, 0x4d, 0xbd, 0xcb, 0x50, 0xa4, 0x79, 0xd4, 0x07, 0xd6, 0xf8, 0x8d, 0x8d,
	0xe4, 0x56, 0xb8, 0x58, 0x62, 0x69, 0xe3, 0x27, 0xd0, 0x0c, 0xf2, 0x7d, 0x50, 0x77, 0xb5, 0x41,
	0xbe, 0x84, 0x9e, 0x71, 0x3a, 0xa5, 0x3c, 0xa0, 0x4c, 0xfa, 0xd3, 0xfb, 0xac, 0xd5, 0xcf, 0xe1,
	0x95, 0x92, 0xeb, 0x4c, 0x49, 0x8e, 0x00, 0x67, 0x99, 0xc4, 0xf9, 0x53, 0x75, 0x37, 0x72, 0x1f,
	0x8b, 0x75, 0xb7, 0xf1, 0xbf, 0xad, 0x5c, 0x07, 0x67, 0x94, 0x2f, 0xc2, 0x80, 0xe2, 0x45, 0xa6,
	0xea, 0xe7, 0x5b, 0x7a, 0xa3, 0xd9, 0xdb, 0x64, 0x1b, 0x44, 0x33, 0x22, 0x6f, 0xfd, 0xf4, 0xf7,
	0x3f, 0xd7, 0xb5, 0x3e, 0x79, 0x55, 0x7d, 0x47, 0x18, 0x0a, 0xa3, 0xef, 0x75, 0xd6, 0x3f, 0xa8,
	0x03, 0xfa, 0x01, 0x1a, 0xe2, 0x1f, 0xe1, 0x81, 0x79, 0x5b, 0xe0, 0xf2, 0xc2, 0x17, 0x5f, 0x48,
	0xf6, 0xc1, 0x76, 0x90, 0x89, 0x3e, 0x50, 0xd1, 0x09, 0x79, 0xbd, 0x3c, 0x7a, 0xc2, 0xf2, 0xf8,
	0x3f, 0x23, 0x78, 0xb4, 0xb6, 0x1f, 0xf1, 0x61, 0x69, 0x8c, 0xf2, 0x17, 0x8c, 0xfd, 0x76, 0x35,
	0xb0, 0x21, 0x36, 0x54, 0xc4, 0x0e, 0x30, 0x29, 0x27, 0xa6, 0xe7, 0x54, 0x68, 0x1a, 0xd7, 0x08,
	0x1e, 0x9f, 0x50, 0x59, 0xfc, 0x20, 0xc1, 0xc3, 0x6d, 0xf2, 0x2c, 0x7e, 0x61, 0xd9, 0x87, 0x95,
	0xb0, 0x86, 0xda, 0x9b, 0x8a, 0xda, 0x33, 0xbc, 0xa1, 0x66, 0xdc, 0xc4, 0x2f, 0xb2, 0xca, 0xd6,
	0xc8, 0xb0, 0xca, 0xd0, 0x54, 0x61, 0xb5, 0x36, 0xec, 0xbb, 0x58, 0x5d, 0x9a, 0xf8, 0xbf, 0x22,
	0x78, 0xb2, 0x64, 0xb5, 0x94, 0x3a, 0x3e, 0xda, 0x16, 0xec, 0xc6, 0x60, 0xda, 0x4e, 0x55, 0xb8,
	0xa1, 0x77, 0xac, 0xe8, 0x0d, 0xf1, 0x60, 0xb3, 0xcc, 0x8b, 0x43, 0x79, 0xde, 0x52, 0x5b, 0xf5,
	0x9d, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x69, 0x4a, 0xf8, 0xe0, 0x8b, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StakingServiceClient is the client API for StakingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StakingServiceClient interface {
	Stake(ctx context.Context, in *StakeRequest, opts ...grpc.CallOption) (*StakeResponse, error)
	Unstake(ctx context.Context, in *UnstakeRequest, opts ...grpc.CallOption) (*UnstakeResponse, error)
	GetActiveStakes(ctx context.Context, in *GetActiveStakesRequest, opts ...grpc.CallOption) (*GetActiveStakesResponse, error)
	GetStakingRevenue(ctx context.Context, in *StakingRevenueRequest, opts ...grpc.CallOption) (*StakingRevenueResponse, error)
	GetStakingHistory(ctx context.Context, in *StakingHistoryRequest, opts ...grpc.CallOption) (*StakingHistoryResponse, error)
	GetStakingPercentage(ctx context.Context, in *StakingPercentageRequest, opts ...grpc.CallOption) (*StakingPercentageResponse, error)
}

type stakingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStakingServiceClient(cc grpc.ClientConnInterface) StakingServiceClient {
	return &stakingServiceClient{cc}
}

func (c *stakingServiceClient) Stake(ctx context.Context, in *StakeRequest, opts ...grpc.CallOption) (*StakeResponse, error) {
	out := new(StakeResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.StakingService/Stake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stakingServiceClient) Unstake(ctx context.Context, in *UnstakeRequest, opts ...grpc.CallOption) (*UnstakeResponse, error) {
	out := new(UnstakeResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.StakingService/Unstake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stakingServiceClient) GetActiveStakes(ctx context.Context, in *GetActiveStakesRequest, opts ...grpc.CallOption) (*GetActiveStakesResponse, error) {
	out := new(GetActiveStakesResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.StakingService/GetActiveStakes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stakingServiceClient) GetStakingRevenue(ctx context.Context, in *StakingRevenueRequest, opts ...grpc.CallOption) (*StakingRevenueResponse, error) {
	out := new(StakingRevenueResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.StakingService/GetStakingRevenue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stakingServiceClient) GetStakingHistory(ctx context.Context, in *StakingHistoryRequest, opts ...grpc.CallOption) (*StakingHistoryResponse, error) {
	out := new(StakingHistoryResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.StakingService/GetStakingHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stakingServiceClient) GetStakingPercentage(ctx context.Context, in *StakingPercentageRequest, opts ...grpc.CallOption) (*StakingPercentageResponse, error) {
	out := new(StakingPercentageResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.StakingService/GetStakingPercentage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StakingServiceServer is the server API for StakingService service.
type StakingServiceServer interface {
	Stake(context.Context, *StakeRequest) (*StakeResponse, error)
	Unstake(context.Context, *UnstakeRequest) (*UnstakeResponse, error)
	GetActiveStakes(context.Context, *GetActiveStakesRequest) (*GetActiveStakesResponse, error)
	GetStakingRevenue(context.Context, *StakingRevenueRequest) (*StakingRevenueResponse, error)
	GetStakingHistory(context.Context, *StakingHistoryRequest) (*StakingHistoryResponse, error)
	GetStakingPercentage(context.Context, *StakingPercentageRequest) (*StakingPercentageResponse, error)
}

// UnimplementedStakingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStakingServiceServer struct {
}

func (*UnimplementedStakingServiceServer) Stake(ctx context.Context, req *StakeRequest) (*StakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stake not implemented")
}
func (*UnimplementedStakingServiceServer) Unstake(ctx context.Context, req *UnstakeRequest) (*UnstakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unstake not implemented")
}
func (*UnimplementedStakingServiceServer) GetActiveStakes(ctx context.Context, req *GetActiveStakesRequest) (*GetActiveStakesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActiveStakes not implemented")
}
func (*UnimplementedStakingServiceServer) GetStakingRevenue(ctx context.Context, req *StakingRevenueRequest) (*StakingRevenueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStakingRevenue not implemented")
}
func (*UnimplementedStakingServiceServer) GetStakingHistory(ctx context.Context, req *StakingHistoryRequest) (*StakingHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStakingHistory not implemented")
}
func (*UnimplementedStakingServiceServer) GetStakingPercentage(ctx context.Context, req *StakingPercentageRequest) (*StakingPercentageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStakingPercentage not implemented")
}

func RegisterStakingServiceServer(s *grpc.Server, srv StakingServiceServer) {
	s.RegisterService(&_StakingService_serviceDesc, srv)
}

func _StakingService_Stake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StakeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StakingServiceServer).Stake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.StakingService/Stake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StakingServiceServer).Stake(ctx, req.(*StakeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StakingService_Unstake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnstakeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StakingServiceServer).Unstake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.StakingService/Unstake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StakingServiceServer).Unstake(ctx, req.(*UnstakeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StakingService_GetActiveStakes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActiveStakesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StakingServiceServer).GetActiveStakes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.StakingService/GetActiveStakes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StakingServiceServer).GetActiveStakes(ctx, req.(*GetActiveStakesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StakingService_GetStakingRevenue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StakingRevenueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StakingServiceServer).GetStakingRevenue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.StakingService/GetStakingRevenue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StakingServiceServer).GetStakingRevenue(ctx, req.(*StakingRevenueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StakingService_GetStakingHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StakingHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StakingServiceServer).GetStakingHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.StakingService/GetStakingHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StakingServiceServer).GetStakingHistory(ctx, req.(*StakingHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StakingService_GetStakingPercentage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StakingPercentageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StakingServiceServer).GetStakingPercentage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.StakingService/GetStakingPercentage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StakingServiceServer).GetStakingPercentage(ctx, req.(*StakingPercentageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StakingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appserver_serves_ui.StakingService",
	HandlerType: (*StakingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Stake",
			Handler:    _StakingService_Stake_Handler,
		},
		{
			MethodName: "Unstake",
			Handler:    _StakingService_Unstake_Handler,
		},
		{
			MethodName: "GetActiveStakes",
			Handler:    _StakingService_GetActiveStakes_Handler,
		},
		{
			MethodName: "GetStakingRevenue",
			Handler:    _StakingService_GetStakingRevenue_Handler,
		},
		{
			MethodName: "GetStakingHistory",
			Handler:    _StakingService_GetStakingHistory_Handler,
		},
		{
			MethodName: "GetStakingPercentage",
			Handler:    _StakingService_GetStakingPercentage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "staking.proto",
}
