syntax = "proto3";

package appserver_serves_ui;
option go_package = "github.com/mxc-foundation/lpwan-app-server/api/appserver-serves-ui;appserver_serves_ui";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// ProvisionedDeviceService is the service managing the devices with Provision ID.
service ProvisionedDeviceService {
    // Create - creates the given provisioned device.
    rpc Create (CreateProvisionedDeviceRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/device-provision"
            body: "*"
        };
    }

    // Get - returns the provision info of a device matching the given Provision ID.
    rpc Get (GetProvisionedDeviceRequest) returns (GetProvisionedDeviceResponse) {
        option (google.api.http) = {
            get: "/api/device-provision/{provisionId}"
        };
    }
}

message ProvisionedDevice {
    // Device EUI (HEX string without 0x prefix).
    string provisionId = 1;

    // Name of the device (if left blank, it will be set to the DevEUI).
    string name = 2;

    // ID of the application to which the device must be added.
    // It is possible to move a device to a different application on update,
    // given that both the old and the new application share the same
    // service-profile.
    int64 application_id = 3 [json_name = "applicationID"];

    // Description of the device.
    string description = 4;

    // DeviceProfileID attached to the device.
    string device_profile_id = 5 [json_name = "deviceProfileID"];

    // Skip frame-counter checks (this is insecure, but could be helpful for debugging).
    bool skip_f_cnt_check = 6;

    // Reference altitude.
    // When using geolocation, this altitude will be used as a reference
    // (when supported by the geolocation-server) to increase geolocation
    // accuracy.
    double reference_altitude = 7;

    // Variables (user defined).
    // These variables can be used together with integrations to store tokens /
    // secrets that must be configured per device. These variables are not
    // exposed in the event payloads.
    map<string, string> variables = 8;

    // Tags (user defined).
    // These tags are exposed in the event payloads or to integration. Tags are
    // intended for aggregation and filtering.
    map<string, string> tags = 9;

    // Device is disabled.
    bool is_disabled = 10;
}

message CreateProvisionedDeviceRequest {
    // Device object to create.
    ProvisionedDevice device = 1;
}

message GetProvisionedDeviceRequest {
    // Provision ID (HEX string without 0x prefix).
    string provisionId = 1;
}

message GetProvisionedDeviceResponse {
    // Provision ID (HEX string without 0x prefix).
    string provisionId = 1;

    // Manufacturer info
    sint64 manufacturerId = 2;
    string manufacturerName = 3;

    // Model of the device
    string model = 4;

    // Serial number of the device
    string serialNumber = 5;

    // Is a fixed Device EUI
    bool fixedDevEUI = 6;

    // Device EUI (HEX string without 0x prefix).
    string devEUI = 7;

    // Status. (NEW / PROVISIONED / DISABLED)
    string status = 8;

    // Server added to.
    string server = 9;

    // Timestamp
    google.protobuf.Timestamp timeCreated = 10;
    google.protobuf.Timestamp timeProvisioned = 11;
    google.protobuf.Timestamp timeAddToServer = 12;
}