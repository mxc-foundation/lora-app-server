// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package appserver_serves_ui

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetVersionResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionResponse) Reset()         { *m = GetVersionResponse{} }
func (m *GetVersionResponse) String() string { return proto.CompactTextString(m) }
func (*GetVersionResponse) ProtoMessage()    {}
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *GetVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionResponse.Unmarshal(m, b)
}
func (m *GetVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionResponse.Marshal(b, m, deterministic)
}
func (m *GetVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionResponse.Merge(m, src)
}
func (m *GetVersionResponse) XXX_Size() int {
	return xxx_messageInfo_GetVersionResponse.Size(m)
}
func (m *GetVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionResponse proto.InternalMessageInfo

func (m *GetVersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*GetVersionResponse)(nil), "appserver_serves_ui.GetVersionResponse")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x4e, 0x2c, 0x28, 0x80, 0x08, 0xc4,
	0x83, 0xa9, 0xe2, 0xf8, 0xd2, 0x4c, 0x29, 0x99, 0xf4, 0xfc, 0xfc, 0xf4, 0x9c, 0x54, 0xfd, 0xc4,
	0x82, 0x4c, 0xfd, 0xc4, 0xbc, 0xbc, 0xfc, 0x92, 0xc4, 0x92, 0xcc, 0xfc, 0xbc, 0x62, 0x88, 0x16,
	0x29, 0xc1, 0xd4, 0xdc, 0x82, 0x92, 0x4a, 0x7d, 0x30, 0x09, 0x11, 0x52, 0xd2, 0xe3, 0x12, 0x72,
	0x4f, 0x2d, 0x09, 0x4b, 0x2d, 0x2a, 0xce, 0xcc, 0xcf, 0x0b, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b,
	0x4e, 0x15, 0x92, 0xe0, 0x62, 0x2f, 0x83, 0x08, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0xc1,
	0xb8, 0x46, 0xed, 0x8c, 0x5c, 0x22, 0xbe, 0x46, 0xbe, 0xc1, 0x60, 0x8b, 0x3d, 0xf3, 0xd2, 0xf2,
	0x41, 0xac, 0xcc, 0xe4, 0x54, 0xa1, 0x7c, 0x2e, 0x2e, 0x84, 0x41, 0x42, 0x62, 0x7a, 0x10, 0x87,
	0x40, 0x6c, 0x49, 0x2a, 0x4d, 0xd3, 0x73, 0x05, 0x59, 0x2a, 0xa5, 0xae, 0x87, 0xc5, 0xd5, 0x7a,
	0x98, 0x2e, 0x50, 0x52, 0x68, 0xba, 0xfc, 0x64, 0x32, 0x93, 0x94, 0x90, 0x04, 0xd8, 0x2b, 0x10,
	0x1d, 0xba, 0x99, 0x79, 0x69, 0xf9, 0xfa, 0x50, 0x97, 0x24, 0xb1, 0x81, 0x8d, 0x36, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x14, 0xea, 0xc0, 0x54, 0x16, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// M2MServerInfoServiceClient is the client API for M2MServerInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type M2MServerInfoServiceClient interface {
	// get version
	GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetVersionResponse, error)
}

type m2MServerInfoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewM2MServerInfoServiceClient(cc grpc.ClientConnInterface) M2MServerInfoServiceClient {
	return &m2MServerInfoServiceClient{cc}
}

func (c *m2MServerInfoServiceClient) GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.M2MServerInfoService/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// M2MServerInfoServiceServer is the server API for M2MServerInfoService service.
type M2MServerInfoServiceServer interface {
	// get version
	GetVersion(context.Context, *empty.Empty) (*GetVersionResponse, error)
}

// UnimplementedM2MServerInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedM2MServerInfoServiceServer struct {
}

func (*UnimplementedM2MServerInfoServiceServer) GetVersion(ctx context.Context, req *empty.Empty) (*GetVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}

func RegisterM2MServerInfoServiceServer(s *grpc.Server, srv M2MServerInfoServiceServer) {
	s.RegisterService(&_M2MServerInfoService_serviceDesc, srv)
}

func _M2MServerInfoService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerInfoServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.M2MServerInfoService/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerInfoServiceServer).GetVersion(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _M2MServerInfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appserver_serves_ui.M2MServerInfoService",
	HandlerType: (*M2MServerInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _M2MServerInfoService_GetVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
