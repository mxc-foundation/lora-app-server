// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device.proto

package appserver_serves_ui

import (
	context "context"
	fmt "fmt"
	common "github.com/brocaar/chirpstack-api/go/v3/common"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeviceMode int32

const (
	DeviceMode_DV_INACTIVE              DeviceMode = 0
	DeviceMode_DV_FREE_GATEWAYS_LIMITED DeviceMode = 1
	DeviceMode_DV_WHOLE_NETWORK         DeviceMode = 2
	DeviceMode_DV_DELETED               DeviceMode = 3
)

var DeviceMode_name = map[int32]string{
	0: "DV_INACTIVE",
	1: "DV_FREE_GATEWAYS_LIMITED",
	2: "DV_WHOLE_NETWORK",
	3: "DV_DELETED",
}

var DeviceMode_value = map[string]int32{
	"DV_INACTIVE":              0,
	"DV_FREE_GATEWAYS_LIMITED": 1,
	"DV_WHOLE_NETWORK":         2,
	"DV_DELETED":               3,
}

func (x DeviceMode) String() string {
	return proto.EnumName(DeviceMode_name, int32(x))
}

func (DeviceMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{0}
}

type GetDeviceListRequest struct {
	OrgId                int64    `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceListRequest) Reset()         { *m = GetDeviceListRequest{} }
func (m *GetDeviceListRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceListRequest) ProtoMessage()    {}
func (*GetDeviceListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{0}
}

func (m *GetDeviceListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceListRequest.Unmarshal(m, b)
}
func (m *GetDeviceListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceListRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceListRequest.Merge(m, src)
}
func (m *GetDeviceListRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceListRequest.Size(m)
}
func (m *GetDeviceListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceListRequest proto.InternalMessageInfo

func (m *GetDeviceListRequest) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *GetDeviceListRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetDeviceListRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetDeviceListResponse struct {
	DevProfile           []*DSDeviceProfile `protobuf:"bytes,1,rep,name=dev_profile,json=devProfile,proto3" json:"dev_profile,omitempty"`
	Count                int64              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetDeviceListResponse) Reset()         { *m = GetDeviceListResponse{} }
func (m *GetDeviceListResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceListResponse) ProtoMessage()    {}
func (*GetDeviceListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{1}
}

func (m *GetDeviceListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceListResponse.Unmarshal(m, b)
}
func (m *GetDeviceListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceListResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceListResponse.Merge(m, src)
}
func (m *GetDeviceListResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceListResponse.Size(m)
}
func (m *GetDeviceListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceListResponse proto.InternalMessageInfo

func (m *GetDeviceListResponse) GetDevProfile() []*DSDeviceProfile {
	if m != nil {
		return m.DevProfile
	}
	return nil
}

func (m *GetDeviceListResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetDSDeviceProfileRequest struct {
	OrgId                int64    `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	DevId                int64    `protobuf:"varint,2,opt,name=dev_id,json=devId,proto3" json:"dev_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDSDeviceProfileRequest) Reset()         { *m = GetDSDeviceProfileRequest{} }
func (m *GetDSDeviceProfileRequest) String() string { return proto.CompactTextString(m) }
func (*GetDSDeviceProfileRequest) ProtoMessage()    {}
func (*GetDSDeviceProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{2}
}

func (m *GetDSDeviceProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDSDeviceProfileRequest.Unmarshal(m, b)
}
func (m *GetDSDeviceProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDSDeviceProfileRequest.Marshal(b, m, deterministic)
}
func (m *GetDSDeviceProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDSDeviceProfileRequest.Merge(m, src)
}
func (m *GetDSDeviceProfileRequest) XXX_Size() int {
	return xxx_messageInfo_GetDSDeviceProfileRequest.Size(m)
}
func (m *GetDSDeviceProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDSDeviceProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDSDeviceProfileRequest proto.InternalMessageInfo

func (m *GetDSDeviceProfileRequest) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *GetDSDeviceProfileRequest) GetDevId() int64 {
	if m != nil {
		return m.DevId
	}
	return 0
}

type DSDeviceProfile struct {
	Id                   int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DevEui               string     `protobuf:"bytes,2,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	FkWallet             int64      `protobuf:"varint,3,opt,name=fk_wallet,json=fkWallet,proto3" json:"fk_wallet,omitempty"`
	Mode                 DeviceMode `protobuf:"varint,4,opt,name=mode,proto3,enum=appserver_serves_ui.DeviceMode" json:"mode,omitempty"`
	CreatedAt            string     `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastSeenAt           string     `protobuf:"bytes,6,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	ApplicationId        int64      `protobuf:"varint,7,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	Name                 string     `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DSDeviceProfile) Reset()         { *m = DSDeviceProfile{} }
func (m *DSDeviceProfile) String() string { return proto.CompactTextString(m) }
func (*DSDeviceProfile) ProtoMessage()    {}
func (*DSDeviceProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{3}
}

func (m *DSDeviceProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DSDeviceProfile.Unmarshal(m, b)
}
func (m *DSDeviceProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DSDeviceProfile.Marshal(b, m, deterministic)
}
func (m *DSDeviceProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DSDeviceProfile.Merge(m, src)
}
func (m *DSDeviceProfile) XXX_Size() int {
	return xxx_messageInfo_DSDeviceProfile.Size(m)
}
func (m *DSDeviceProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_DSDeviceProfile.DiscardUnknown(m)
}

var xxx_messageInfo_DSDeviceProfile proto.InternalMessageInfo

func (m *DSDeviceProfile) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DSDeviceProfile) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *DSDeviceProfile) GetFkWallet() int64 {
	if m != nil {
		return m.FkWallet
	}
	return 0
}

func (m *DSDeviceProfile) GetMode() DeviceMode {
	if m != nil {
		return m.Mode
	}
	return DeviceMode_DV_INACTIVE
}

func (m *DSDeviceProfile) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *DSDeviceProfile) GetLastSeenAt() string {
	if m != nil {
		return m.LastSeenAt
	}
	return ""
}

func (m *DSDeviceProfile) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *DSDeviceProfile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetDSDeviceProfileResponse struct {
	DevProfile           *DSDeviceProfile `protobuf:"bytes,1,opt,name=dev_profile,json=devProfile,proto3" json:"dev_profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetDSDeviceProfileResponse) Reset()         { *m = GetDSDeviceProfileResponse{} }
func (m *GetDSDeviceProfileResponse) String() string { return proto.CompactTextString(m) }
func (*GetDSDeviceProfileResponse) ProtoMessage()    {}
func (*GetDSDeviceProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{4}
}

func (m *GetDSDeviceProfileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDSDeviceProfileResponse.Unmarshal(m, b)
}
func (m *GetDSDeviceProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDSDeviceProfileResponse.Marshal(b, m, deterministic)
}
func (m *GetDSDeviceProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDSDeviceProfileResponse.Merge(m, src)
}
func (m *GetDSDeviceProfileResponse) XXX_Size() int {
	return xxx_messageInfo_GetDSDeviceProfileResponse.Size(m)
}
func (m *GetDSDeviceProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDSDeviceProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDSDeviceProfileResponse proto.InternalMessageInfo

func (m *GetDSDeviceProfileResponse) GetDevProfile() *DSDeviceProfile {
	if m != nil {
		return m.DevProfile
	}
	return nil
}

type GetDeviceHistoryRequest struct {
	OrgId                int64    `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	DevId                int64    `protobuf:"varint,2,opt,name=dev_id,json=devId,proto3" json:"dev_id,omitempty"`
	Offset               int64    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int64    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceHistoryRequest) Reset()         { *m = GetDeviceHistoryRequest{} }
func (m *GetDeviceHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceHistoryRequest) ProtoMessage()    {}
func (*GetDeviceHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{5}
}

func (m *GetDeviceHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceHistoryRequest.Unmarshal(m, b)
}
func (m *GetDeviceHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceHistoryRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceHistoryRequest.Merge(m, src)
}
func (m *GetDeviceHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceHistoryRequest.Size(m)
}
func (m *GetDeviceHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceHistoryRequest proto.InternalMessageInfo

func (m *GetDeviceHistoryRequest) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *GetDeviceHistoryRequest) GetDevId() int64 {
	if m != nil {
		return m.DevId
	}
	return 0
}

func (m *GetDeviceHistoryRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetDeviceHistoryRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetDeviceHistoryResponse struct {
	DevHistory           string   `protobuf:"bytes,1,opt,name=dev_history,json=devHistory,proto3" json:"dev_history,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceHistoryResponse) Reset()         { *m = GetDeviceHistoryResponse{} }
func (m *GetDeviceHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceHistoryResponse) ProtoMessage()    {}
func (*GetDeviceHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{6}
}

func (m *GetDeviceHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceHistoryResponse.Unmarshal(m, b)
}
func (m *GetDeviceHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceHistoryResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceHistoryResponse.Merge(m, src)
}
func (m *GetDeviceHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceHistoryResponse.Size(m)
}
func (m *GetDeviceHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceHistoryResponse proto.InternalMessageInfo

func (m *GetDeviceHistoryResponse) GetDevHistory() string {
	if m != nil {
		return m.DevHistory
	}
	return ""
}

type SetDeviceModeRequest struct {
	OrgId                int64      `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	DevId                int64      `protobuf:"varint,2,opt,name=dev_id,json=devId,proto3" json:"dev_id,omitempty"`
	DevMode              DeviceMode `protobuf:"varint,3,opt,name=dev_mode,json=devMode,proto3,enum=appserver_serves_ui.DeviceMode" json:"dev_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SetDeviceModeRequest) Reset()         { *m = SetDeviceModeRequest{} }
func (m *SetDeviceModeRequest) String() string { return proto.CompactTextString(m) }
func (*SetDeviceModeRequest) ProtoMessage()    {}
func (*SetDeviceModeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{7}
}

func (m *SetDeviceModeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDeviceModeRequest.Unmarshal(m, b)
}
func (m *SetDeviceModeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDeviceModeRequest.Marshal(b, m, deterministic)
}
func (m *SetDeviceModeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDeviceModeRequest.Merge(m, src)
}
func (m *SetDeviceModeRequest) XXX_Size() int {
	return xxx_messageInfo_SetDeviceModeRequest.Size(m)
}
func (m *SetDeviceModeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDeviceModeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetDeviceModeRequest proto.InternalMessageInfo

func (m *SetDeviceModeRequest) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *SetDeviceModeRequest) GetDevId() int64 {
	if m != nil {
		return m.DevId
	}
	return 0
}

func (m *SetDeviceModeRequest) GetDevMode() DeviceMode {
	if m != nil {
		return m.DevMode
	}
	return DeviceMode_DV_INACTIVE
}

type SetDeviceModeResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetDeviceModeResponse) Reset()         { *m = SetDeviceModeResponse{} }
func (m *SetDeviceModeResponse) String() string { return proto.CompactTextString(m) }
func (*SetDeviceModeResponse) ProtoMessage()    {}
func (*SetDeviceModeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{8}
}

func (m *SetDeviceModeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDeviceModeResponse.Unmarshal(m, b)
}
func (m *SetDeviceModeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDeviceModeResponse.Marshal(b, m, deterministic)
}
func (m *SetDeviceModeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDeviceModeResponse.Merge(m, src)
}
func (m *SetDeviceModeResponse) XXX_Size() int {
	return xxx_messageInfo_SetDeviceModeResponse.Size(m)
}
func (m *SetDeviceModeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDeviceModeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetDeviceModeResponse proto.InternalMessageInfo

func (m *SetDeviceModeResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type Device struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Name of the device (if left blank, it will be set to the DevEUI).
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// ID of the application to which the device must be added.
	// It is possible to move a device to a different application on update,
	// given that both the old and the new application share the same
	// service-profile.
	ApplicationId int64 `protobuf:"varint,3,opt,name=application_id,json=applicationID,proto3" json:"application_id,omitempty"`
	// Description of the device.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// DeviceProfileID attached to the device.
	DeviceProfileId string `protobuf:"bytes,5,opt,name=device_profile_id,json=deviceProfileID,proto3" json:"device_profile_id,omitempty"`
	// Skip frame-counter checks (this is insecure, but could be helpful for debugging).
	SkipFCntCheck bool `protobuf:"varint,6,opt,name=skip_f_cnt_check,json=skipFCntCheck,proto3" json:"skip_f_cnt_check,omitempty"`
	// Reference altitude.
	// When using geolocation, this altitude will be used as a reference
	// (when supported by the geolocation-server) to increase geolocation
	// accuracy.
	ReferenceAltitude float64 `protobuf:"fixed64,7,opt,name=reference_altitude,json=referenceAltitude,proto3" json:"reference_altitude,omitempty"`
	// Variables (user defined).
	// These variables can be used together with integrations to store tokens /
	// secrets that must be configured per device. These variables are not
	// exposed in the event payloads.
	Variables map[string]string `protobuf:"bytes,8,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Tags (user defined).
	// These tags are exposed in the event payloads or to integration. Tags are
	// intended for aggregation and filtering.
	Tags map[string]string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Device is disabled.
	IsDisabled           bool     `protobuf:"varint,10,opt,name=is_disabled,json=isDisabled,proto3" json:"is_disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{9}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Device) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *Device) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Device) GetDeviceProfileId() string {
	if m != nil {
		return m.DeviceProfileId
	}
	return ""
}

func (m *Device) GetSkipFCntCheck() bool {
	if m != nil {
		return m.SkipFCntCheck
	}
	return false
}

func (m *Device) GetReferenceAltitude() float64 {
	if m != nil {
		return m.ReferenceAltitude
	}
	return 0
}

func (m *Device) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *Device) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Device) GetIsDisabled() bool {
	if m != nil {
		return m.IsDisabled
	}
	return false
}

type DeviceListItem struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Name of the device.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Application ID.
	ApplicationId int64 `protobuf:"varint,3,opt,name=application_id,json=applicationID,proto3" json:"application_id,omitempty"`
	// Description of the device.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Device-profile ID attached to the device.
	DeviceProfileId string `protobuf:"bytes,5,opt,name=device_profile_id,json=deviceProfileID,proto3" json:"device_profile_id,omitempty"`
	// Device-profile name.
	DeviceProfileName string `protobuf:"bytes,6,opt,name=device_profile_name,json=deviceProfileName,proto3" json:"device_profile_name,omitempty"`
	// The device battery status (deprecated, use device_status_battery_level).
	// 0:      The end-device is connected to an external power source
	// 1..254: The battery level, 1 being at minimum and 254 being at maximum
	// 255:    The end-device was not able to measure the battery level
	// 256:    The device-status is not available.
	DeviceStatusBattery uint32 `protobuf:"varint,7,opt,name=device_status_battery,json=deviceStatusBattery,proto3" json:"device_status_battery,omitempty"`
	// The device margin status
	// -32..32: The demodulation SNR ration in dB
	// 256:     The device-status is not available.
	DeviceStatusMargin int32 `protobuf:"varint,8,opt,name=device_status_margin,json=deviceStatusMargin,proto3" json:"device_status_margin,omitempty"`
	// Device is connected to an external power source.
	DeviceStatusExternalPowerSource bool `protobuf:"varint,10,opt,name=device_status_external_power_source,json=deviceStatusExternalPowerSource,proto3" json:"device_status_external_power_source,omitempty"`
	// Device battery status is unavailable.
	DeviceStatusBatteryLevelUnavailable bool `protobuf:"varint,11,opt,name=device_status_battery_level_unavailable,json=deviceStatusBatteryLevelUnavailable,proto3" json:"device_status_battery_level_unavailable,omitempty"`
	// Device battery level as a percentage.
	DeviceStatusBatteryLevel float32 `protobuf:"fixed32,12,opt,name=device_status_battery_level,json=deviceStatusBatteryLevel,proto3" json:"device_status_battery_level,omitempty"`
	// The last time the application-server received any data from the device,
	// or an empty string when the device never sent any data.
	LastSeenAt           *timestamp.Timestamp `protobuf:"bytes,9,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DeviceListItem) Reset()         { *m = DeviceListItem{} }
func (m *DeviceListItem) String() string { return proto.CompactTextString(m) }
func (*DeviceListItem) ProtoMessage()    {}
func (*DeviceListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{10}
}

func (m *DeviceListItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceListItem.Unmarshal(m, b)
}
func (m *DeviceListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceListItem.Marshal(b, m, deterministic)
}
func (m *DeviceListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceListItem.Merge(m, src)
}
func (m *DeviceListItem) XXX_Size() int {
	return xxx_messageInfo_DeviceListItem.Size(m)
}
func (m *DeviceListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceListItem.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceListItem proto.InternalMessageInfo

func (m *DeviceListItem) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *DeviceListItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeviceListItem) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *DeviceListItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DeviceListItem) GetDeviceProfileId() string {
	if m != nil {
		return m.DeviceProfileId
	}
	return ""
}

func (m *DeviceListItem) GetDeviceProfileName() string {
	if m != nil {
		return m.DeviceProfileName
	}
	return ""
}

func (m *DeviceListItem) GetDeviceStatusBattery() uint32 {
	if m != nil {
		return m.DeviceStatusBattery
	}
	return 0
}

func (m *DeviceListItem) GetDeviceStatusMargin() int32 {
	if m != nil {
		return m.DeviceStatusMargin
	}
	return 0
}

func (m *DeviceListItem) GetDeviceStatusExternalPowerSource() bool {
	if m != nil {
		return m.DeviceStatusExternalPowerSource
	}
	return false
}

func (m *DeviceListItem) GetDeviceStatusBatteryLevelUnavailable() bool {
	if m != nil {
		return m.DeviceStatusBatteryLevelUnavailable
	}
	return false
}

func (m *DeviceListItem) GetDeviceStatusBatteryLevel() float32 {
	if m != nil {
		return m.DeviceStatusBatteryLevel
	}
	return 0
}

func (m *DeviceListItem) GetLastSeenAt() *timestamp.Timestamp {
	if m != nil {
		return m.LastSeenAt
	}
	return nil
}

type DeviceKeys struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Network root key (HEX encoded).
	// Note: For LoRaWAN 1.0.x, use this field for the LoRaWAN 1.0.x 'AppKey`!
	NwkKey string `protobuf:"bytes,2,opt,name=nwk_key,json=nwkKey,proto3" json:"nwk_key,omitempty"`
	// Application root key (HEX encoded).
	// Note: This field only needs to be set for LoRaWAN 1.1.x devices!
	AppKey string `protobuf:"bytes,3,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
	// Gen application key (HEX encoded).
	// This is an optional key that only must be set for LORaWAN 1.0.x devices
	// that implement the remote multicast setup specification.
	GenAppKey            string   `protobuf:"bytes,4,opt,name=gen_app_key,json=genAppKey,proto3" json:"gen_app_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceKeys) Reset()         { *m = DeviceKeys{} }
func (m *DeviceKeys) String() string { return proto.CompactTextString(m) }
func (*DeviceKeys) ProtoMessage()    {}
func (*DeviceKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{11}
}

func (m *DeviceKeys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceKeys.Unmarshal(m, b)
}
func (m *DeviceKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceKeys.Marshal(b, m, deterministic)
}
func (m *DeviceKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceKeys.Merge(m, src)
}
func (m *DeviceKeys) XXX_Size() int {
	return xxx_messageInfo_DeviceKeys.Size(m)
}
func (m *DeviceKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceKeys.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceKeys proto.InternalMessageInfo

func (m *DeviceKeys) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *DeviceKeys) GetNwkKey() string {
	if m != nil {
		return m.NwkKey
	}
	return ""
}

func (m *DeviceKeys) GetAppKey() string {
	if m != nil {
		return m.AppKey
	}
	return ""
}

func (m *DeviceKeys) GetGenAppKey() string {
	if m != nil {
		return m.GenAppKey
	}
	return ""
}

type CreateDeviceRequest struct {
	// Device object to create.
	Device               *Device  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDeviceRequest) Reset()         { *m = CreateDeviceRequest{} }
func (m *CreateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceRequest) ProtoMessage()    {}
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{12}
}

func (m *CreateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceRequest.Unmarshal(m, b)
}
func (m *CreateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceRequest.Marshal(b, m, deterministic)
}
func (m *CreateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceRequest.Merge(m, src)
}
func (m *CreateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceRequest.Size(m)
}
func (m *CreateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceRequest proto.InternalMessageInfo

func (m *CreateDeviceRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type GetDeviceRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceRequest) Reset()         { *m = GetDeviceRequest{} }
func (m *GetDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceRequest) ProtoMessage()    {}
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{13}
}

func (m *GetDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceRequest.Unmarshal(m, b)
}
func (m *GetDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceRequest.Merge(m, src)
}
func (m *GetDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceRequest.Size(m)
}
func (m *GetDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceRequest proto.InternalMessageInfo

func (m *GetDeviceRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetDeviceResponse struct {
	// Device object.
	Device *Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	// Last seen timestamp.
	LastSeenAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	// The device battery status
	// 0:      The end-device is connected to an external power source
	// 1..254: The battery level, 1 being at minimum and 254 being at maximum
	// 255:    The end-device was not able to measure the battery level
	// 256:    The device-status is not available.
	DeviceStatusBattery uint32 `protobuf:"varint,6,opt,name=device_status_battery,json=deviceStatusBattery,proto3" json:"device_status_battery,omitempty"`
	// The device margin status
	// -32..32: The demodulation SNR ration in dB
	// 256:     The device-status is not available.
	DeviceStatusMargin int32 `protobuf:"varint,20,opt,name=device_status_margin,json=deviceStatusMargin,proto3" json:"device_status_margin,omitempty"`
	// Device location.
	// This will set when the network-server was able to resolve the location
	// using the geolocation-server.
	Location             *common.Location `protobuf:"bytes,21,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetDeviceResponse) Reset()         { *m = GetDeviceResponse{} }
func (m *GetDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceResponse) ProtoMessage()    {}
func (*GetDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{14}
}

func (m *GetDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceResponse.Unmarshal(m, b)
}
func (m *GetDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceResponse.Merge(m, src)
}
func (m *GetDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceResponse.Size(m)
}
func (m *GetDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceResponse proto.InternalMessageInfo

func (m *GetDeviceResponse) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *GetDeviceResponse) GetLastSeenAt() *timestamp.Timestamp {
	if m != nil {
		return m.LastSeenAt
	}
	return nil
}

func (m *GetDeviceResponse) GetDeviceStatusBattery() uint32 {
	if m != nil {
		return m.DeviceStatusBattery
	}
	return 0
}

func (m *GetDeviceResponse) GetDeviceStatusMargin() int32 {
	if m != nil {
		return m.DeviceStatusMargin
	}
	return 0
}

func (m *GetDeviceResponse) GetLocation() *common.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type ListDeviceRequest struct {
	// Max number of devices to return in the result-set.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Application ID to filter on.
	ApplicationId int64 `protobuf:"varint,3,opt,name=application_id,json=applicationID,proto3" json:"application_id,omitempty"`
	// Search on name or DevEUI.
	Search string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	// Multicast-group ID to filter on (string formatted UUID).
	MulticastGroupId string `protobuf:"bytes,5,opt,name=multicast_group_id,json=multicastGroupID,proto3" json:"multicast_group_id,omitempty"`
	// Service-profile ID to filter on (string formatted UUID).
	ServiceProfileId string `protobuf:"bytes,6,opt,name=service_profile_id,json=serviceProfileID,proto3" json:"service_profile_id,omitempty"`
	// Tags to filter on.
	Tags                 map[string]string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListDeviceRequest) Reset()         { *m = ListDeviceRequest{} }
func (m *ListDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*ListDeviceRequest) ProtoMessage()    {}
func (*ListDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{15}
}

func (m *ListDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceRequest.Unmarshal(m, b)
}
func (m *ListDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceRequest.Marshal(b, m, deterministic)
}
func (m *ListDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceRequest.Merge(m, src)
}
func (m *ListDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_ListDeviceRequest.Size(m)
}
func (m *ListDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceRequest proto.InternalMessageInfo

func (m *ListDeviceRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListDeviceRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListDeviceRequest) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *ListDeviceRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *ListDeviceRequest) GetMulticastGroupId() string {
	if m != nil {
		return m.MulticastGroupId
	}
	return ""
}

func (m *ListDeviceRequest) GetServiceProfileId() string {
	if m != nil {
		return m.ServiceProfileId
	}
	return ""
}

func (m *ListDeviceRequest) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ListDeviceResponse struct {
	// Total number of devices available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Devices within this result-set.
	Result               []*DeviceListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListDeviceResponse) Reset()         { *m = ListDeviceResponse{} }
func (m *ListDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*ListDeviceResponse) ProtoMessage()    {}
func (*ListDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{16}
}

func (m *ListDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceResponse.Unmarshal(m, b)
}
func (m *ListDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceResponse.Marshal(b, m, deterministic)
}
func (m *ListDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceResponse.Merge(m, src)
}
func (m *ListDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_ListDeviceResponse.Size(m)
}
func (m *ListDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceResponse proto.InternalMessageInfo

func (m *ListDeviceResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListDeviceResponse) GetResult() []*DeviceListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type DeleteDeviceRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceRequest) Reset()         { *m = DeleteDeviceRequest{} }
func (m *DeleteDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceRequest) ProtoMessage()    {}
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{17}
}

func (m *DeleteDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceRequest.Unmarshal(m, b)
}
func (m *DeleteDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceRequest.Merge(m, src)
}
func (m *DeleteDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceRequest.Size(m)
}
func (m *DeleteDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceRequest proto.InternalMessageInfo

func (m *DeleteDeviceRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type UpdateDeviceRequest struct {
	// Device object to update.
	Device               *Device  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceRequest) Reset()         { *m = UpdateDeviceRequest{} }
func (m *UpdateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceRequest) ProtoMessage()    {}
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{18}
}

func (m *UpdateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceRequest.Unmarshal(m, b)
}
func (m *UpdateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceRequest.Merge(m, src)
}
func (m *UpdateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceRequest.Size(m)
}
func (m *UpdateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceRequest proto.InternalMessageInfo

func (m *UpdateDeviceRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type CreateDeviceKeysRequest struct {
	// Device-keys object to create.
	DeviceKeys           *DeviceKeys `protobuf:"bytes,1,opt,name=device_keys,json=deviceKeys,proto3" json:"device_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateDeviceKeysRequest) Reset()         { *m = CreateDeviceKeysRequest{} }
func (m *CreateDeviceKeysRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceKeysRequest) ProtoMessage()    {}
func (*CreateDeviceKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{19}
}

func (m *CreateDeviceKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceKeysRequest.Unmarshal(m, b)
}
func (m *CreateDeviceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceKeysRequest.Marshal(b, m, deterministic)
}
func (m *CreateDeviceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceKeysRequest.Merge(m, src)
}
func (m *CreateDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceKeysRequest.Size(m)
}
func (m *CreateDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceKeysRequest proto.InternalMessageInfo

func (m *CreateDeviceKeysRequest) GetDeviceKeys() *DeviceKeys {
	if m != nil {
		return m.DeviceKeys
	}
	return nil
}

type GetDeviceKeysRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceKeysRequest) Reset()         { *m = GetDeviceKeysRequest{} }
func (m *GetDeviceKeysRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceKeysRequest) ProtoMessage()    {}
func (*GetDeviceKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{20}
}

func (m *GetDeviceKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceKeysRequest.Unmarshal(m, b)
}
func (m *GetDeviceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceKeysRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceKeysRequest.Merge(m, src)
}
func (m *GetDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceKeysRequest.Size(m)
}
func (m *GetDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceKeysRequest proto.InternalMessageInfo

func (m *GetDeviceKeysRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetDeviceKeysResponse struct {
	// Device-key object.
	DeviceKeys           *DeviceKeys `protobuf:"bytes,1,opt,name=device_keys,json=deviceKeys,proto3" json:"device_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetDeviceKeysResponse) Reset()         { *m = GetDeviceKeysResponse{} }
func (m *GetDeviceKeysResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceKeysResponse) ProtoMessage()    {}
func (*GetDeviceKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{21}
}

func (m *GetDeviceKeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceKeysResponse.Unmarshal(m, b)
}
func (m *GetDeviceKeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceKeysResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceKeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceKeysResponse.Merge(m, src)
}
func (m *GetDeviceKeysResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceKeysResponse.Size(m)
}
func (m *GetDeviceKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceKeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceKeysResponse proto.InternalMessageInfo

func (m *GetDeviceKeysResponse) GetDeviceKeys() *DeviceKeys {
	if m != nil {
		return m.DeviceKeys
	}
	return nil
}

type UpdateDeviceKeysRequest struct {
	// Device-keys object to update.
	DeviceKeys           *DeviceKeys `protobuf:"bytes,1,opt,name=device_keys,json=deviceKeys,proto3" json:"device_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateDeviceKeysRequest) Reset()         { *m = UpdateDeviceKeysRequest{} }
func (m *UpdateDeviceKeysRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceKeysRequest) ProtoMessage()    {}
func (*UpdateDeviceKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{22}
}

func (m *UpdateDeviceKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceKeysRequest.Unmarshal(m, b)
}
func (m *UpdateDeviceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceKeysRequest.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceKeysRequest.Merge(m, src)
}
func (m *UpdateDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceKeysRequest.Size(m)
}
func (m *UpdateDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceKeysRequest proto.InternalMessageInfo

func (m *UpdateDeviceKeysRequest) GetDeviceKeys() *DeviceKeys {
	if m != nil {
		return m.DeviceKeys
	}
	return nil
}

type DeleteDeviceKeysRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceKeysRequest) Reset()         { *m = DeleteDeviceKeysRequest{} }
func (m *DeleteDeviceKeysRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceKeysRequest) ProtoMessage()    {}
func (*DeleteDeviceKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{23}
}

func (m *DeleteDeviceKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceKeysRequest.Unmarshal(m, b)
}
func (m *DeleteDeviceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceKeysRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceKeysRequest.Merge(m, src)
}
func (m *DeleteDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceKeysRequest.Size(m)
}
func (m *DeleteDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceKeysRequest proto.InternalMessageInfo

func (m *DeleteDeviceKeysRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type DeviceActivation struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Device address (HEX encoded).
	DevAddr string `protobuf:"bytes,2,opt,name=dev_addr,json=devAddr,proto3" json:"dev_addr,omitempty"`
	// Application session key (HEX encoded).
	AppSKey string `protobuf:"bytes,3,opt,name=app_s_key,json=appSKey,proto3" json:"app_s_key,omitempty"`
	// Network session encryption key (HEX encoded).
	NwkSEncKey string `protobuf:"bytes,4,opt,name=nwk_s_enc_key,json=nwkSEncKey,proto3" json:"nwk_s_enc_key,omitempty"`
	// Serving network session integrity key (HEX encoded).
	SNwkSIntKey string `protobuf:"bytes,8,opt,name=s_nwk_s_int_key,json=sNwkSIntKey,proto3" json:"s_nwk_s_int_key,omitempty"`
	// Forwarding network session integrity key (HEX encoded).
	FNwkSIntKey string `protobuf:"bytes,9,opt,name=f_nwk_s_int_key,json=fNwkSIntKey,proto3" json:"f_nwk_s_int_key,omitempty"`
	// Uplink frame-counter.
	FCntUp uint32 `protobuf:"varint,5,opt,name=f_cnt_up,json=fCntUp,proto3" json:"f_cnt_up,omitempty"`
	// Downlink network frame-counter.
	NFCntDown uint32 `protobuf:"varint,6,opt,name=n_f_cnt_down,json=nFCntDown,proto3" json:"n_f_cnt_down,omitempty"`
	// Downlink application frame-counter.
	AFCntDown            uint32   `protobuf:"varint,10,opt,name=a_f_cnt_down,json=aFCntDown,proto3" json:"a_f_cnt_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceActivation) Reset()         { *m = DeviceActivation{} }
func (m *DeviceActivation) String() string { return proto.CompactTextString(m) }
func (*DeviceActivation) ProtoMessage()    {}
func (*DeviceActivation) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{24}
}

func (m *DeviceActivation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceActivation.Unmarshal(m, b)
}
func (m *DeviceActivation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceActivation.Marshal(b, m, deterministic)
}
func (m *DeviceActivation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceActivation.Merge(m, src)
}
func (m *DeviceActivation) XXX_Size() int {
	return xxx_messageInfo_DeviceActivation.Size(m)
}
func (m *DeviceActivation) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceActivation.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceActivation proto.InternalMessageInfo

func (m *DeviceActivation) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *DeviceActivation) GetDevAddr() string {
	if m != nil {
		return m.DevAddr
	}
	return ""
}

func (m *DeviceActivation) GetAppSKey() string {
	if m != nil {
		return m.AppSKey
	}
	return ""
}

func (m *DeviceActivation) GetNwkSEncKey() string {
	if m != nil {
		return m.NwkSEncKey
	}
	return ""
}

func (m *DeviceActivation) GetSNwkSIntKey() string {
	if m != nil {
		return m.SNwkSIntKey
	}
	return ""
}

func (m *DeviceActivation) GetFNwkSIntKey() string {
	if m != nil {
		return m.FNwkSIntKey
	}
	return ""
}

func (m *DeviceActivation) GetFCntUp() uint32 {
	if m != nil {
		return m.FCntUp
	}
	return 0
}

func (m *DeviceActivation) GetNFCntDown() uint32 {
	if m != nil {
		return m.NFCntDown
	}
	return 0
}

func (m *DeviceActivation) GetAFCntDown() uint32 {
	if m != nil {
		return m.AFCntDown
	}
	return 0
}

type ActivateDeviceRequest struct {
	DeviceActivation     *DeviceActivation `protobuf:"bytes,1,opt,name=device_activation,json=deviceActivation,proto3" json:"device_activation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ActivateDeviceRequest) Reset()         { *m = ActivateDeviceRequest{} }
func (m *ActivateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateDeviceRequest) ProtoMessage()    {}
func (*ActivateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{25}
}

func (m *ActivateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateDeviceRequest.Unmarshal(m, b)
}
func (m *ActivateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateDeviceRequest.Marshal(b, m, deterministic)
}
func (m *ActivateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateDeviceRequest.Merge(m, src)
}
func (m *ActivateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_ActivateDeviceRequest.Size(m)
}
func (m *ActivateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateDeviceRequest proto.InternalMessageInfo

func (m *ActivateDeviceRequest) GetDeviceActivation() *DeviceActivation {
	if m != nil {
		return m.DeviceActivation
	}
	return nil
}

type DeactivateDeviceRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeactivateDeviceRequest) Reset()         { *m = DeactivateDeviceRequest{} }
func (m *DeactivateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*DeactivateDeviceRequest) ProtoMessage()    {}
func (*DeactivateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{26}
}

func (m *DeactivateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeactivateDeviceRequest.Unmarshal(m, b)
}
func (m *DeactivateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeactivateDeviceRequest.Marshal(b, m, deterministic)
}
func (m *DeactivateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateDeviceRequest.Merge(m, src)
}
func (m *DeactivateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_DeactivateDeviceRequest.Size(m)
}
func (m *DeactivateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateDeviceRequest proto.InternalMessageInfo

func (m *DeactivateDeviceRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetDeviceActivationRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceActivationRequest) Reset()         { *m = GetDeviceActivationRequest{} }
func (m *GetDeviceActivationRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceActivationRequest) ProtoMessage()    {}
func (*GetDeviceActivationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{27}
}

func (m *GetDeviceActivationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceActivationRequest.Unmarshal(m, b)
}
func (m *GetDeviceActivationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceActivationRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceActivationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceActivationRequest.Merge(m, src)
}
func (m *GetDeviceActivationRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceActivationRequest.Size(m)
}
func (m *GetDeviceActivationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceActivationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceActivationRequest proto.InternalMessageInfo

func (m *GetDeviceActivationRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetDeviceActivationResponse struct {
	// Device-activation object.
	DeviceActivation     *DeviceActivation `protobuf:"bytes,1,opt,name=device_activation,json=deviceActivation,proto3" json:"device_activation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetDeviceActivationResponse) Reset()         { *m = GetDeviceActivationResponse{} }
func (m *GetDeviceActivationResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceActivationResponse) ProtoMessage()    {}
func (*GetDeviceActivationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{28}
}

func (m *GetDeviceActivationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceActivationResponse.Unmarshal(m, b)
}
func (m *GetDeviceActivationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceActivationResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceActivationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceActivationResponse.Merge(m, src)
}
func (m *GetDeviceActivationResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceActivationResponse.Size(m)
}
func (m *GetDeviceActivationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceActivationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceActivationResponse proto.InternalMessageInfo

func (m *GetDeviceActivationResponse) GetDeviceActivation() *DeviceActivation {
	if m != nil {
		return m.DeviceActivation
	}
	return nil
}

type GetRandomDevAddrRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRandomDevAddrRequest) Reset()         { *m = GetRandomDevAddrRequest{} }
func (m *GetRandomDevAddrRequest) String() string { return proto.CompactTextString(m) }
func (*GetRandomDevAddrRequest) ProtoMessage()    {}
func (*GetRandomDevAddrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{29}
}

func (m *GetRandomDevAddrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRandomDevAddrRequest.Unmarshal(m, b)
}
func (m *GetRandomDevAddrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRandomDevAddrRequest.Marshal(b, m, deterministic)
}
func (m *GetRandomDevAddrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRandomDevAddrRequest.Merge(m, src)
}
func (m *GetRandomDevAddrRequest) XXX_Size() int {
	return xxx_messageInfo_GetRandomDevAddrRequest.Size(m)
}
func (m *GetRandomDevAddrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRandomDevAddrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRandomDevAddrRequest proto.InternalMessageInfo

func (m *GetRandomDevAddrRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetRandomDevAddrResponse struct {
	// Device address (HEX encoded).
	DevAddr              string   `protobuf:"bytes,1,opt,name=dev_addr,json=devAddr,proto3" json:"dev_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRandomDevAddrResponse) Reset()         { *m = GetRandomDevAddrResponse{} }
func (m *GetRandomDevAddrResponse) String() string { return proto.CompactTextString(m) }
func (*GetRandomDevAddrResponse) ProtoMessage()    {}
func (*GetRandomDevAddrResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{30}
}

func (m *GetRandomDevAddrResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRandomDevAddrResponse.Unmarshal(m, b)
}
func (m *GetRandomDevAddrResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRandomDevAddrResponse.Marshal(b, m, deterministic)
}
func (m *GetRandomDevAddrResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRandomDevAddrResponse.Merge(m, src)
}
func (m *GetRandomDevAddrResponse) XXX_Size() int {
	return xxx_messageInfo_GetRandomDevAddrResponse.Size(m)
}
func (m *GetRandomDevAddrResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRandomDevAddrResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRandomDevAddrResponse proto.InternalMessageInfo

func (m *GetRandomDevAddrResponse) GetDevAddr() string {
	if m != nil {
		return m.DevAddr
	}
	return ""
}

type StreamDeviceFrameLogsRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamDeviceFrameLogsRequest) Reset()         { *m = StreamDeviceFrameLogsRequest{} }
func (m *StreamDeviceFrameLogsRequest) String() string { return proto.CompactTextString(m) }
func (*StreamDeviceFrameLogsRequest) ProtoMessage()    {}
func (*StreamDeviceFrameLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{31}
}

func (m *StreamDeviceFrameLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceFrameLogsRequest.Unmarshal(m, b)
}
func (m *StreamDeviceFrameLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceFrameLogsRequest.Marshal(b, m, deterministic)
}
func (m *StreamDeviceFrameLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceFrameLogsRequest.Merge(m, src)
}
func (m *StreamDeviceFrameLogsRequest) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceFrameLogsRequest.Size(m)
}
func (m *StreamDeviceFrameLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceFrameLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceFrameLogsRequest proto.InternalMessageInfo

func (m *StreamDeviceFrameLogsRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type StreamDeviceFrameLogsResponse struct {
	// Types that are valid to be assigned to Frame:
	//	*StreamDeviceFrameLogsResponse_UplinkFrame
	//	*StreamDeviceFrameLogsResponse_DownlinkFrame
	Frame                isStreamDeviceFrameLogsResponse_Frame `protobuf_oneof:"frame"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *StreamDeviceFrameLogsResponse) Reset()         { *m = StreamDeviceFrameLogsResponse{} }
func (m *StreamDeviceFrameLogsResponse) String() string { return proto.CompactTextString(m) }
func (*StreamDeviceFrameLogsResponse) ProtoMessage()    {}
func (*StreamDeviceFrameLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{32}
}

func (m *StreamDeviceFrameLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceFrameLogsResponse.Unmarshal(m, b)
}
func (m *StreamDeviceFrameLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceFrameLogsResponse.Marshal(b, m, deterministic)
}
func (m *StreamDeviceFrameLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceFrameLogsResponse.Merge(m, src)
}
func (m *StreamDeviceFrameLogsResponse) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceFrameLogsResponse.Size(m)
}
func (m *StreamDeviceFrameLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceFrameLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceFrameLogsResponse proto.InternalMessageInfo

type isStreamDeviceFrameLogsResponse_Frame interface {
	isStreamDeviceFrameLogsResponse_Frame()
}

type StreamDeviceFrameLogsResponse_UplinkFrame struct {
	UplinkFrame *UplinkFrameLog `protobuf:"bytes,1,opt,name=uplink_frame,json=uplinkFrame,proto3,oneof"`
}

type StreamDeviceFrameLogsResponse_DownlinkFrame struct {
	DownlinkFrame *DownlinkFrameLog `protobuf:"bytes,2,opt,name=downlink_frame,json=downlinkFrame,proto3,oneof"`
}

func (*StreamDeviceFrameLogsResponse_UplinkFrame) isStreamDeviceFrameLogsResponse_Frame() {}

func (*StreamDeviceFrameLogsResponse_DownlinkFrame) isStreamDeviceFrameLogsResponse_Frame() {}

func (m *StreamDeviceFrameLogsResponse) GetFrame() isStreamDeviceFrameLogsResponse_Frame {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *StreamDeviceFrameLogsResponse) GetUplinkFrame() *UplinkFrameLog {
	if x, ok := m.GetFrame().(*StreamDeviceFrameLogsResponse_UplinkFrame); ok {
		return x.UplinkFrame
	}
	return nil
}

func (m *StreamDeviceFrameLogsResponse) GetDownlinkFrame() *DownlinkFrameLog {
	if x, ok := m.GetFrame().(*StreamDeviceFrameLogsResponse_DownlinkFrame); ok {
		return x.DownlinkFrame
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamDeviceFrameLogsResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamDeviceFrameLogsResponse_UplinkFrame)(nil),
		(*StreamDeviceFrameLogsResponse_DownlinkFrame)(nil),
	}
}

type StreamDeviceEventLogsRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamDeviceEventLogsRequest) Reset()         { *m = StreamDeviceEventLogsRequest{} }
func (m *StreamDeviceEventLogsRequest) String() string { return proto.CompactTextString(m) }
func (*StreamDeviceEventLogsRequest) ProtoMessage()    {}
func (*StreamDeviceEventLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{33}
}

func (m *StreamDeviceEventLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceEventLogsRequest.Unmarshal(m, b)
}
func (m *StreamDeviceEventLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceEventLogsRequest.Marshal(b, m, deterministic)
}
func (m *StreamDeviceEventLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceEventLogsRequest.Merge(m, src)
}
func (m *StreamDeviceEventLogsRequest) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceEventLogsRequest.Size(m)
}
func (m *StreamDeviceEventLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceEventLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceEventLogsRequest proto.InternalMessageInfo

func (m *StreamDeviceEventLogsRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type StreamDeviceEventLogsResponse struct {
	// The event type.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// The event payload in JSON encoding.
	PayloadJson          string   `protobuf:"bytes,2,opt,name=payload_json,json=payloadJSON,proto3" json:"payload_json,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamDeviceEventLogsResponse) Reset()         { *m = StreamDeviceEventLogsResponse{} }
func (m *StreamDeviceEventLogsResponse) String() string { return proto.CompactTextString(m) }
func (*StreamDeviceEventLogsResponse) ProtoMessage()    {}
func (*StreamDeviceEventLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{34}
}

func (m *StreamDeviceEventLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceEventLogsResponse.Unmarshal(m, b)
}
func (m *StreamDeviceEventLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceEventLogsResponse.Marshal(b, m, deterministic)
}
func (m *StreamDeviceEventLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceEventLogsResponse.Merge(m, src)
}
func (m *StreamDeviceEventLogsResponse) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceEventLogsResponse.Size(m)
}
func (m *StreamDeviceEventLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceEventLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceEventLogsResponse proto.InternalMessageInfo

func (m *StreamDeviceEventLogsResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *StreamDeviceEventLogsResponse) GetPayloadJson() string {
	if m != nil {
		return m.PayloadJson
	}
	return ""
}

func init() {
	proto.RegisterEnum("appserver_serves_ui.DeviceMode", DeviceMode_name, DeviceMode_value)
	proto.RegisterType((*GetDeviceListRequest)(nil), "appserver_serves_ui.GetDeviceListRequest")
	proto.RegisterType((*GetDeviceListResponse)(nil), "appserver_serves_ui.GetDeviceListResponse")
	proto.RegisterType((*GetDSDeviceProfileRequest)(nil), "appserver_serves_ui.GetDSDeviceProfileRequest")
	proto.RegisterType((*DSDeviceProfile)(nil), "appserver_serves_ui.DSDeviceProfile")
	proto.RegisterType((*GetDSDeviceProfileResponse)(nil), "appserver_serves_ui.GetDSDeviceProfileResponse")
	proto.RegisterType((*GetDeviceHistoryRequest)(nil), "appserver_serves_ui.GetDeviceHistoryRequest")
	proto.RegisterType((*GetDeviceHistoryResponse)(nil), "appserver_serves_ui.GetDeviceHistoryResponse")
	proto.RegisterType((*SetDeviceModeRequest)(nil), "appserver_serves_ui.SetDeviceModeRequest")
	proto.RegisterType((*SetDeviceModeResponse)(nil), "appserver_serves_ui.SetDeviceModeResponse")
	proto.RegisterType((*Device)(nil), "appserver_serves_ui.Device")
	proto.RegisterMapType((map[string]string)(nil), "appserver_serves_ui.Device.TagsEntry")
	proto.RegisterMapType((map[string]string)(nil), "appserver_serves_ui.Device.VariablesEntry")
	proto.RegisterType((*DeviceListItem)(nil), "appserver_serves_ui.DeviceListItem")
	proto.RegisterType((*DeviceKeys)(nil), "appserver_serves_ui.DeviceKeys")
	proto.RegisterType((*CreateDeviceRequest)(nil), "appserver_serves_ui.CreateDeviceRequest")
	proto.RegisterType((*GetDeviceRequest)(nil), "appserver_serves_ui.GetDeviceRequest")
	proto.RegisterType((*GetDeviceResponse)(nil), "appserver_serves_ui.GetDeviceResponse")
	proto.RegisterType((*ListDeviceRequest)(nil), "appserver_serves_ui.ListDeviceRequest")
	proto.RegisterMapType((map[string]string)(nil), "appserver_serves_ui.ListDeviceRequest.TagsEntry")
	proto.RegisterType((*ListDeviceResponse)(nil), "appserver_serves_ui.ListDeviceResponse")
	proto.RegisterType((*DeleteDeviceRequest)(nil), "appserver_serves_ui.DeleteDeviceRequest")
	proto.RegisterType((*UpdateDeviceRequest)(nil), "appserver_serves_ui.UpdateDeviceRequest")
	proto.RegisterType((*CreateDeviceKeysRequest)(nil), "appserver_serves_ui.CreateDeviceKeysRequest")
	proto.RegisterType((*GetDeviceKeysRequest)(nil), "appserver_serves_ui.GetDeviceKeysRequest")
	proto.RegisterType((*GetDeviceKeysResponse)(nil), "appserver_serves_ui.GetDeviceKeysResponse")
	proto.RegisterType((*UpdateDeviceKeysRequest)(nil), "appserver_serves_ui.UpdateDeviceKeysRequest")
	proto.RegisterType((*DeleteDeviceKeysRequest)(nil), "appserver_serves_ui.DeleteDeviceKeysRequest")
	proto.RegisterType((*DeviceActivation)(nil), "appserver_serves_ui.DeviceActivation")
	proto.RegisterType((*ActivateDeviceRequest)(nil), "appserver_serves_ui.ActivateDeviceRequest")
	proto.RegisterType((*DeactivateDeviceRequest)(nil), "appserver_serves_ui.DeactivateDeviceRequest")
	proto.RegisterType((*GetDeviceActivationRequest)(nil), "appserver_serves_ui.GetDeviceActivationRequest")
	proto.RegisterType((*GetDeviceActivationResponse)(nil), "appserver_serves_ui.GetDeviceActivationResponse")
	proto.RegisterType((*GetRandomDevAddrRequest)(nil), "appserver_serves_ui.GetRandomDevAddrRequest")
	proto.RegisterType((*GetRandomDevAddrResponse)(nil), "appserver_serves_ui.GetRandomDevAddrResponse")
	proto.RegisterType((*StreamDeviceFrameLogsRequest)(nil), "appserver_serves_ui.StreamDeviceFrameLogsRequest")
	proto.RegisterType((*StreamDeviceFrameLogsResponse)(nil), "appserver_serves_ui.StreamDeviceFrameLogsResponse")
	proto.RegisterType((*StreamDeviceEventLogsRequest)(nil), "appserver_serves_ui.StreamDeviceEventLogsRequest")
	proto.RegisterType((*StreamDeviceEventLogsResponse)(nil), "appserver_serves_ui.StreamDeviceEventLogsResponse")
}

func init() { proto.RegisterFile("device.proto", fileDescriptor_870276a56ac00da5) }

var fileDescriptor_870276a56ac00da5 = []byte{
	// 2242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0x4f, 0x6f, 0xdb, 0xc8,
	0x15, 0x5f, 0x4a, 0xb6, 0x6c, 0x3d, 0xff, 0x93, 0xc7, 0x76, 0xac, 0x95, 0xe3, 0xb5, 0x43, 0x6f,
	0x36, 0x8e, 0xeb, 0x48, 0x59, 0xa7, 0xed, 0xb6, 0xd9, 0x14, 0xa8, 0xd7, 0x52, 0x6c, 0x25, 0x8e,
	0xb3, 0xa0, 0x6c, 0x07, 0x8b, 0x1c, 0x88, 0x09, 0x39, 0x52, 0xb8, 0xa2, 0x48, 0x2e, 0x39, 0x92,
	0x2b, 0x2c, 0x02, 0x14, 0x05, 0x5a, 0xf4, 0xd0, 0x43, 0x81, 0xde, 0x8a, 0x16, 0x6d, 0x0f, 0x3d,
	0xf4, 0xd0, 0x2f, 0xd1, 0xaf, 0xd0, 0x63, 0xaf, 0xbd, 0xf4, 0xd0, 0xef, 0x50, 0xcc, 0x1f, 0x4a,
	0x94, 0x4c, 0xca, 0xb2, 0x9b, 0x1e, 0x7a, 0xb2, 0x66, 0xe6, 0xfd, 0xf9, 0xcd, 0x9b, 0xdf, 0xbc,
	0xf7, 0xe8, 0x81, 0x59, 0x93, 0x74, 0x2c, 0x83, 0x14, 0x3d, 0xdf, 0xa5, 0x2e, 0x5a, 0xc2, 0x9e,
	0x17, 0x10, 0xbf, 0x43, 0x7c, 0x9d, 0xff, 0x09, 0xf4, 0xb6, 0x55, 0xb8, 0xdd, 0x70, 0xdd, 0x86,
	0x4d, 0x4a, 0xd8, 0xb3, 0x4a, 0xd8, 0x71, 0x5c, 0x8a, 0xa9, 0xe5, 0x3a, 0x81, 0x50, 0x29, 0x6c,
	0xc8, 0x55, 0x3e, 0x7a, 0xd3, 0xae, 0x97, 0xa8, 0xd5, 0x22, 0x01, 0xc5, 0x2d, 0x4f, 0x0a, 0xac,
	0x0d, 0x0b, 0x90, 0x96, 0x47, 0xbb, 0x72, 0x71, 0x01, 0x07, 0xba, 0xe1, 0xb6, 0x5a, 0xae, 0x23,
	0x27, 0x96, 0xc4, 0xa8, 0x14, 0x9d, 0x54, 0x5f, 0xc3, 0xf2, 0x21, 0xa1, 0x65, 0x8e, 0xf4, 0xd8,
	0x0a, 0xa8, 0x46, 0xbe, 0x69, 0x93, 0x80, 0xa2, 0x15, 0xc8, 0xb8, 0x7e, 0x43, 0xb7, 0xcc, 0xbc,
	0xb2, 0xa9, 0x6c, 0xa7, 0xb5, 0x49, 0xd7, 0x6f, 0x54, 0x4d, 0x74, 0x0b, 0x32, 0x6e, 0xbd, 0x1e,
	0x10, 0x9a, 0x4f, 0xf1, 0x69, 0x39, 0x42, 0xcb, 0x30, 0x69, 0x5b, 0x2d, 0x8b, 0xe6, 0xd3, 0x42,
	0x9a, 0x0f, 0x54, 0x0a, 0x2b, 0x43, 0xc6, 0x03, 0xcf, 0x75, 0x02, 0x82, 0x2a, 0x30, 0x63, 0x92,
	0x8e, 0xee, 0xf9, 0x6e, 0xdd, 0xb2, 0x49, 0x5e, 0xd9, 0x4c, 0x6f, 0xcf, 0xec, 0x7d, 0x5c, 0x8c,
	0x09, 0x51, 0xb1, 0x5c, 0x13, 0xfa, 0x5f, 0x0a, 0x59, 0x0d, 0x4c, 0xd2, 0x91, 0xbf, 0x99, 0x57,
	0xc3, 0x6d, 0x3b, 0x21, 0x18, 0x31, 0x50, 0xab, 0xf0, 0x21, 0xf3, 0x3a, 0xa4, 0x37, 0x7a, 0x5f,
	0x2b, 0x90, 0x61, 0x80, 0x2c, 0x33, 0x34, 0x65, 0x92, 0x4e, 0xd5, 0x54, 0x7f, 0x99, 0x82, 0x85,
	0x21, 0x43, 0x68, 0x1e, 0x52, 0x3d, 0xed, 0x94, 0x65, 0xa2, 0x55, 0x98, 0x62, 0xaa, 0xa4, 0x6d,
	0x71, 0xdd, 0xac, 0xc6, 0x2c, 0x55, 0xda, 0x16, 0x5a, 0x83, 0x6c, 0xbd, 0xa9, 0x5f, 0x60, 0xdb,
	0x26, 0x61, 0x5c, 0xa6, 0xeb, 0xcd, 0x57, 0x7c, 0x8c, 0x1e, 0xc1, 0x44, 0xcb, 0x35, 0x49, 0x7e,
	0x62, 0x53, 0xd9, 0x9e, 0xdf, 0xdb, 0x88, 0xdf, 0x3a, 0xf7, 0xfb, 0xc2, 0x35, 0x89, 0xc6, 0x85,
	0xd1, 0x3a, 0x80, 0xe1, 0x13, 0x4c, 0x89, 0xa9, 0x63, 0x9a, 0x9f, 0xe4, 0xde, 0xb2, 0x72, 0x66,
	0x9f, 0xa2, 0x4d, 0x98, 0xb5, 0x71, 0x40, 0xf5, 0x80, 0x10, 0x87, 0x09, 0x64, 0xb8, 0x00, 0xb0,
	0xb9, 0x1a, 0x21, 0xce, 0x3e, 0x45, 0x77, 0x61, 0x1e, 0x7b, 0x9e, 0x6d, 0x19, 0x9c, 0x67, 0x6c,
	0xbb, 0x53, 0x1c, 0xd7, 0x5c, 0x64, 0xb6, 0x6a, 0x22, 0x04, 0x13, 0x0e, 0x6e, 0x91, 0xfc, 0x34,
	0x37, 0xc0, 0x7f, 0xab, 0x06, 0x14, 0xe2, 0xa2, 0x9a, 0x74, 0xa0, 0xca, 0x4d, 0x0e, 0x54, 0x6d,
	0xc3, 0x6a, 0x8f, 0x30, 0x47, 0x56, 0x40, 0x5d, 0xbf, 0x7b, 0xa3, 0x83, 0x8b, 0xf0, 0x34, 0x1d,
	0xcf, 0xd3, 0x89, 0x28, 0x4f, 0x3f, 0x87, 0xfc, 0x65, 0xb7, 0x72, 0x67, 0x1b, 0x62, 0x67, 0x6f,
	0xc5, 0x34, 0x77, 0x9e, 0xe5, 0x98, 0xa5, 0xa0, 0xfa, 0x53, 0x05, 0x96, 0x6b, 0xa1, 0x36, 0x3f,
	0xac, 0x1b, 0x21, 0x7e, 0x0c, 0xd3, 0x6c, 0x9a, 0x93, 0x22, 0x3d, 0x1e, 0x29, 0x18, 0xef, 0xd8,
	0x0f, 0xb5, 0x04, 0x2b, 0x43, 0x08, 0x24, 0xf8, 0x5b, 0x90, 0x09, 0x28, 0xa6, 0xed, 0x80, 0x43,
	0x98, 0xd6, 0xe4, 0x48, 0xfd, 0xc3, 0x04, 0x64, 0x84, 0x78, 0x94, 0xbe, 0x4a, 0x9f, 0xbe, 0x67,
	0xd5, 0x1e, 0x09, 0x52, 0x7d, 0x12, 0xc4, 0xf0, 0x27, 0x7d, 0x99, 0x3f, 0x65, 0xb4, 0xc9, 0x62,
	0x16, 0x18, 0xbe, 0xe5, 0xb1, 0x09, 0x1e, 0xeb, 0xac, 0x16, 0x9d, 0x42, 0x3b, 0xb0, 0x28, 0xb2,
	0x63, 0x48, 0x19, 0x66, 0x4b, 0x10, 0x7a, 0xc1, 0x8c, 0xd2, 0xa3, 0x5a, 0x46, 0xf7, 0x20, 0x17,
	0x34, 0x2d, 0x4f, 0xaf, 0xeb, 0x86, 0x43, 0x75, 0xe3, 0x2d, 0x31, 0x9a, 0x9c, 0xda, 0xd3, 0xda,
	0x1c, 0x9b, 0x7f, 0x7a, 0xe0, 0xd0, 0x03, 0x36, 0x89, 0x1e, 0x00, 0xf2, 0x49, 0x9d, 0xf8, 0xc4,
	0x31, 0x88, 0x8e, 0x6d, 0x6a, 0xd1, 0xb6, 0x49, 0x38, 0xc3, 0x15, 0x6d, 0xb1, 0xb7, 0xb2, 0x2f,
	0x17, 0xd0, 0x11, 0x64, 0x3b, 0xd8, 0xb7, 0xf0, 0x1b, 0x9b, 0x04, 0xf9, 0x69, 0x9e, 0x82, 0x76,
	0x46, 0x84, 0xbc, 0x78, 0x1e, 0x0a, 0x57, 0x1c, 0xea, 0x77, 0xb5, 0xbe, 0x32, 0xfa, 0x21, 0x4c,
	0x50, 0xdc, 0x08, 0xf2, 0x59, 0x6e, 0xe4, 0xee, 0x28, 0x23, 0xa7, 0xb8, 0x21, 0xf5, 0xb9, 0x0a,
	0xa3, 0x97, 0x15, 0xe8, 0xa6, 0x15, 0x30, 0x4b, 0x66, 0x1e, 0xf8, 0xbe, 0xc0, 0x0a, 0xca, 0x72,
	0xa6, 0xf0, 0x04, 0xe6, 0x07, 0x1d, 0xa3, 0x1c, 0xa4, 0x9b, 0x24, 0x64, 0x22, 0xfb, 0xc9, 0x58,
	0xdd, 0xc1, 0x76, 0x3b, 0x3c, 0x2b, 0x31, 0x78, 0x9c, 0xfa, 0x81, 0x52, 0xf8, 0x0c, 0xb2, 0x3d,
	0x8f, 0xd7, 0x51, 0x54, 0xff, 0x35, 0x01, 0xf3, 0xfd, 0xc4, 0x5d, 0xa5, 0xa4, 0xf5, 0x7f, 0xc0,
	0x94, 0x22, 0x2c, 0x0d, 0xc9, 0x72, 0x5c, 0x22, 0x0f, 0x2e, 0x0e, 0x48, 0x9f, 0x30, 0x90, 0x7b,
	0xb0, 0x22, 0xe5, 0xc5, 0xbd, 0xd0, 0xdf, 0x60, 0x4a, 0x89, 0xdf, 0xe5, 0x9c, 0x99, 0xd3, 0xa4,
	0xb1, 0x1a, 0x5f, 0xfb, 0x42, 0x2c, 0xa1, 0x87, 0xb0, 0x3c, 0xa8, 0xd3, 0xc2, 0x7e, 0xc3, 0x72,
	0x78, 0xae, 0x9c, 0xd4, 0x50, 0x54, 0xe5, 0x05, 0x5f, 0x41, 0xc7, 0xb0, 0x35, 0xa8, 0x41, 0x7e,
	0x42, 0x89, 0xef, 0x60, 0x5b, 0xf7, 0xdc, 0x0b, 0xc6, 0x11, 0xb7, 0xed, 0x1b, 0x44, 0x1e, 0xfd,
	0x46, 0xd4, 0x40, 0x45, 0x0a, 0x7e, 0xc9, 0xe4, 0x6a, 0x5c, 0x0c, 0x9d, 0xc2, 0xbd, 0x58, 0xcc,
	0xba, 0x4d, 0x3a, 0xc4, 0xd6, 0xdb, 0x0e, 0xee, 0x60, 0xcb, 0x66, 0x74, 0xc9, 0xcf, 0x70, 0x8b,
	0x5b, 0x31, 0xbb, 0x38, 0x66, 0xb2, 0x67, 0x7d, 0x51, 0xf4, 0x23, 0x58, 0x1b, 0x61, 0x35, 0x3f,
	0xbb, 0xa9, 0x6c, 0xa7, 0xb4, 0x7c, 0x92, 0x25, 0xf4, 0x64, 0xa8, 0xf2, 0x64, 0x79, 0xfe, 0x2f,
	0x14, 0x45, 0x7f, 0x52, 0x0c, 0xfb, 0x93, 0xe2, 0x69, 0xd8, 0xc0, 0x44, 0xab, 0x92, 0x7a, 0x01,
	0x20, 0xa8, 0xf6, 0x9c, 0x74, 0x83, 0x64, 0x9a, 0xad, 0xc2, 0x94, 0x73, 0xd1, 0xd4, 0x19, 0x85,
	0x65, 0xa1, 0x75, 0x2e, 0x9a, 0xcf, 0x49, 0x97, 0x2d, 0x60, 0xcf, 0xe3, 0x0b, 0x69, 0xb1, 0x80,
	0x3d, 0x8f, 0x2d, 0x7c, 0x04, 0x33, 0x0d, 0x06, 0x48, 0x2e, 0x0a, 0x76, 0x65, 0x1b, 0xc4, 0xd9,
	0xe7, 0xeb, 0xea, 0x33, 0x58, 0x3a, 0xe0, 0xd5, 0x53, 0xb8, 0x0f, 0x13, 0xf7, 0x23, 0x9e, 0xa1,
	0x2d, 0x23, 0xac, 0x63, 0x6b, 0x23, 0x2e, 0xb4, 0x26, 0x45, 0xd5, 0xef, 0x40, 0xae, 0x57, 0x43,
	0x42, 0x43, 0x49, 0x5b, 0x51, 0x7f, 0x9b, 0x82, 0xc5, 0x88, 0xb4, 0xcc, 0xd6, 0x37, 0xf1, 0x7b,
	0x29, 0xf4, 0x93, 0xd7, 0x09, 0x7d, 0xf2, 0x0d, 0xc8, 0x5c, 0xff, 0x06, 0x2c, 0x27, 0xde, 0x80,
	0x5d, 0x98, 0xb6, 0x5d, 0x71, 0xe7, 0xf3, 0x2b, 0x1c, 0x5f, 0xae, 0x28, 0xbb, 0xd0, 0x63, 0x39,
	0xaf, 0xf5, 0x24, 0xd4, 0x7f, 0xa4, 0x60, 0x91, 0x25, 0x9d, 0xc1, 0x58, 0xf6, 0x2a, 0xb7, 0x12,
	0xa9, 0xdc, 0x89, 0xfd, 0xe8, 0x98, 0xe9, 0x87, 0xd5, 0x47, 0x82, 0x7d, 0xe3, 0xad, 0xe4, 0x86,
	0x1c, 0xa1, 0x5d, 0x40, 0xad, 0xb6, 0x4d, 0x2d, 0x83, 0x45, 0xb6, 0xe1, 0xbb, 0x6d, 0xaf, 0x9f,
	0x75, 0x72, 0xbd, 0x95, 0x43, 0xb6, 0x50, 0x2d, 0x33, 0x69, 0x76, 0x3c, 0x43, 0x39, 0x4a, 0x64,
	0x9d, 0x9c, 0x5c, 0xe9, 0x27, 0xa9, 0xb2, 0x2c, 0x16, 0x53, 0xbc, 0x58, 0x3c, 0x8c, 0x3d, 0xe3,
	0x4b, 0xdb, 0x1f, 0xae, 0x1b, 0x37, 0x4f, 0xec, 0x3e, 0xa0, 0xa8, 0xf5, 0x7e, 0x97, 0x43, 0x5d,
	0x8a, 0x6d, 0x5d, 0xf4, 0xd3, 0x22, 0xc6, 0xc0, 0xa7, 0x0e, 0xd8, 0x0c, 0xfa, 0x1c, 0x32, 0x3e,
	0x09, 0xda, 0x36, 0x0b, 0x34, 0xc3, 0xbd, 0x35, 0x82, 0x9b, 0x61, 0xc5, 0xd0, 0xa4, 0x8a, 0x5a,
	0x84, 0xa5, 0x32, 0xb1, 0xc9, 0xf0, 0x3d, 0x4b, 0xbc, 0x1e, 0xcf, 0x60, 0xe9, 0xcc, 0x33, 0xdf,
	0xcf, 0xbd, 0x7c, 0x0d, 0xab, 0xd1, 0x3b, 0xce, 0x52, 0x4c, 0x68, 0xef, 0xc7, 0xbc, 0xb5, 0x63,
	0xc7, 0xd6, 0x24, 0xdd, 0x40, 0x1a, 0x1d, 0xd5, 0x75, 0x71, 0x65, 0x30, 0x7b, 0xbf, 0xd5, 0x52,
	0xe4, 0xeb, 0x29, 0x6a, 0x39, 0x71, 0x67, 0x5f, 0x45, 0xbe, 0x88, 0x84, 0x82, 0x3c, 0x80, 0xff,
	0x1e, 0xcb, 0x6b, 0x58, 0x8d, 0x06, 0xed, 0xfd, 0x6e, 0x74, 0x0f, 0x56, 0xa3, 0x27, 0x38, 0xd6,
	0x5e, 0xff, 0x9a, 0x82, 0x9c, 0x10, 0xdf, 0x37, 0xa8, 0xd5, 0xe1, 0x77, 0x2e, 0x39, 0xbb, 0x7f,
	0x28, 0xfa, 0x5f, 0x6c, 0x9a, 0xbe, 0x24, 0x2d, 0x13, 0xdc, 0x37, 0x4d, 0x1f, 0x15, 0x20, 0xcb,
	0x52, 0x78, 0x10, 0xc9, 0xf0, 0x2c, 0xe1, 0xd7, 0x58, 0x8a, 0xbf, 0x03, 0x73, 0xac, 0x28, 0x04,
	0x3a, 0x71, 0x8c, 0x48, 0x92, 0x07, 0xe7, 0xa2, 0x59, 0xab, 0x38, 0x06, 0x13, 0xf9, 0x18, 0x16,
	0x02, 0x5d, 0x08, 0x59, 0x0e, 0xe5, 0x42, 0xe2, 0xc3, 0x66, 0x26, 0x38, 0xb9, 0x68, 0xd6, 0xaa,
	0x0e, 0x95, 0x52, 0xf5, 0x21, 0xa9, 0xac, 0x90, 0xaa, 0x47, 0xa4, 0xf2, 0x30, 0x2d, 0xda, 0xd0,
	0xb6, 0xc7, 0xd3, 0xc1, 0x9c, 0x96, 0xa9, 0x1f, 0x38, 0xf4, 0xcc, 0x43, 0x1b, 0x30, 0xeb, 0xc8,
	0x16, 0xd5, 0x74, 0x2f, 0x1c, 0x99, 0x40, 0xb3, 0x0e, 0x6b, 0x4f, 0xcb, 0xee, 0x85, 0xc3, 0x04,
	0x70, 0x54, 0x00, 0x84, 0x00, 0x0e, 0x05, 0xd4, 0x26, 0xac, 0xc8, 0x40, 0x0d, 0xf1, 0x5e, 0xeb,
	0xb5, 0x40, 0xb8, 0x17, 0x48, 0x79, 0x88, 0xa3, 0x7a, 0xcd, 0x7e, 0xd4, 0xb5, 0x9c, 0x39, 0x34,
	0x23, 0x0e, 0x14, 0xc7, 0xba, 0x4b, 0x3c, 0xd0, 0xef, 0x89, 0x4f, 0xc0, 0x61, 0xe3, 0x57, 0xa9,
	0x7d, 0x03, 0x6b, 0xb1, 0x6a, 0x92, 0xf9, 0xff, 0xa3, 0xdd, 0x1d, 0x12, 0xaa, 0x61, 0xc7, 0x74,
	0x5b, 0x65, 0xc1, 0xa2, 0x31, 0x76, 0x97, 0xbf, 0xac, 0x23, 0x31, 0x46, 0xc9, 0xa9, 0x0c, 0x90,
	0x53, 0xfd, 0x0c, 0x6e, 0xd7, 0xa8, 0x4f, 0x70, 0x4b, 0xc0, 0x7a, 0xea, 0xe3, 0x16, 0x39, 0x76,
	0x1b, 0x57, 0x5f, 0x8f, 0xbf, 0x29, 0xb0, 0x9e, 0xa0, 0x29, 0xbd, 0x1e, 0xc1, 0x6c, 0xdb, 0xb3,
	0x2d, 0xa7, 0xa9, 0xd7, 0xd9, 0x9a, 0x0c, 0x4a, 0x7c, 0xe6, 0x3d, 0xe3, 0x82, 0xa1, 0x8d, 0xa3,
	0x0f, 0xb4, 0x99, 0x76, 0x7f, 0x06, 0x9d, 0xc0, 0x3c, 0xe3, 0x5c, 0xc4, 0x56, 0x6a, 0x54, 0x80,
	0xa5, 0x68, 0xc4, 0xda, 0x9c, 0x19, 0x9d, 0xfb, 0x62, 0x0a, 0x26, 0xb9, 0x99, 0xe1, 0xdd, 0x57,
	0x3a, 0xc4, 0xa1, 0x63, 0xed, 0xfe, 0x7c, 0x70, 0xf3, 0x11, 0x45, 0xb9, 0x79, 0x04, 0x13, 0xb4,
	0xeb, 0x11, 0xa9, 0xc6, 0x7f, 0xa3, 0x3b, 0x30, 0xeb, 0xe1, 0xae, 0xed, 0x62, 0x53, 0xff, 0x3a,
	0x70, 0x1d, 0x99, 0x27, 0x66, 0xe4, 0xdc, 0xb3, 0xda, 0xcb, 0x93, 0x1d, 0x1c, 0xf6, 0x92, 0xec,
	0x3b, 0x18, 0x2d, 0xc0, 0x4c, 0xf9, 0x5c, 0xaf, 0x9e, 0xec, 0x1f, 0x9c, 0x56, 0xcf, 0x2b, 0xb9,
	0x0f, 0xd0, 0x6d, 0xc8, 0x97, 0xcf, 0xf5, 0xa7, 0x5a, 0xa5, 0xa2, 0x1f, 0xee, 0x9f, 0x56, 0x5e,
	0xed, 0x7f, 0x55, 0xd3, 0x8f, 0xab, 0x2f, 0xaa, 0xa7, 0x95, 0x72, 0x4e, 0x41, 0xcb, 0x90, 0x2b,
	0x9f, 0xeb, 0xaf, 0x8e, 0x5e, 0x1e, 0x57, 0xf4, 0x93, 0xca, 0xe9, 0xab, 0x97, 0xda, 0xf3, 0x5c,
	0x0a, 0xcd, 0x03, 0x94, 0xcf, 0xf5, 0x72, 0xe5, 0xb8, 0xc2, 0xa4, 0xd2, 0x7b, 0xff, 0x5e, 0x86,
	0x39, 0xe1, 0xa3, 0x26, 0x6a, 0x3b, 0x32, 0x20, 0x23, 0x6a, 0x0c, 0xda, 0x8e, 0x0d, 0x68, 0x4c,
	0x93, 0x59, 0xb8, 0x75, 0xa9, 0x43, 0xab, 0xb4, 0x3c, 0xda, 0x55, 0x57, 0x7f, 0xf6, 0xf7, 0x7f,
	0xfe, 0x26, 0xb5, 0xa8, 0xce, 0xf2, 0x7f, 0x0a, 0x0a, 0x66, 0x07, 0x8f, 0x95, 0x1d, 0x44, 0x21,
	0x7d, 0xc8, 0x3a, 0x9b, 0x58, 0x0f, 0xc3, 0xad, 0x67, 0xe1, 0x93, 0xab, 0xc4, 0x44, 0x98, 0xd5,
	0x8f, 0xb8, 0xbb, 0x3c, 0xba, 0x15, 0x75, 0x57, 0xfa, 0x56, 0x1e, 0xda, 0x3b, 0xd4, 0x82, 0x09,
	0x56, 0xce, 0xd1, 0x27, 0xe3, 0xf5, 0x29, 0x85, 0x7b, 0x57, 0xca, 0x49, 0xc7, 0xcb, 0xdc, 0xf1,
	0x3c, 0x1a, 0xd8, 0x27, 0xfa, 0x1a, 0x32, 0xa2, 0xce, 0x24, 0x44, 0x32, 0xa6, 0x8d, 0x48, 0x8c,
	0xa4, 0xdc, 0xda, 0x4e, 0xd2, 0xd6, 0x28, 0x64, 0x44, 0xc1, 0x4c, 0xf0, 0x15, 0xd3, 0x82, 0x24,
	0xfa, 0xda, 0xe6, 0xbe, 0xd4, 0xc2, 0xfa, 0x25, 0x5f, 0xec, 0xa3, 0x3f, 0x74, 0xc9, 0x8e, 0xf1,
	0x17, 0x0a, 0x80, 0xe0, 0x03, 0xff, 0xda, 0xd9, 0xbd, 0x92, 0x30, 0x91, 0x5a, 0x9b, 0xe8, 0x7e,
	0x8f, 0xbb, 0xdf, 0x55, 0xef, 0xc5, 0xb9, 0xe7, 0x45, 0xbf, 0x87, 0xa1, 0xc4, 0x46, 0x0c, 0xc8,
	0xcf, 0x15, 0x98, 0x3a, 0x24, 0x94, 0xa3, 0xb8, 0x3f, 0x9a, 0x2d, 0x51, 0x08, 0x3b, 0xe3, 0x88,
	0xca, 0x33, 0xde, 0xe2, 0xb0, 0xd6, 0xd1, 0x5a, 0xfc, 0x09, 0x70, 0x28, 0x3c, 0x20, 0x22, 0xd4,
	0x23, 0x02, 0x92, 0xd0, 0xd9, 0x5c, 0x15, 0x90, 0xc2, 0x75, 0x02, 0xc2, 0x3f, 0x43, 0x19, 0xbd,
	0x46, 0xe0, 0x48, 0x68, 0x82, 0x12, 0x71, 0xc8, 0x08, 0xec, 0x8c, 0x8c, 0xc0, 0xaf, 0x14, 0x98,
	0x0e, 0x2b, 0x3f, 0x8a, 0x8f, 0x6f, 0x6c, 0x63, 0x90, 0xe8, 0xf5, 0x09, 0xf7, 0xfa, 0x7d, 0xf5,
	0xd3, 0xd8, 0xdd, 0xf7, 0xcb, 0x6c, 0x3f, 0x06, 0x61, 0x27, 0xc0, 0xe2, 0xf0, 0x8e, 0xc5, 0x21,
	0x9c, 0x48, 0x8c, 0x03, 0xbe, 0x16, 0xa2, 0xfb, 0x1c, 0xd1, 0xd6, 0xce, 0x9d, 0x84, 0x38, 0xf4,
	0x31, 0xa1, 0xdf, 0x2b, 0x30, 0x77, 0x48, 0x68, 0xa4, 0x67, 0x2c, 0x8d, 0xa6, 0xdc, 0xa5, 0x56,
	0xa4, 0xf0, 0x70, 0x7c, 0x05, 0xc9, 0x54, 0x89, 0x0f, 0x8d, 0x81, 0xef, 0x8f, 0x0a, 0xff, 0xd2,
	0x1f, 0x68, 0x14, 0x12, 0xa2, 0x94, 0xd0, 0x83, 0x14, 0x1e, 0x8c, 0x29, 0x2d, 0xc1, 0x95, 0x38,
	0xb8, 0xfb, 0x31, 0xb7, 0x5b, 0x80, 0x6b, 0x0c, 0xa3, 0xf9, 0x93, 0x02, 0x0b, 0xa2, 0xba, 0xf6,
	0x9a, 0x0a, 0xf4, 0x69, 0xac, 0xcf, 0x51, 0xad, 0x4b, 0x61, 0xef, 0x3a, 0x2a, 0x12, 0xeb, 0x5d,
	0x8e, 0x75, 0x03, 0xad, 0x27, 0x60, 0xe5, 0x6d, 0x43, 0xf0, 0x50, 0x89, 0x60, 0xec, 0xd5, 0xfe,
	0x31, 0x30, 0x0e, 0x37, 0x18, 0x63, 0x60, 0xbc, 0xd4, 0x5a, 0x5c, 0x89, 0x91, 0x30, 0x0d, 0x86,
	0xf1, 0xd7, 0x82, 0x8a, 0xfd, 0xaf, 0xda, 0xab, 0x12, 0x65, 0xe4, 0x05, 0xed, 0xaa, 0x44, 0x19,
	0x7d, 0x0f, 0x0b, 0xcb, 0x07, 0xda, 0x8c, 0x20, 0x2a, 0x7d, 0x2b, 0x5e, 0x0f, 0xde, 0xc9, 0xf1,
	0x03, 0x9b, 0x01, 0xf8, 0x8b, 0x12, 0xf9, 0x3f, 0x53, 0xf8, 0x24, 0x55, 0x4c, 0x74, 0x15, 0xfb,
	0x08, 0x56, 0x28, 0x8d, 0x2d, 0x2f, 0xf1, 0x7d, 0x97, 0xe3, 0x2b, 0xa2, 0xdd, 0x51, 0xf8, 0xe4,
	0xff, 0x3e, 0x44, 0x20, 0x2d, 0xf3, 0x1d, 0xfa, 0x73, 0x14, 0xab, 0x7c, 0x2e, 0x49, 0xbe, 0x29,
	0x71, 0xaf, 0x3e, 0xc9, 0x37, 0x25, 0xf6, 0xb1, 0x66, 0x3c, 0x9c, 0xf2, 0x29, 0xa7, 0x8f, 0xf3,
	0x77, 0x0a, 0xcc, 0x0d, 0xbc, 0x9f, 0x24, 0x1c, 0x73, 0xdc, 0x2b, 0x4f, 0xc2, 0x31, 0xc7, 0x3e,
	0xc7, 0x84, 0xf0, 0xd4, 0xfb, 0xa3, 0xe0, 0xb5, 0x5c, 0xb3, 0x1f, 0xc3, 0xc7, 0xca, 0xce, 0x9b,
	0x0c, 0xcf, 0xa5, 0x8f, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x5b, 0xa4, 0x86, 0x50, 0x1e,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeviceServiceClient is the client API for DeviceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceServiceClient interface {
	// Create creates the given device.
	Create(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get returns the device matching the given DevEUI.
	Get(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error)
	// List returns the available devices.
	List(ctx context.Context, in *ListDeviceRequest, opts ...grpc.CallOption) (*ListDeviceResponse, error)
	// Delete deletes the device matching the given DevEUI.
	Delete(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Update updates the device matching the given DevEUI.
	Update(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreateKeys creates the given device-keys.
	CreateKeys(ctx context.Context, in *CreateDeviceKeysRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// GetKeys returns the device-keys for the given DevEUI.
	GetKeys(ctx context.Context, in *GetDeviceKeysRequest, opts ...grpc.CallOption) (*GetDeviceKeysResponse, error)
	// UpdateKeys updates the device-keys.
	UpdateKeys(ctx context.Context, in *UpdateDeviceKeysRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// DeleteKeys deletes the device-keys for the given DevEUI.
	DeleteKeys(ctx context.Context, in *DeleteDeviceKeysRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Activate (re)activates the device (only when ABP is set to true).
	Activate(ctx context.Context, in *ActivateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Deactivate de-activates the device.
	Deactivate(ctx context.Context, in *DeactivateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// GetActivation returns the current activation details of the device (OTAA and ABP).
	GetActivation(ctx context.Context, in *GetDeviceActivationRequest, opts ...grpc.CallOption) (*GetDeviceActivationResponse, error)
	// GetRandomDevAddr returns a random DevAddr taking the NwkID prefix into account.
	GetRandomDevAddr(ctx context.Context, in *GetRandomDevAddrRequest, opts ...grpc.CallOption) (*GetRandomDevAddrResponse, error)
	// StreamFrameLogs streams the uplink and downlink frame-logs for the given DevEUI.
	//   * These are the raw LoRaWAN frames and this endpoint is intended for debugging only.
	//   * This endpoint does not work from a web-browser.
	StreamFrameLogs(ctx context.Context, in *StreamDeviceFrameLogsRequest, opts ...grpc.CallOption) (DeviceService_StreamFrameLogsClient, error)
	// StreamEventLogs stream the device events (uplink payloads, ACKs, joins, errors).
	//   * This endpoint is intended for debugging only.
	//   * This endpoint does not work from a web-browser.
	StreamEventLogs(ctx context.Context, in *StreamDeviceEventLogsRequest, opts ...grpc.CallOption) (DeviceService_StreamEventLogsClient, error)
	GetDeviceList(ctx context.Context, in *GetDeviceListRequest, opts ...grpc.CallOption) (*GetDeviceListResponse, error)
	GetDeviceProfile(ctx context.Context, in *GetDSDeviceProfileRequest, opts ...grpc.CallOption) (*GetDSDeviceProfileResponse, error)
	GetDeviceHistory(ctx context.Context, in *GetDeviceHistoryRequest, opts ...grpc.CallOption) (*GetDeviceHistoryResponse, error)
	SetDeviceMode(ctx context.Context, in *SetDeviceModeRequest, opts ...grpc.CallOption) (*SetDeviceModeResponse, error)
}

type deviceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeviceServiceClient(cc grpc.ClientConnInterface) DeviceServiceClient {
	return &deviceServiceClient{cc}
}

func (c *deviceServiceClient) Create(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Get(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error) {
	out := new(GetDeviceResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) List(ctx context.Context, in *ListDeviceRequest, opts ...grpc.CallOption) (*ListDeviceResponse, error) {
	out := new(ListDeviceResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Delete(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Update(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) CreateKeys(ctx context.Context, in *CreateDeviceKeysRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/CreateKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) GetKeys(ctx context.Context, in *GetDeviceKeysRequest, opts ...grpc.CallOption) (*GetDeviceKeysResponse, error) {
	out := new(GetDeviceKeysResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/GetKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) UpdateKeys(ctx context.Context, in *UpdateDeviceKeysRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/UpdateKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) DeleteKeys(ctx context.Context, in *DeleteDeviceKeysRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/DeleteKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Activate(ctx context.Context, in *ActivateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/Activate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Deactivate(ctx context.Context, in *DeactivateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/Deactivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) GetActivation(ctx context.Context, in *GetDeviceActivationRequest, opts ...grpc.CallOption) (*GetDeviceActivationResponse, error) {
	out := new(GetDeviceActivationResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/GetActivation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) GetRandomDevAddr(ctx context.Context, in *GetRandomDevAddrRequest, opts ...grpc.CallOption) (*GetRandomDevAddrResponse, error) {
	out := new(GetRandomDevAddrResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/GetRandomDevAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) StreamFrameLogs(ctx context.Context, in *StreamDeviceFrameLogsRequest, opts ...grpc.CallOption) (DeviceService_StreamFrameLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeviceService_serviceDesc.Streams[0], "/appserver_serves_ui.DeviceService/StreamFrameLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &deviceServiceStreamFrameLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeviceService_StreamFrameLogsClient interface {
	Recv() (*StreamDeviceFrameLogsResponse, error)
	grpc.ClientStream
}

type deviceServiceStreamFrameLogsClient struct {
	grpc.ClientStream
}

func (x *deviceServiceStreamFrameLogsClient) Recv() (*StreamDeviceFrameLogsResponse, error) {
	m := new(StreamDeviceFrameLogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deviceServiceClient) StreamEventLogs(ctx context.Context, in *StreamDeviceEventLogsRequest, opts ...grpc.CallOption) (DeviceService_StreamEventLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeviceService_serviceDesc.Streams[1], "/appserver_serves_ui.DeviceService/StreamEventLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &deviceServiceStreamEventLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeviceService_StreamEventLogsClient interface {
	Recv() (*StreamDeviceEventLogsResponse, error)
	grpc.ClientStream
}

type deviceServiceStreamEventLogsClient struct {
	grpc.ClientStream
}

func (x *deviceServiceStreamEventLogsClient) Recv() (*StreamDeviceEventLogsResponse, error) {
	m := new(StreamDeviceEventLogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deviceServiceClient) GetDeviceList(ctx context.Context, in *GetDeviceListRequest, opts ...grpc.CallOption) (*GetDeviceListResponse, error) {
	out := new(GetDeviceListResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/GetDeviceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) GetDeviceProfile(ctx context.Context, in *GetDSDeviceProfileRequest, opts ...grpc.CallOption) (*GetDSDeviceProfileResponse, error) {
	out := new(GetDSDeviceProfileResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/GetDeviceProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) GetDeviceHistory(ctx context.Context, in *GetDeviceHistoryRequest, opts ...grpc.CallOption) (*GetDeviceHistoryResponse, error) {
	out := new(GetDeviceHistoryResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/GetDeviceHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) SetDeviceMode(ctx context.Context, in *SetDeviceModeRequest, opts ...grpc.CallOption) (*SetDeviceModeResponse, error) {
	out := new(SetDeviceModeResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_ui.DeviceService/SetDeviceMode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceServiceServer is the server API for DeviceService service.
type DeviceServiceServer interface {
	// Create creates the given device.
	Create(context.Context, *CreateDeviceRequest) (*empty.Empty, error)
	// Get returns the device matching the given DevEUI.
	Get(context.Context, *GetDeviceRequest) (*GetDeviceResponse, error)
	// List returns the available devices.
	List(context.Context, *ListDeviceRequest) (*ListDeviceResponse, error)
	// Delete deletes the device matching the given DevEUI.
	Delete(context.Context, *DeleteDeviceRequest) (*empty.Empty, error)
	// Update updates the device matching the given DevEUI.
	Update(context.Context, *UpdateDeviceRequest) (*empty.Empty, error)
	// CreateKeys creates the given device-keys.
	CreateKeys(context.Context, *CreateDeviceKeysRequest) (*empty.Empty, error)
	// GetKeys returns the device-keys for the given DevEUI.
	GetKeys(context.Context, *GetDeviceKeysRequest) (*GetDeviceKeysResponse, error)
	// UpdateKeys updates the device-keys.
	UpdateKeys(context.Context, *UpdateDeviceKeysRequest) (*empty.Empty, error)
	// DeleteKeys deletes the device-keys for the given DevEUI.
	DeleteKeys(context.Context, *DeleteDeviceKeysRequest) (*empty.Empty, error)
	// Activate (re)activates the device (only when ABP is set to true).
	Activate(context.Context, *ActivateDeviceRequest) (*empty.Empty, error)
	// Deactivate de-activates the device.
	Deactivate(context.Context, *DeactivateDeviceRequest) (*empty.Empty, error)
	// GetActivation returns the current activation details of the device (OTAA and ABP).
	GetActivation(context.Context, *GetDeviceActivationRequest) (*GetDeviceActivationResponse, error)
	// GetRandomDevAddr returns a random DevAddr taking the NwkID prefix into account.
	GetRandomDevAddr(context.Context, *GetRandomDevAddrRequest) (*GetRandomDevAddrResponse, error)
	// StreamFrameLogs streams the uplink and downlink frame-logs for the given DevEUI.
	//   * These are the raw LoRaWAN frames and this endpoint is intended for debugging only.
	//   * This endpoint does not work from a web-browser.
	StreamFrameLogs(*StreamDeviceFrameLogsRequest, DeviceService_StreamFrameLogsServer) error
	// StreamEventLogs stream the device events (uplink payloads, ACKs, joins, errors).
	//   * This endpoint is intended for debugging only.
	//   * This endpoint does not work from a web-browser.
	StreamEventLogs(*StreamDeviceEventLogsRequest, DeviceService_StreamEventLogsServer) error
	GetDeviceList(context.Context, *GetDeviceListRequest) (*GetDeviceListResponse, error)
	GetDeviceProfile(context.Context, *GetDSDeviceProfileRequest) (*GetDSDeviceProfileResponse, error)
	GetDeviceHistory(context.Context, *GetDeviceHistoryRequest) (*GetDeviceHistoryResponse, error)
	SetDeviceMode(context.Context, *SetDeviceModeRequest) (*SetDeviceModeResponse, error)
}

// UnimplementedDeviceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeviceServiceServer struct {
}

func (*UnimplementedDeviceServiceServer) Create(ctx context.Context, req *CreateDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedDeviceServiceServer) Get(ctx context.Context, req *GetDeviceRequest) (*GetDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedDeviceServiceServer) List(ctx context.Context, req *ListDeviceRequest) (*ListDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedDeviceServiceServer) Delete(ctx context.Context, req *DeleteDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedDeviceServiceServer) Update(ctx context.Context, req *UpdateDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedDeviceServiceServer) CreateKeys(ctx context.Context, req *CreateDeviceKeysRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKeys not implemented")
}
func (*UnimplementedDeviceServiceServer) GetKeys(ctx context.Context, req *GetDeviceKeysRequest) (*GetDeviceKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKeys not implemented")
}
func (*UnimplementedDeviceServiceServer) UpdateKeys(ctx context.Context, req *UpdateDeviceKeysRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateKeys not implemented")
}
func (*UnimplementedDeviceServiceServer) DeleteKeys(ctx context.Context, req *DeleteDeviceKeysRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteKeys not implemented")
}
func (*UnimplementedDeviceServiceServer) Activate(ctx context.Context, req *ActivateDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Activate not implemented")
}
func (*UnimplementedDeviceServiceServer) Deactivate(ctx context.Context, req *DeactivateDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deactivate not implemented")
}
func (*UnimplementedDeviceServiceServer) GetActivation(ctx context.Context, req *GetDeviceActivationRequest) (*GetDeviceActivationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivation not implemented")
}
func (*UnimplementedDeviceServiceServer) GetRandomDevAddr(ctx context.Context, req *GetRandomDevAddrRequest) (*GetRandomDevAddrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRandomDevAddr not implemented")
}
func (*UnimplementedDeviceServiceServer) StreamFrameLogs(req *StreamDeviceFrameLogsRequest, srv DeviceService_StreamFrameLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamFrameLogs not implemented")
}
func (*UnimplementedDeviceServiceServer) StreamEventLogs(req *StreamDeviceEventLogsRequest, srv DeviceService_StreamEventLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamEventLogs not implemented")
}
func (*UnimplementedDeviceServiceServer) GetDeviceList(ctx context.Context, req *GetDeviceListRequest) (*GetDeviceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceList not implemented")
}
func (*UnimplementedDeviceServiceServer) GetDeviceProfile(ctx context.Context, req *GetDSDeviceProfileRequest) (*GetDSDeviceProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceProfile not implemented")
}
func (*UnimplementedDeviceServiceServer) GetDeviceHistory(ctx context.Context, req *GetDeviceHistoryRequest) (*GetDeviceHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceHistory not implemented")
}
func (*UnimplementedDeviceServiceServer) SetDeviceMode(ctx context.Context, req *SetDeviceModeRequest) (*SetDeviceModeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDeviceMode not implemented")
}

func RegisterDeviceServiceServer(s *grpc.Server, srv DeviceServiceServer) {
	s.RegisterService(&_DeviceService_serviceDesc, srv)
}

func _DeviceService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Create(ctx, req.(*CreateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Get(ctx, req.(*GetDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).List(ctx, req.(*ListDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Delete(ctx, req.(*DeleteDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Update(ctx, req.(*UpdateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_CreateKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).CreateKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/CreateKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).CreateKeys(ctx, req.(*CreateDeviceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_GetKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/GetKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetKeys(ctx, req.(*GetDeviceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_UpdateKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).UpdateKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/UpdateKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).UpdateKeys(ctx, req.(*UpdateDeviceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_DeleteKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).DeleteKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/DeleteKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).DeleteKeys(ctx, req.(*DeleteDeviceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Activate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Activate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/Activate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Activate(ctx, req.(*ActivateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Deactivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeactivateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Deactivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/Deactivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Deactivate(ctx, req.(*DeactivateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_GetActivation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceActivationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetActivation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/GetActivation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetActivation(ctx, req.(*GetDeviceActivationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_GetRandomDevAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRandomDevAddrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetRandomDevAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/GetRandomDevAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetRandomDevAddr(ctx, req.(*GetRandomDevAddrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_StreamFrameLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamDeviceFrameLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeviceServiceServer).StreamFrameLogs(m, &deviceServiceStreamFrameLogsServer{stream})
}

type DeviceService_StreamFrameLogsServer interface {
	Send(*StreamDeviceFrameLogsResponse) error
	grpc.ServerStream
}

type deviceServiceStreamFrameLogsServer struct {
	grpc.ServerStream
}

func (x *deviceServiceStreamFrameLogsServer) Send(m *StreamDeviceFrameLogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DeviceService_StreamEventLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamDeviceEventLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeviceServiceServer).StreamEventLogs(m, &deviceServiceStreamEventLogsServer{stream})
}

type DeviceService_StreamEventLogsServer interface {
	Send(*StreamDeviceEventLogsResponse) error
	grpc.ServerStream
}

type deviceServiceStreamEventLogsServer struct {
	grpc.ServerStream
}

func (x *deviceServiceStreamEventLogsServer) Send(m *StreamDeviceEventLogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DeviceService_GetDeviceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetDeviceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/GetDeviceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetDeviceList(ctx, req.(*GetDeviceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_GetDeviceProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDSDeviceProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetDeviceProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/GetDeviceProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetDeviceProfile(ctx, req.(*GetDSDeviceProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_GetDeviceHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetDeviceHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/GetDeviceHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetDeviceHistory(ctx, req.(*GetDeviceHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_SetDeviceMode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDeviceModeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).SetDeviceMode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_ui.DeviceService/SetDeviceMode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).SetDeviceMode(ctx, req.(*SetDeviceModeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeviceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appserver_serves_ui.DeviceService",
	HandlerType: (*DeviceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _DeviceService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _DeviceService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _DeviceService_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DeviceService_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _DeviceService_Update_Handler,
		},
		{
			MethodName: "CreateKeys",
			Handler:    _DeviceService_CreateKeys_Handler,
		},
		{
			MethodName: "GetKeys",
			Handler:    _DeviceService_GetKeys_Handler,
		},
		{
			MethodName: "UpdateKeys",
			Handler:    _DeviceService_UpdateKeys_Handler,
		},
		{
			MethodName: "DeleteKeys",
			Handler:    _DeviceService_DeleteKeys_Handler,
		},
		{
			MethodName: "Activate",
			Handler:    _DeviceService_Activate_Handler,
		},
		{
			MethodName: "Deactivate",
			Handler:    _DeviceService_Deactivate_Handler,
		},
		{
			MethodName: "GetActivation",
			Handler:    _DeviceService_GetActivation_Handler,
		},
		{
			MethodName: "GetRandomDevAddr",
			Handler:    _DeviceService_GetRandomDevAddr_Handler,
		},
		{
			MethodName: "GetDeviceList",
			Handler:    _DeviceService_GetDeviceList_Handler,
		},
		{
			MethodName: "GetDeviceProfile",
			Handler:    _DeviceService_GetDeviceProfile_Handler,
		},
		{
			MethodName: "GetDeviceHistory",
			Handler:    _DeviceService_GetDeviceHistory_Handler,
		},
		{
			MethodName: "SetDeviceMode",
			Handler:    _DeviceService_SetDeviceMode_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamFrameLogs",
			Handler:       _DeviceService_StreamFrameLogs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamEventLogs",
			Handler:       _DeviceService_StreamEventLogs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "device.proto",
}
