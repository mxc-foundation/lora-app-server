// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gatewayProfile.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"
import common "github.com/mxc-foundation/lpwan-server/api/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GatewayProfile struct {
	// Gateway-profile ID (UUID string).
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Name of the gateway-profile.
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Network-server ID of the gateway-profile.
	NetworkServerId int64 `protobuf:"varint,3,opt,name=network_server_id,json=networkServerID" json:"network_server_id,omitempty"`
	// Default channels (channels specified by the LoRaWAN Regional Parameters
	// specification) enabled for this configuration.
	Channels []uint32 `protobuf:"varint,4,rep,packed,name=channels" json:"channels,omitempty"`
	// Extra channels added to the channel-configuration (in case the LoRaWAN
	// region supports adding custom channels).
	ExtraChannels []*GatewayProfileExtraChannel `protobuf:"bytes,5,rep,name=extra_channels,json=extraChannels" json:"extra_channels,omitempty"`
}

func (m *GatewayProfile) Reset()                    { *m = GatewayProfile{} }
func (m *GatewayProfile) String() string            { return proto.CompactTextString(m) }
func (*GatewayProfile) ProtoMessage()               {}
func (*GatewayProfile) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{0} }

func (m *GatewayProfile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GatewayProfile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GatewayProfile) GetNetworkServerId() int64 {
	if m != nil {
		return m.NetworkServerId
	}
	return 0
}

func (m *GatewayProfile) GetChannels() []uint32 {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *GatewayProfile) GetExtraChannels() []*GatewayProfileExtraChannel {
	if m != nil {
		return m.ExtraChannels
	}
	return nil
}

type GatewayProfileListItem struct {
	// Gateway-profile ID (UUID string).
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Gateway-profile name,
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Network-server ID on which the gateway-profile is provisioned.
	NetworkServerId int64 `protobuf:"varint,3,opt,name=network_server_id,json=networkServerID" json:"network_server_id,omitempty"`
	// Network-server name.
	NetworkServerName string `protobuf:"bytes,7,opt,name=network_server_name,json=networkServerName" json:"network_server_name,omitempty"`
	// Created at timestamp.
	CreatedAt *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *GatewayProfileListItem) Reset()                    { *m = GatewayProfileListItem{} }
func (m *GatewayProfileListItem) String() string            { return proto.CompactTextString(m) }
func (*GatewayProfileListItem) ProtoMessage()               {}
func (*GatewayProfileListItem) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{1} }

func (m *GatewayProfileListItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GatewayProfileListItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GatewayProfileListItem) GetNetworkServerId() int64 {
	if m != nil {
		return m.NetworkServerId
	}
	return 0
}

func (m *GatewayProfileListItem) GetNetworkServerName() string {
	if m != nil {
		return m.NetworkServerName
	}
	return ""
}

func (m *GatewayProfileListItem) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GatewayProfileListItem) GetUpdatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type GatewayProfileExtraChannel struct {
	// Modulation.
	Modulation common.Modulation `protobuf:"varint,1,opt,name=modulation,enum=common.Modulation" json:"modulation,omitempty"`
	// Frequency.
	Frequency uint32 `protobuf:"varint,2,opt,name=frequency" json:"frequency,omitempty"`
	// Bandwidth.
	Bandwidth uint32 `protobuf:"varint,3,opt,name=bandwidth" json:"bandwidth,omitempty"`
	// Bitrate (in case of FSK modulation).
	Bitrate uint32 `protobuf:"varint,4,opt,name=bitrate" json:"bitrate,omitempty"`
	// Spreading factors (in case of LoRa modulation).
	SpreadingFactors []uint32 `protobuf:"varint,5,rep,packed,name=spreading_factors,json=spreadingFactors" json:"spreading_factors,omitempty"`
}

func (m *GatewayProfileExtraChannel) Reset()                    { *m = GatewayProfileExtraChannel{} }
func (m *GatewayProfileExtraChannel) String() string            { return proto.CompactTextString(m) }
func (*GatewayProfileExtraChannel) ProtoMessage()               {}
func (*GatewayProfileExtraChannel) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{2} }

func (m *GatewayProfileExtraChannel) GetModulation() common.Modulation {
	if m != nil {
		return m.Modulation
	}
	return common.Modulation_LORA
}

func (m *GatewayProfileExtraChannel) GetFrequency() uint32 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *GatewayProfileExtraChannel) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *GatewayProfileExtraChannel) GetBitrate() uint32 {
	if m != nil {
		return m.Bitrate
	}
	return 0
}

func (m *GatewayProfileExtraChannel) GetSpreadingFactors() []uint32 {
	if m != nil {
		return m.SpreadingFactors
	}
	return nil
}

type CreateGatewayProfileRequest struct {
	// Gateway-profile object to create.
	GatewayProfile *GatewayProfile `protobuf:"bytes,1,opt,name=gateway_profile,json=gatewayProfile" json:"gateway_profile,omitempty"`
}

func (m *CreateGatewayProfileRequest) Reset()                    { *m = CreateGatewayProfileRequest{} }
func (m *CreateGatewayProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateGatewayProfileRequest) ProtoMessage()               {}
func (*CreateGatewayProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{3} }

func (m *CreateGatewayProfileRequest) GetGatewayProfile() *GatewayProfile {
	if m != nil {
		return m.GatewayProfile
	}
	return nil
}

type CreateGatewayProfileResponse struct {
	// Gateway-profile ID (UUID string).
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateGatewayProfileResponse) Reset()                    { *m = CreateGatewayProfileResponse{} }
func (m *CreateGatewayProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateGatewayProfileResponse) ProtoMessage()               {}
func (*CreateGatewayProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{4} }

func (m *CreateGatewayProfileResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetGatewayProfileRequest struct {
	// Gateway-profile ID (UUID string).
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetGatewayProfileRequest) Reset()                    { *m = GetGatewayProfileRequest{} }
func (m *GetGatewayProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*GetGatewayProfileRequest) ProtoMessage()               {}
func (*GetGatewayProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{5} }

func (m *GetGatewayProfileRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetGatewayProfileResponse struct {
	// Gateway-profile object.
	GatewayProfile *GatewayProfile `protobuf:"bytes,1,opt,name=gateway_profile,json=gatewayProfile" json:"gateway_profile,omitempty"`
	// Created at timestamp.
	CreatedAt *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *GetGatewayProfileResponse) Reset()                    { *m = GetGatewayProfileResponse{} }
func (m *GetGatewayProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*GetGatewayProfileResponse) ProtoMessage()               {}
func (*GetGatewayProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{6} }

func (m *GetGatewayProfileResponse) GetGatewayProfile() *GatewayProfile {
	if m != nil {
		return m.GatewayProfile
	}
	return nil
}

func (m *GetGatewayProfileResponse) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetGatewayProfileResponse) GetUpdatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type UpdateGatewayProfileRequest struct {
	// Gateway-profile object to update.
	GatewayProfile *GatewayProfile `protobuf:"bytes,1,opt,name=gateway_profile,json=gatewayProfile" json:"gateway_profile,omitempty"`
}

func (m *UpdateGatewayProfileRequest) Reset()                    { *m = UpdateGatewayProfileRequest{} }
func (m *UpdateGatewayProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateGatewayProfileRequest) ProtoMessage()               {}
func (*UpdateGatewayProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{7} }

func (m *UpdateGatewayProfileRequest) GetGatewayProfile() *GatewayProfile {
	if m != nil {
		return m.GatewayProfile
	}
	return nil
}

type DeleteGatewayProfileRequest struct {
	// Gateway-profile id (UUID string).
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteGatewayProfileRequest) Reset()                    { *m = DeleteGatewayProfileRequest{} }
func (m *DeleteGatewayProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteGatewayProfileRequest) ProtoMessage()               {}
func (*DeleteGatewayProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{8} }

func (m *DeleteGatewayProfileRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListGatewayProfilesRequest struct {
	// Max number of items to return.
	Limit int64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int64 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	// Network-server ID to filter on (optional).
	NetworkServerId int64 `protobuf:"varint,3,opt,name=network_server_id,json=networkServerID" json:"network_server_id,omitempty"`
}

func (m *ListGatewayProfilesRequest) Reset()                    { *m = ListGatewayProfilesRequest{} }
func (m *ListGatewayProfilesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListGatewayProfilesRequest) ProtoMessage()               {}
func (*ListGatewayProfilesRequest) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{9} }

func (m *ListGatewayProfilesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListGatewayProfilesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListGatewayProfilesRequest) GetNetworkServerId() int64 {
	if m != nil {
		return m.NetworkServerId
	}
	return 0
}

type ListGatewayProfilesResponse struct {
	// Total number of gateway-profiles.
	TotalCount int64                     `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	Result     []*GatewayProfileListItem `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
}

func (m *ListGatewayProfilesResponse) Reset()                    { *m = ListGatewayProfilesResponse{} }
func (m *ListGatewayProfilesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListGatewayProfilesResponse) ProtoMessage()               {}
func (*ListGatewayProfilesResponse) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{10} }

func (m *ListGatewayProfilesResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListGatewayProfilesResponse) GetResult() []*GatewayProfileListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*GatewayProfile)(nil), "api.GatewayProfile")
	proto.RegisterType((*GatewayProfileListItem)(nil), "api.GatewayProfileListItem")
	proto.RegisterType((*GatewayProfileExtraChannel)(nil), "api.GatewayProfileExtraChannel")
	proto.RegisterType((*CreateGatewayProfileRequest)(nil), "api.CreateGatewayProfileRequest")
	proto.RegisterType((*CreateGatewayProfileResponse)(nil), "api.CreateGatewayProfileResponse")
	proto.RegisterType((*GetGatewayProfileRequest)(nil), "api.GetGatewayProfileRequest")
	proto.RegisterType((*GetGatewayProfileResponse)(nil), "api.GetGatewayProfileResponse")
	proto.RegisterType((*UpdateGatewayProfileRequest)(nil), "api.UpdateGatewayProfileRequest")
	proto.RegisterType((*DeleteGatewayProfileRequest)(nil), "api.DeleteGatewayProfileRequest")
	proto.RegisterType((*ListGatewayProfilesRequest)(nil), "api.ListGatewayProfilesRequest")
	proto.RegisterType((*ListGatewayProfilesResponse)(nil), "api.ListGatewayProfilesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GatewayProfileService service

type GatewayProfileServiceClient interface {
	// Create creates the given gateway-profile.
	Create(ctx context.Context, in *CreateGatewayProfileRequest, opts ...grpc.CallOption) (*CreateGatewayProfileResponse, error)
	// Get returns the gateway-profile matching the given id.
	Get(ctx context.Context, in *GetGatewayProfileRequest, opts ...grpc.CallOption) (*GetGatewayProfileResponse, error)
	// Update updates the given gateway-profile.
	Update(ctx context.Context, in *UpdateGatewayProfileRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// Delete deletes the gateway-profile matching the given id.
	Delete(ctx context.Context, in *DeleteGatewayProfileRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// List returns the existing gateway-profiles.
	List(ctx context.Context, in *ListGatewayProfilesRequest, opts ...grpc.CallOption) (*ListGatewayProfilesResponse, error)
}

type gatewayProfileServiceClient struct {
	cc *grpc.ClientConn
}

func NewGatewayProfileServiceClient(cc *grpc.ClientConn) GatewayProfileServiceClient {
	return &gatewayProfileServiceClient{cc}
}

func (c *gatewayProfileServiceClient) Create(ctx context.Context, in *CreateGatewayProfileRequest, opts ...grpc.CallOption) (*CreateGatewayProfileResponse, error) {
	out := new(CreateGatewayProfileResponse)
	err := grpc.Invoke(ctx, "/api.GatewayProfileService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayProfileServiceClient) Get(ctx context.Context, in *GetGatewayProfileRequest, opts ...grpc.CallOption) (*GetGatewayProfileResponse, error) {
	out := new(GetGatewayProfileResponse)
	err := grpc.Invoke(ctx, "/api.GatewayProfileService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayProfileServiceClient) Update(ctx context.Context, in *UpdateGatewayProfileRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.GatewayProfileService/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayProfileServiceClient) Delete(ctx context.Context, in *DeleteGatewayProfileRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.GatewayProfileService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayProfileServiceClient) List(ctx context.Context, in *ListGatewayProfilesRequest, opts ...grpc.CallOption) (*ListGatewayProfilesResponse, error) {
	out := new(ListGatewayProfilesResponse)
	err := grpc.Invoke(ctx, "/api.GatewayProfileService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GatewayProfileService service

type GatewayProfileServiceServer interface {
	// Create creates the given gateway-profile.
	Create(context.Context, *CreateGatewayProfileRequest) (*CreateGatewayProfileResponse, error)
	// Get returns the gateway-profile matching the given id.
	Get(context.Context, *GetGatewayProfileRequest) (*GetGatewayProfileResponse, error)
	// Update updates the given gateway-profile.
	Update(context.Context, *UpdateGatewayProfileRequest) (*google_protobuf2.Empty, error)
	// Delete deletes the gateway-profile matching the given id.
	Delete(context.Context, *DeleteGatewayProfileRequest) (*google_protobuf2.Empty, error)
	// List returns the existing gateway-profiles.
	List(context.Context, *ListGatewayProfilesRequest) (*ListGatewayProfilesResponse, error)
}

func RegisterGatewayProfileServiceServer(s *grpc.Server, srv GatewayProfileServiceServer) {
	s.RegisterService(&_GatewayProfileService_serviceDesc, srv)
}

func _GatewayProfileService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGatewayProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayProfileServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GatewayProfileService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayProfileServiceServer).Create(ctx, req.(*CreateGatewayProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayProfileService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewayProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayProfileServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GatewayProfileService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayProfileServiceServer).Get(ctx, req.(*GetGatewayProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayProfileService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGatewayProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayProfileServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GatewayProfileService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayProfileServiceServer).Update(ctx, req.(*UpdateGatewayProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayProfileService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGatewayProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayProfileServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GatewayProfileService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayProfileServiceServer).Delete(ctx, req.(*DeleteGatewayProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayProfileService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGatewayProfilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayProfileServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GatewayProfileService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayProfileServiceServer).List(ctx, req.(*ListGatewayProfilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GatewayProfileService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.GatewayProfileService",
	HandlerType: (*GatewayProfileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _GatewayProfileService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _GatewayProfileService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _GatewayProfileService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _GatewayProfileService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _GatewayProfileService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gatewayProfile.proto",
}

func init() { proto.RegisterFile("gatewayProfile.proto", fileDescriptor11) }

var fileDescriptor11 = []byte{
	// 766 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x06, 0x45, 0x59, 0xae, 0x47, 0x90, 0x5c, 0xad, 0xff, 0x68, 0x4a, 0xae, 0x59, 0x9e, 0x04,
	0x15, 0xa6, 0x00, 0x19, 0x3d, 0xb4, 0xe8, 0xc5, 0xf0, 0x1f, 0x0c, 0xb4, 0x45, 0xc1, 0xb6, 0x27,
	0x1f, 0x84, 0x95, 0xb8, 0x92, 0x16, 0x25, 0xb9, 0x2c, 0xb9, 0xb2, 0x23, 0x04, 0xbe, 0xe4, 0x01,
	0x72, 0xc9, 0x03, 0xe5, 0x92, 0x7b, 0x0e, 0x7e, 0x85, 0x3c, 0x48, 0xc0, 0xdd, 0x95, 0x6c, 0xca,
	0xa4, 0x02, 0xe7, 0xe7, 0x22, 0x71, 0x66, 0xbe, 0x9d, 0xdf, 0x6f, 0x76, 0x61, 0x7b, 0x8c, 0x39,
	0xb9, 0xc5, 0xb3, 0xbf, 0x62, 0x36, 0xa2, 0x3e, 0x71, 0xa2, 0x98, 0x71, 0x86, 0x74, 0x1c, 0x51,
	0xb3, 0x35, 0x66, 0x6c, 0xec, 0x93, 0x2e, 0x8e, 0x68, 0x17, 0x87, 0x21, 0xe3, 0x98, 0x53, 0x16,
	0x26, 0x12, 0x62, 0xee, 0x73, 0x1a, 0x90, 0x84, 0xe3, 0x20, 0xea, 0x2e, 0xbe, 0x94, 0xa9, 0x41,
	0x82, 0x88, 0xcf, 0xba, 0xe2, 0x57, 0xa9, 0xf6, 0x52, 0x27, 0x43, 0x16, 0x04, 0x2c, 0x54, 0x7f,
	0xd2, 0x60, 0xbf, 0xd3, 0xa0, 0x7e, 0x99, 0x49, 0x01, 0xd5, 0xa1, 0x44, 0x3d, 0x43, 0xb3, 0xb4,
	0xf6, 0x86, 0x5b, 0xa2, 0x1e, 0x42, 0x50, 0x0e, 0x71, 0x40, 0x8c, 0x92, 0xd0, 0x88, 0x6f, 0xd4,
	0x81, 0x46, 0x48, 0xf8, 0x2d, 0x8b, 0xff, 0xeb, 0x27, 0x24, 0xbe, 0x21, 0x71, 0x9f, 0x7a, 0x86,
	0x6e, 0x69, 0x6d, 0xdd, 0xdd, 0x54, 0x86, 0xbf, 0x85, 0xfe, 0xea, 0x0c, 0x99, 0xf0, 0xdd, 0x70,
	0x82, 0xc3, 0x90, 0xf8, 0x89, 0x51, 0xb6, 0xf4, 0x76, 0xcd, 0x5d, 0xc8, 0xe8, 0x02, 0xea, 0xe4,
	0x05, 0x8f, 0x71, 0x7f, 0x81, 0x58, 0xb3, 0xf4, 0x76, 0xb5, 0x77, 0xe8, 0xe0, 0x88, 0x3a, 0xd9,
	0xc4, 0xce, 0x53, 0xe0, 0xa9, 0xc4, 0xb9, 0x35, 0xf2, 0x48, 0x4a, 0xec, 0xd7, 0x25, 0xd8, 0xcd,
	0xa2, 0x7f, 0xa7, 0x09, 0xbf, 0xe2, 0x24, 0xf8, 0xea, 0xe5, 0x38, 0xb0, 0xb5, 0x84, 0x15, 0xee,
	0xd6, 0x85, 0xbb, 0x46, 0x06, 0xfd, 0x67, 0xea, 0xfb, 0x17, 0x80, 0x61, 0x4c, 0x30, 0x27, 0x5e,
	0x1f, 0x73, 0x63, 0xcd, 0xd2, 0xda, 0xd5, 0x9e, 0xe9, 0xc8, 0xd9, 0xca, 0x21, 0x0c, 0xa6, 0x23,
	0xe7, 0x9f, 0xf9, 0x0c, 0xdd, 0x0d, 0x85, 0x3e, 0xe1, 0xe9, 0xd1, 0x69, 0xe4, 0xcd, 0x8f, 0x56,
	0x3e, 0x7d, 0x54, 0xa1, 0x4f, 0xb8, 0x7d, 0xaf, 0x81, 0x59, 0xdc, 0x3e, 0xd4, 0x03, 0x08, 0x98,
	0x37, 0xf5, 0x05, 0xa5, 0x44, 0x73, 0xea, 0x3d, 0xe4, 0x28, 0x66, 0xfc, 0xb1, 0xb0, 0xb8, 0x8f,
	0x50, 0xa8, 0x05, 0x1b, 0xa3, 0x98, 0xfc, 0x3f, 0x25, 0xe1, 0x70, 0x26, 0xba, 0x57, 0x73, 0x1f,
	0x14, 0xa9, 0x75, 0x80, 0x43, 0xef, 0x96, 0x7a, 0x7c, 0x22, 0x5a, 0x57, 0x73, 0x1f, 0x14, 0xc8,
	0x80, 0xf5, 0x01, 0xe5, 0x31, 0xe6, 0xc4, 0x28, 0x0b, 0xdb, 0x5c, 0x44, 0x3f, 0x41, 0x23, 0x89,
	0x62, 0x82, 0x3d, 0x1a, 0x8e, 0xfb, 0x23, 0x3c, 0xe4, 0x2c, 0x96, 0x24, 0xa8, 0xb9, 0xdf, 0x2f,
	0x0c, 0x17, 0x52, 0x6f, 0x5f, 0x43, 0xf3, 0x54, 0x74, 0x27, 0x5b, 0x9a, 0x9b, 0x26, 0x91, 0x70,
	0xf4, 0x1b, 0x6c, 0xaa, 0x75, 0xea, 0x47, 0xd2, 0x22, 0x4a, 0xab, 0xf6, 0xb6, 0x72, 0xe8, 0xe4,
	0xd6, 0xb3, 0xab, 0x67, 0x3b, 0xd0, 0xca, 0x77, 0x9e, 0x44, 0x2c, 0x4c, 0x9e, 0xec, 0x85, 0xdd,
	0x01, 0xe3, 0x92, 0xf0, 0xfc, 0x4c, 0x96, 0xb1, 0xef, 0x35, 0xd8, 0xcf, 0x01, 0x2b, 0xcf, 0x5f,
	0x94, 0xf7, 0x12, 0xc1, 0x4a, 0x9f, 0x4f, 0x30, 0xfd, 0x39, 0x04, 0xbb, 0x86, 0xe6, 0xbf, 0x42,
	0xf8, 0x16, 0xa3, 0x38, 0x82, 0xe6, 0x19, 0xf1, 0x49, 0x91, 0xf3, 0xe5, 0xee, 0xde, 0x80, 0x99,
	0xae, 0x7b, 0x16, 0x9c, 0xcc, 0xd1, 0xdb, 0xb0, 0xe6, 0xd3, 0x80, 0x72, 0x71, 0x40, 0x77, 0xa5,
	0x80, 0x76, 0xa1, 0xc2, 0x46, 0xa3, 0x84, 0xc8, 0x8e, 0xe9, 0xae, 0x92, 0x9e, 0x73, 0x15, 0xd8,
	0x09, 0x34, 0x73, 0xe3, 0xaa, 0xb1, 0x1e, 0x42, 0x95, 0x33, 0x8e, 0xfd, 0xfe, 0x90, 0x4d, 0xc3,
	0x79, 0x78, 0x10, 0xaa, 0xd3, 0x54, 0x83, 0x8e, 0xa1, 0x12, 0x93, 0x64, 0xea, 0xa7, 0x39, 0xa4,
	0xb7, 0x5e, 0x33, 0xa7, 0x37, 0xf3, 0x7b, 0xcc, 0x55, 0xd0, 0xde, 0xdb, 0x32, 0xec, 0x64, 0x21,
	0x69, 0x3e, 0x74, 0x48, 0x10, 0x83, 0x8a, 0x24, 0x30, 0xb2, 0x84, 0xa3, 0x15, 0xab, 0x62, 0xfe,
	0xb8, 0x02, 0x21, 0xd3, 0xb7, 0xad, 0x57, 0xf7, 0x1f, 0xde, 0x94, 0x4c, 0x7b, 0x47, 0xbc, 0x40,
	0x6a, 0x42, 0x47, 0x6a, 0x9a, 0xc9, 0xaf, 0x5a, 0x07, 0x4d, 0x40, 0xbf, 0x24, 0x1c, 0x1d, 0xc8,
	0xb4, 0x0b, 0x76, 0xc1, 0xfc, 0xa1, 0xc8, 0xac, 0xe2, 0xd8, 0x22, 0x4e, 0x0b, 0x99, 0xb9, 0x71,
	0xba, 0x2f, 0xa9, 0x77, 0x87, 0x66, 0x50, 0x91, 0x6c, 0x53, 0xa5, 0xad, 0xa0, 0x9e, 0xb9, 0xfb,
	0x84, 0xc0, 0xe7, 0xe9, 0x4b, 0x68, 0xff, 0x2c, 0xe2, 0x74, 0xcd, 0x4e, 0x41, 0x9c, 0x25, 0xbe,
	0x3a, 0xd4, 0xbb, 0x4b, 0x8b, 0x1c, 0x41, 0x45, 0x72, 0x51, 0x85, 0x5e, 0x41, 0xcc, 0xc2, 0xd0,
	0xaa, 0xc4, 0xce, 0xaa, 0x12, 0x27, 0x50, 0x4e, 0x67, 0x8d, 0xe4, 0xd3, 0x57, 0xcc, 0x67, 0xd3,
	0x2a, 0x06, 0xa8, 0x8e, 0x1e, 0x88, 0x70, 0x7b, 0x28, 0x7f, 0x72, 0x83, 0x8a, 0xc8, 0xee, 0xf8,
	0x63, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x7d, 0x1f, 0x4f, 0x7c, 0x08, 0x00, 0x00,
}
