// Code generated by protoc-gen-go. DO NOT EDIT.
// source: appserver.proto

package m2m_server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AppServerDeviceProfile struct {
	DevEui               string               `protobuf:"bytes,1,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	ApplicationId        int64                `protobuf:"varint,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	Name                 string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AppServerDeviceProfile) Reset()         { *m = AppServerDeviceProfile{} }
func (m *AppServerDeviceProfile) String() string { return proto.CompactTextString(m) }
func (*AppServerDeviceProfile) ProtoMessage()    {}
func (*AppServerDeviceProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{0}
}

func (m *AppServerDeviceProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppServerDeviceProfile.Unmarshal(m, b)
}
func (m *AppServerDeviceProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppServerDeviceProfile.Marshal(b, m, deterministic)
}
func (m *AppServerDeviceProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppServerDeviceProfile.Merge(m, src)
}
func (m *AppServerDeviceProfile) XXX_Size() int {
	return xxx_messageInfo_AppServerDeviceProfile.Size(m)
}
func (m *AppServerDeviceProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_AppServerDeviceProfile.DiscardUnknown(m)
}

var xxx_messageInfo_AppServerDeviceProfile proto.InternalMessageInfo

func (m *AppServerDeviceProfile) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *AppServerDeviceProfile) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *AppServerDeviceProfile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppServerDeviceProfile) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type AddDeviceInM2MServerRequest struct {
	OrgId                int64                   `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	DevProfile           *AppServerDeviceProfile `protobuf:"bytes,2,opt,name=dev_profile,json=devProfile,proto3" json:"dev_profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *AddDeviceInM2MServerRequest) Reset()         { *m = AddDeviceInM2MServerRequest{} }
func (m *AddDeviceInM2MServerRequest) String() string { return proto.CompactTextString(m) }
func (*AddDeviceInM2MServerRequest) ProtoMessage()    {}
func (*AddDeviceInM2MServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{1}
}

func (m *AddDeviceInM2MServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDeviceInM2MServerRequest.Unmarshal(m, b)
}
func (m *AddDeviceInM2MServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDeviceInM2MServerRequest.Marshal(b, m, deterministic)
}
func (m *AddDeviceInM2MServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDeviceInM2MServerRequest.Merge(m, src)
}
func (m *AddDeviceInM2MServerRequest) XXX_Size() int {
	return xxx_messageInfo_AddDeviceInM2MServerRequest.Size(m)
}
func (m *AddDeviceInM2MServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDeviceInM2MServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddDeviceInM2MServerRequest proto.InternalMessageInfo

func (m *AddDeviceInM2MServerRequest) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *AddDeviceInM2MServerRequest) GetDevProfile() *AppServerDeviceProfile {
	if m != nil {
		return m.DevProfile
	}
	return nil
}

type AddDeviceInM2MServerResponse struct {
	DevId                int64    `protobuf:"varint,1,opt,name=dev_id,json=devId,proto3" json:"dev_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDeviceInM2MServerResponse) Reset()         { *m = AddDeviceInM2MServerResponse{} }
func (m *AddDeviceInM2MServerResponse) String() string { return proto.CompactTextString(m) }
func (*AddDeviceInM2MServerResponse) ProtoMessage()    {}
func (*AddDeviceInM2MServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{2}
}

func (m *AddDeviceInM2MServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDeviceInM2MServerResponse.Unmarshal(m, b)
}
func (m *AddDeviceInM2MServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDeviceInM2MServerResponse.Marshal(b, m, deterministic)
}
func (m *AddDeviceInM2MServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDeviceInM2MServerResponse.Merge(m, src)
}
func (m *AddDeviceInM2MServerResponse) XXX_Size() int {
	return xxx_messageInfo_AddDeviceInM2MServerResponse.Size(m)
}
func (m *AddDeviceInM2MServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDeviceInM2MServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddDeviceInM2MServerResponse proto.InternalMessageInfo

func (m *AddDeviceInM2MServerResponse) GetDevId() int64 {
	if m != nil {
		return m.DevId
	}
	return 0
}

type DeleteDeviceInM2MServerRequest struct {
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceInM2MServerRequest) Reset()         { *m = DeleteDeviceInM2MServerRequest{} }
func (m *DeleteDeviceInM2MServerRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceInM2MServerRequest) ProtoMessage()    {}
func (*DeleteDeviceInM2MServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{3}
}

func (m *DeleteDeviceInM2MServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceInM2MServerRequest.Unmarshal(m, b)
}
func (m *DeleteDeviceInM2MServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceInM2MServerRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceInM2MServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceInM2MServerRequest.Merge(m, src)
}
func (m *DeleteDeviceInM2MServerRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceInM2MServerRequest.Size(m)
}
func (m *DeleteDeviceInM2MServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceInM2MServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceInM2MServerRequest proto.InternalMessageInfo

func (m *DeleteDeviceInM2MServerRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type DeleteDeviceInM2MServerResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceInM2MServerResponse) Reset()         { *m = DeleteDeviceInM2MServerResponse{} }
func (m *DeleteDeviceInM2MServerResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceInM2MServerResponse) ProtoMessage()    {}
func (*DeleteDeviceInM2MServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{4}
}

func (m *DeleteDeviceInM2MServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceInM2MServerResponse.Unmarshal(m, b)
}
func (m *DeleteDeviceInM2MServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceInM2MServerResponse.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceInM2MServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceInM2MServerResponse.Merge(m, src)
}
func (m *DeleteDeviceInM2MServerResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceInM2MServerResponse.Size(m)
}
func (m *DeleteDeviceInM2MServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceInM2MServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceInM2MServerResponse proto.InternalMessageInfo

func (m *DeleteDeviceInM2MServerResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type AppServerGatewayProfile struct {
	Mac                  string               `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	OrgId                int64                `protobuf:"varint,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Description          string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Name                 string               `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AppServerGatewayProfile) Reset()         { *m = AppServerGatewayProfile{} }
func (m *AppServerGatewayProfile) String() string { return proto.CompactTextString(m) }
func (*AppServerGatewayProfile) ProtoMessage()    {}
func (*AppServerGatewayProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{5}
}

func (m *AppServerGatewayProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppServerGatewayProfile.Unmarshal(m, b)
}
func (m *AppServerGatewayProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppServerGatewayProfile.Marshal(b, m, deterministic)
}
func (m *AppServerGatewayProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppServerGatewayProfile.Merge(m, src)
}
func (m *AppServerGatewayProfile) XXX_Size() int {
	return xxx_messageInfo_AppServerGatewayProfile.Size(m)
}
func (m *AppServerGatewayProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_AppServerGatewayProfile.DiscardUnknown(m)
}

var xxx_messageInfo_AppServerGatewayProfile proto.InternalMessageInfo

func (m *AppServerGatewayProfile) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *AppServerGatewayProfile) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *AppServerGatewayProfile) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AppServerGatewayProfile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppServerGatewayProfile) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type AddGatewayInM2MServerRequest struct {
	OrgId                int64                    `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	GwProfile            *AppServerGatewayProfile `protobuf:"bytes,2,opt,name=gw_profile,json=gwProfile,proto3" json:"gw_profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *AddGatewayInM2MServerRequest) Reset()         { *m = AddGatewayInM2MServerRequest{} }
func (m *AddGatewayInM2MServerRequest) String() string { return proto.CompactTextString(m) }
func (*AddGatewayInM2MServerRequest) ProtoMessage()    {}
func (*AddGatewayInM2MServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{6}
}

func (m *AddGatewayInM2MServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddGatewayInM2MServerRequest.Unmarshal(m, b)
}
func (m *AddGatewayInM2MServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddGatewayInM2MServerRequest.Marshal(b, m, deterministic)
}
func (m *AddGatewayInM2MServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddGatewayInM2MServerRequest.Merge(m, src)
}
func (m *AddGatewayInM2MServerRequest) XXX_Size() int {
	return xxx_messageInfo_AddGatewayInM2MServerRequest.Size(m)
}
func (m *AddGatewayInM2MServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddGatewayInM2MServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddGatewayInM2MServerRequest proto.InternalMessageInfo

func (m *AddGatewayInM2MServerRequest) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *AddGatewayInM2MServerRequest) GetGwProfile() *AppServerGatewayProfile {
	if m != nil {
		return m.GwProfile
	}
	return nil
}

type AddGatewayInM2MServerResponse struct {
	GwId                 int64    `protobuf:"varint,1,opt,name=gw_id,json=gwId,proto3" json:"gw_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddGatewayInM2MServerResponse) Reset()         { *m = AddGatewayInM2MServerResponse{} }
func (m *AddGatewayInM2MServerResponse) String() string { return proto.CompactTextString(m) }
func (*AddGatewayInM2MServerResponse) ProtoMessage()    {}
func (*AddGatewayInM2MServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{7}
}

func (m *AddGatewayInM2MServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddGatewayInM2MServerResponse.Unmarshal(m, b)
}
func (m *AddGatewayInM2MServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddGatewayInM2MServerResponse.Marshal(b, m, deterministic)
}
func (m *AddGatewayInM2MServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddGatewayInM2MServerResponse.Merge(m, src)
}
func (m *AddGatewayInM2MServerResponse) XXX_Size() int {
	return xxx_messageInfo_AddGatewayInM2MServerResponse.Size(m)
}
func (m *AddGatewayInM2MServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddGatewayInM2MServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddGatewayInM2MServerResponse proto.InternalMessageInfo

func (m *AddGatewayInM2MServerResponse) GetGwId() int64 {
	if m != nil {
		return m.GwId
	}
	return 0
}

type DeleteGatewayInM2MServerRequest struct {
	MacAddress           string   `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGatewayInM2MServerRequest) Reset()         { *m = DeleteGatewayInM2MServerRequest{} }
func (m *DeleteGatewayInM2MServerRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteGatewayInM2MServerRequest) ProtoMessage()    {}
func (*DeleteGatewayInM2MServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{8}
}

func (m *DeleteGatewayInM2MServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGatewayInM2MServerRequest.Unmarshal(m, b)
}
func (m *DeleteGatewayInM2MServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGatewayInM2MServerRequest.Marshal(b, m, deterministic)
}
func (m *DeleteGatewayInM2MServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGatewayInM2MServerRequest.Merge(m, src)
}
func (m *DeleteGatewayInM2MServerRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteGatewayInM2MServerRequest.Size(m)
}
func (m *DeleteGatewayInM2MServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGatewayInM2MServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGatewayInM2MServerRequest proto.InternalMessageInfo

func (m *DeleteGatewayInM2MServerRequest) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

type DeleteGatewayInM2MServerResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGatewayInM2MServerResponse) Reset()         { *m = DeleteGatewayInM2MServerResponse{} }
func (m *DeleteGatewayInM2MServerResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteGatewayInM2MServerResponse) ProtoMessage()    {}
func (*DeleteGatewayInM2MServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{9}
}

func (m *DeleteGatewayInM2MServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGatewayInM2MServerResponse.Unmarshal(m, b)
}
func (m *DeleteGatewayInM2MServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGatewayInM2MServerResponse.Marshal(b, m, deterministic)
}
func (m *DeleteGatewayInM2MServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGatewayInM2MServerResponse.Merge(m, src)
}
func (m *DeleteGatewayInM2MServerResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteGatewayInM2MServerResponse.Size(m)
}
func (m *DeleteGatewayInM2MServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGatewayInM2MServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGatewayInM2MServerResponse proto.InternalMessageInfo

func (m *DeleteGatewayInM2MServerResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type GetDeviceByDevEuiRequest struct {
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceByDevEuiRequest) Reset()         { *m = GetDeviceByDevEuiRequest{} }
func (m *GetDeviceByDevEuiRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceByDevEuiRequest) ProtoMessage()    {}
func (*GetDeviceByDevEuiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{10}
}

func (m *GetDeviceByDevEuiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceByDevEuiRequest.Unmarshal(m, b)
}
func (m *GetDeviceByDevEuiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceByDevEuiRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceByDevEuiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceByDevEuiRequest.Merge(m, src)
}
func (m *GetDeviceByDevEuiRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceByDevEuiRequest.Size(m)
}
func (m *GetDeviceByDevEuiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceByDevEuiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceByDevEuiRequest proto.InternalMessageInfo

func (m *GetDeviceByDevEuiRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetDeviceByDevEuiResponse struct {
	OrgId                int64                   `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	DevProfile           *AppServerDeviceProfile `protobuf:"bytes,2,opt,name=dev_profile,json=devProfile,proto3" json:"dev_profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetDeviceByDevEuiResponse) Reset()         { *m = GetDeviceByDevEuiResponse{} }
func (m *GetDeviceByDevEuiResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceByDevEuiResponse) ProtoMessage()    {}
func (*GetDeviceByDevEuiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{11}
}

func (m *GetDeviceByDevEuiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceByDevEuiResponse.Unmarshal(m, b)
}
func (m *GetDeviceByDevEuiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceByDevEuiResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceByDevEuiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceByDevEuiResponse.Merge(m, src)
}
func (m *GetDeviceByDevEuiResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceByDevEuiResponse.Size(m)
}
func (m *GetDeviceByDevEuiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceByDevEuiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceByDevEuiResponse proto.InternalMessageInfo

func (m *GetDeviceByDevEuiResponse) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *GetDeviceByDevEuiResponse) GetDevProfile() *AppServerDeviceProfile {
	if m != nil {
		return m.DevProfile
	}
	return nil
}

type GetGatewayByMacRequest struct {
	Mac                  string   `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGatewayByMacRequest) Reset()         { *m = GetGatewayByMacRequest{} }
func (m *GetGatewayByMacRequest) String() string { return proto.CompactTextString(m) }
func (*GetGatewayByMacRequest) ProtoMessage()    {}
func (*GetGatewayByMacRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{12}
}

func (m *GetGatewayByMacRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGatewayByMacRequest.Unmarshal(m, b)
}
func (m *GetGatewayByMacRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGatewayByMacRequest.Marshal(b, m, deterministic)
}
func (m *GetGatewayByMacRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGatewayByMacRequest.Merge(m, src)
}
func (m *GetGatewayByMacRequest) XXX_Size() int {
	return xxx_messageInfo_GetGatewayByMacRequest.Size(m)
}
func (m *GetGatewayByMacRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGatewayByMacRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGatewayByMacRequest proto.InternalMessageInfo

func (m *GetGatewayByMacRequest) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

type GetGatewayByMacResponse struct {
	OrgId                int64                    `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	GwProfile            *AppServerGatewayProfile `protobuf:"bytes,2,opt,name=gw_profile,json=gwProfile,proto3" json:"gw_profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetGatewayByMacResponse) Reset()         { *m = GetGatewayByMacResponse{} }
func (m *GetGatewayByMacResponse) String() string { return proto.CompactTextString(m) }
func (*GetGatewayByMacResponse) ProtoMessage()    {}
func (*GetGatewayByMacResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{13}
}

func (m *GetGatewayByMacResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGatewayByMacResponse.Unmarshal(m, b)
}
func (m *GetGatewayByMacResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGatewayByMacResponse.Marshal(b, m, deterministic)
}
func (m *GetGatewayByMacResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGatewayByMacResponse.Merge(m, src)
}
func (m *GetGatewayByMacResponse) XXX_Size() int {
	return xxx_messageInfo_GetGatewayByMacResponse.Size(m)
}
func (m *GetGatewayByMacResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGatewayByMacResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGatewayByMacResponse proto.InternalMessageInfo

func (m *GetGatewayByMacResponse) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *GetGatewayByMacResponse) GetGwProfile() *AppServerGatewayProfile {
	if m != nil {
		return m.GwProfile
	}
	return nil
}

type GetDeviceDevEuiListResponse struct {
	DevEui               []string `protobuf:"bytes,1,rep,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceDevEuiListResponse) Reset()         { *m = GetDeviceDevEuiListResponse{} }
func (m *GetDeviceDevEuiListResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceDevEuiListResponse) ProtoMessage()    {}
func (*GetDeviceDevEuiListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{14}
}

func (m *GetDeviceDevEuiListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceDevEuiListResponse.Unmarshal(m, b)
}
func (m *GetDeviceDevEuiListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceDevEuiListResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceDevEuiListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceDevEuiListResponse.Merge(m, src)
}
func (m *GetDeviceDevEuiListResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceDevEuiListResponse.Size(m)
}
func (m *GetDeviceDevEuiListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceDevEuiListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceDevEuiListResponse proto.InternalMessageInfo

func (m *GetDeviceDevEuiListResponse) GetDevEui() []string {
	if m != nil {
		return m.DevEui
	}
	return nil
}

type GetGatewayMacListResponse struct {
	GatewayMac           []string `protobuf:"bytes,1,rep,name=gateway_mac,json=gatewayMac,proto3" json:"gateway_mac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGatewayMacListResponse) Reset()         { *m = GetGatewayMacListResponse{} }
func (m *GetGatewayMacListResponse) String() string { return proto.CompactTextString(m) }
func (*GetGatewayMacListResponse) ProtoMessage()    {}
func (*GetGatewayMacListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2566523af06a975e, []int{15}
}

func (m *GetGatewayMacListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGatewayMacListResponse.Unmarshal(m, b)
}
func (m *GetGatewayMacListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGatewayMacListResponse.Marshal(b, m, deterministic)
}
func (m *GetGatewayMacListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGatewayMacListResponse.Merge(m, src)
}
func (m *GetGatewayMacListResponse) XXX_Size() int {
	return xxx_messageInfo_GetGatewayMacListResponse.Size(m)
}
func (m *GetGatewayMacListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGatewayMacListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGatewayMacListResponse proto.InternalMessageInfo

func (m *GetGatewayMacListResponse) GetGatewayMac() []string {
	if m != nil {
		return m.GatewayMac
	}
	return nil
}

func init() {
	proto.RegisterType((*AppServerDeviceProfile)(nil), "m2m_server.AppServerDeviceProfile")
	proto.RegisterType((*AddDeviceInM2MServerRequest)(nil), "m2m_server.AddDeviceInM2MServerRequest")
	proto.RegisterType((*AddDeviceInM2MServerResponse)(nil), "m2m_server.AddDeviceInM2MServerResponse")
	proto.RegisterType((*DeleteDeviceInM2MServerRequest)(nil), "m2m_server.DeleteDeviceInM2MServerRequest")
	proto.RegisterType((*DeleteDeviceInM2MServerResponse)(nil), "m2m_server.DeleteDeviceInM2MServerResponse")
	proto.RegisterType((*AppServerGatewayProfile)(nil), "m2m_server.AppServerGatewayProfile")
	proto.RegisterType((*AddGatewayInM2MServerRequest)(nil), "m2m_server.AddGatewayInM2MServerRequest")
	proto.RegisterType((*AddGatewayInM2MServerResponse)(nil), "m2m_server.AddGatewayInM2MServerResponse")
	proto.RegisterType((*DeleteGatewayInM2MServerRequest)(nil), "m2m_server.DeleteGatewayInM2MServerRequest")
	proto.RegisterType((*DeleteGatewayInM2MServerResponse)(nil), "m2m_server.DeleteGatewayInM2MServerResponse")
	proto.RegisterType((*GetDeviceByDevEuiRequest)(nil), "m2m_server.GetDeviceByDevEuiRequest")
	proto.RegisterType((*GetDeviceByDevEuiResponse)(nil), "m2m_server.GetDeviceByDevEuiResponse")
	proto.RegisterType((*GetGatewayByMacRequest)(nil), "m2m_server.GetGatewayByMacRequest")
	proto.RegisterType((*GetGatewayByMacResponse)(nil), "m2m_server.GetGatewayByMacResponse")
	proto.RegisterType((*GetDeviceDevEuiListResponse)(nil), "m2m_server.GetDeviceDevEuiListResponse")
	proto.RegisterType((*GetGatewayMacListResponse)(nil), "m2m_server.GetGatewayMacListResponse")
}

func init() { proto.RegisterFile("appserver.proto", fileDescriptor_2566523af06a975e) }

var fileDescriptor_2566523af06a975e = []byte{
	// 1429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x5f, 0x73, 0xd3, 0x46,
	0x10, 0x1f, 0x93, 0x3f, 0x34, 0x6b, 0x12, 0x82, 0x20, 0x89, 0x71, 0x48, 0xec, 0x88, 0x52, 0x52,
	0xa0, 0x66, 0x26, 0xd0, 0xce, 0xc0, 0xf4, 0xa1, 0x0e, 0x01, 0x37, 0x33, 0x71, 0xcb, 0x38, 0x09,
	0x74, 0xda, 0x99, 0xba, 0x87, 0xb4, 0x08, 0x0d, 0xb6, 0x24, 0xa4, 0xb3, 0x1d, 0x3f, 0x75, 0xfa,
	0x69, 0xfa, 0x01, 0xfa, 0xf5, 0xfa, 0xd0, 0x91, 0x74, 0x27, 0xdd, 0x49, 0x77, 0x8e, 0x3b, 0xd3,
	0xbe, 0x64, 0xac, 0xdd, 0xdf, 0xfe, 0x76, 0x6f, 0x77, 0xb5, 0xba, 0x0d, 0x5c, 0x27, 0x41, 0x10,
	0x61, 0x38, 0xc6, 0xb0, 0x15, 0x84, 0x3e, 0xf5, 0x0d, 0x18, 0x1e, 0x0c, 0xfb, 0xa9, 0xa4, 0xde,
	0x70, 0x7c, 0xdf, 0x19, 0xe0, 0xe3, 0x44, 0xf3, 0x6e, 0xf4, 0xfe, 0x31, 0x75, 0x87, 0x18, 0x51,
	0x32, 0x0c, 0x52, 0x70, 0x7d, 0xbb, 0x08, 0xc0, 0x61, 0x40, 0xa7, 0x4c, 0x79, 0xcd, 0xc6, 0xb1,
	0x6b, 0x21, 0x7b, 0xba, 0x81, 0x17, 0xb4, 0x4f, 0x2c, 0xcb, 0x1f, 0x79, 0x94, 0x89, 0x56, 0x1d,
	0x42, 0x71, 0x42, 0x32, 0xbc, 0x18, 0x47, 0x7d, 0x2d, 0x42, 0x4a, 0x5d, 0xcf, 0x89, 0x38, 0x38,
	0xa2, 0xe4, 0xa3, 0xeb, 0x39, 0xec, 0x71, 0x3d, 0x1a, 0x05, 0x18, 0xf6, 0x3d, 0xdf, 0xe6, 0x0e,
	0xaa, 0xd4, 0x0f, 0x46, 0x3c, 0xb0, 0x6b, 0x13, 0x32, 0x18, 0x20, 0x77, 0xb4, 0x36, 0x71, 0xe9,
	0x07, 0x3b, 0x24, 0x93, 0xf4, 0xd9, 0xfc, 0xb3, 0x02, 0x9b, 0xed, 0x20, 0x38, 0x4d, 0xfc, 0x1d,
	0x25, 0x51, 0xbe, 0x0e, 0xfd, 0xf7, 0xee, 0x00, 0x8d, 0x2d, 0xb8, 0x6a, 0xe3, 0xb8, 0x8f, 0x23,
	0xb7, 0x56, 0x69, 0x56, 0xf6, 0x57, 0x7a, 0xcb, 0x36, 0x8e, 0x5f, 0x8e, 0x5c, 0xe3, 0x1e, 0xac,
	0x91, 0x20, 0x18, 0xb8, 0x16, 0xa1, 0xae, 0xef, 0xf5, 0x5d, 0xbb, 0x76, 0xa5, 0x59, 0xd9, 0x5f,
	0xe8, 0xad, 0x0a, 0xd2, 0x63, 0xdb, 0x30, 0x60, 0xd1, 0x23, 0x43, 0xac, 0x2d, 0x24, 0xc6, 0xc9,
	0x6f, 0xe3, 0x19, 0x80, 0x15, 0x22, 0xa1, 0x68, 0xf7, 0x09, 0xad, 0x2d, 0x36, 0x2b, 0xfb, 0xd5,
	0x83, 0x7a, 0x2b, 0x4d, 0x5d, 0x8b, 0xa7, 0xae, 0x75, 0xc6, 0x73, 0xdb, 0x5b, 0x61, 0xe8, 0x36,
	0x35, 0xa7, 0xb0, 0xdd, 0xb6, 0xed, 0x34, 0xc4, 0x63, 0xaf, 0x7b, 0xd0, 0x4d, 0x63, 0xee, 0xe1,
	0xa7, 0x11, 0x46, 0xd4, 0xd8, 0x80, 0x65, 0x3f, 0x74, 0xe2, 0x60, 0x2a, 0x49, 0x30, 0x4b, 0x7e,
	0xe8, 0x1c, 0xdb, 0xc6, 0x0b, 0xa8, 0xc6, 0x87, 0x08, 0xd2, 0x33, 0x25, 0x81, 0x56, 0x0f, 0xcc,
	0x56, 0x5e, 0xd9, 0x96, 0xfa, 0xf4, 0x3d, 0xb0, 0x71, 0xcc, 0x7e, 0x9b, 0x5f, 0xc3, 0x1d, 0xb5,
	0xeb, 0x28, 0xf0, 0xbd, 0x08, 0x63, 0xdf, 0xb1, 0x93, 0xdc, 0xb7, 0x8d, 0xe3, 0x63, 0xdb, 0x7c,
	0x06, 0xbb, 0x47, 0x38, 0x40, 0x8a, 0xda, 0xa0, 0x75, 0x29, 0x36, 0x9f, 0x41, 0x43, 0x6b, 0xca,
	0x9c, 0x6e, 0xc2, 0x72, 0x44, 0x09, 0x1d, 0x45, 0x89, 0xe9, 0x67, 0x3d, 0xf6, 0x64, 0xfe, 0x55,
	0x81, 0xad, 0xec, 0x4c, 0x9d, 0xb4, 0xad, 0x78, 0x49, 0xd7, 0x61, 0x61, 0x48, 0x2c, 0xe6, 0x2b,
	0xfe, 0x29, 0xa4, 0xed, 0x8a, 0x98, 0xb6, 0x66, 0x9c, 0xb6, 0xc8, 0x0a, 0xdd, 0x20, 0x2e, 0x26,
	0x2b, 0xa1, 0x28, 0xca, 0xaa, 0xbb, 0xa8, 0xad, 0xee, 0xd2, 0xbf, 0xab, 0x6e, 0x9c, 0x62, 0x16,
	0xee, 0xfc, 0xe5, 0x3d, 0x04, 0x70, 0x26, 0x85, 0xea, 0xde, 0x55, 0x56, 0x57, 0xce, 0x44, 0x6f,
	0xc5, 0x99, 0xf0, 0xea, 0x3e, 0x85, 0x1d, 0x8d, 0x6b, 0x96, 0xe9, 0x9b, 0xb0, 0xe4, 0x4c, 0x72,
	0xd7, 0x8b, 0xce, 0xe4, 0xd8, 0x36, 0x0f, 0x79, 0x85, 0xf4, 0x31, 0x37, 0xa0, 0x3a, 0x24, 0x56,
	0x9f, 0xd8, 0x76, 0x88, 0x51, 0x94, 0x44, 0xb7, 0xd2, 0x83, 0x21, 0xb1, 0xda, 0xa9, 0xc4, 0x7c,
	0x0e, 0x4d, 0x3d, 0xc7, 0x25, 0x65, 0x7e, 0x02, 0xb5, 0x0e, 0xd2, 0xb4, 0x3d, 0x0e, 0xa7, 0x47,
	0x49, 0xdb, 0x5c, 0xda, 0x56, 0x13, 0xb8, 0xad, 0x30, 0xca, 0xbb, 0xf8, 0x7f, 0x7b, 0x83, 0x1e,
	0xc0, 0x66, 0x07, 0x29, 0x3b, 0xe6, 0xe1, 0xb4, 0x4b, 0x2c, 0x1e, 0x6b, 0xa9, 0x25, 0x4d, 0x0a,
	0x5b, 0x25, 0xec, 0xec, 0x10, 0xff, 0x8b, 0x2e, 0xf8, 0x06, 0xb6, 0xb3, 0xd4, 0xa4, 0x89, 0x39,
	0x71, 0x23, 0x9a, 0x79, 0x96, 0x52, 0xba, 0x20, 0xa4, 0xf4, 0xdb, 0x24, 0xa5, 0x8c, 0xb7, 0x4b,
	0x2c, 0xc9, 0xaa, 0x01, 0x55, 0x36, 0xd8, 0xfb, 0xe9, 0x21, 0x63, 0x4b, 0x70, 0x32, 0xf0, 0xc1,
	0x1f, 0x75, 0x58, 0xcf, 0x6a, 0x1e, 0xff, 0x75, 0x2d, 0x34, 0x5c, 0xb8, 0xa5, 0x1a, 0x37, 0xc6,
	0x7d, 0xe9, 0x48, 0xfa, 0x59, 0x58, 0xdf, 0xbf, 0x1c, 0xc8, 0x02, 0x0c, 0x61, 0x4b, 0x33, 0x67,
	0x8c, 0x07, 0x22, 0xc9, 0xec, 0x39, 0x56, 0x7f, 0x38, 0x17, 0x96, 0xf9, 0x1c, 0xc0, 0x86, 0xf2,
	0x7d, 0x33, 0x8a, 0x61, 0x6b, 0xdf, 0xac, 0xfa, 0x97, 0x73, 0x20, 0x99, 0xb7, 0x11, 0xd4, 0x74,
	0xef, 0x98, 0xa1, 0x08, 0x5b, 0xef, 0xf3, 0xd1, 0x7c, 0x60, 0xe6, 0xf6, 0x1c, 0xd6, 0x3b, 0x48,
	0xdf, 0x26, 0x9f, 0xde, 0x43, 0x32, 0x20, 0x9e, 0x85, 0x46, 0x23, 0x61, 0x18, 0xb9, 0xad, 0xa2,
	0x86, 0xbb, 0x68, 0xea, 0x01, 0x12, 0xed, 0x9b, 0xe1, 0x85, 0x75, 0x76, 0xf1, 0xbd, 0x1b, 0x51,
	0x3f, 0x9c, 0x4a, 0xb4, 0x92, 0x46, 0x45, 0x5b, 0x00, 0x30, 0xda, 0x5f, 0xc0, 0xc8, 0x5c, 0x9e,
	0x47, 0xc4, 0xc1, 0x18, 0x60, 0xec, 0x95, 0xc2, 0xc9, 0x74, 0x9c, 0xda, 0x9c, 0x05, 0x61, 0xe4,
	0x3f, 0x02, 0xc4, 0x6f, 0xd6, 0xe0, 0x75, 0xe8, 0x16, 0x92, 0x70, 0xe4, 0x4f, 0xbc, 0x13, 0xd7,
	0xfb, 0x98, 0x68, 0x54, 0xd1, 0x16, 0x00, 0x8c, 0xf0, 0x04, 0x56, 0xb3, 0x57, 0x35, 0x7e, 0xdd,
	0x8c, 0x3b, 0xa2, 0x49, 0x26, 0xe6, 0x84, 0x3b, 0x1a, 0xad, 0x94, 0x52, 0xf9, 0xea, 0xd3, 0x28,
	0x99, 0xf0, 0x89, 0xa1, 0x0a, 0x52, 0x06, 0x28, 0x68, 0x55, 0x95, 0x92, 0x34, 0x7a, 0xda, 0x62,
	0xa5, 0x4e, 0x60, 0xf5, 0x94, 0xeb, 0xba, 0xbe, 0x8d, 0xf9, 0xd9, 0x25, 0x71, 0xe9, 0xec, 0x05,
	0x6d, 0x5e, 0xf7, 0xae, 0x6f, 0xbb, 0xef, 0xa7, 0x5d, 0xdf, 0xc3, 0x69, 0x3b, 0xbd, 0x92, 0xe6,
	0x75, 0x2f, 0xeb, 0x4a, 0x75, 0x57, 0x41, 0x18, 0xf9, 0x14, 0xee, 0x74, 0x90, 0xbe, 0xf8, 0x40,
	0x3c, 0x07, 0x45, 0x00, 0xcf, 0xc6, 0x43, 0xe1, 0xb0, 0xa2, 0x3e, 0xb5, 0x28, 0x64, 0xe6, 0xd1,
	0x7c, 0x60, 0xe6, 0xda, 0x86, 0x8d, 0x0e, 0xd2, 0xb6, 0x45, 0xdd, 0xb1, 0xe4, 0xda, 0xf8, 0x5c,
	0xa0, 0x29, 0xab, 0xb9, 0xb3, 0x7b, 0x97, 0xa0, 0xb2, 0xc6, 0x5e, 0xcb, 0x47, 0x7f, 0xd2, 0x88,
	0x62, 0xab, 0x09, 0x72, 0xce, 0xbb, 0xab, 0x53, 0x33, 0xc2, 0x9f, 0xe0, 0x46, 0xae, 0xe1, 0xbd,
	0xd8, 0x2c, 0x1b, 0x15, 0x9a, 0x71, 0x6f, 0x06, 0x42, 0xc5, 0xcc, 0x0b, 0xa0, 0x60, 0x2e, 0x64,
	0x7d, 0x6f, 0x06, 0x22, 0x4f, 0xc2, 0x69, 0xfe, 0xfd, 0x8b, 0x3b, 0x52, 0xec, 0x39, 0x41, 0x5e,
	0x4a, 0x42, 0x51, 0xcd, 0x08, 0xbf, 0x4b, 0xc6, 0xc5, 0x1b, 0x0c, 0xa3, 0xf8, 0x9a, 0xb9, 0x59,
	0xba, 0x3e, 0xbe, 0x8c, 0xf7, 0xaa, 0x7a, 0x5d, 0x9c, 0x69, 0x29, 0x36, 0x63, 0x78, 0x05, 0xd5,
	0x0e, 0xd2, 0x53, 0xb6, 0x34, 0x19, 0x22, 0x94, 0x0b, 0x79, 0x30, 0xdb, 0x4a, 0x5d, 0x7e, 0xb4,
	0xb4, 0xbd, 0x33, 0xaa, 0x1d, 0xb9, 0xed, 0x8b, 0x6c, 0xbb, 0x3a, 0x35, 0x23, 0x7c, 0x0a, 0x4b,
	0xa7, 0x94, 0x7c, 0x44, 0xe3, 0x56, 0x96, 0x83, 0xf8, 0x91, 0x9b, 0x6f, 0x14, 0xa4, 0xcc, 0xea,
	0x39, 0x5c, 0x3d, 0xf7, 0xa2, 0xc4, 0x6e, 0x93, 0x23, 0x98, 0x80, 0x5b, 0x6e, 0x95, 0xe4, 0xcc,
	0xb6, 0x07, 0xd7, 0xb3, 0x1e, 0x4e, 0x58, 0x23, 0x63, 0xb7, 0xd4, 0xdc, 0xa9, 0x82, 0x73, 0x35,
	0xb4, 0xfa, 0x8c, 0x33, 0xee, 0xa5, 0xd3, 0x74, 0x07, 0xe5, 0xbd, 0xb4, 0x23, 0xc6, 0x9e, 0xcb,
	0xcb, 0x45, 0x2f, 0xa8, 0xb3, 0x41, 0x74, 0x2b, 0xe7, 0x7c, 0x8d, 0xa1, 0x85, 0x1e, 0x25, 0x8e,
	0xd0, 0xfc, 0x25, 0x55, 0xa9, 0x45, 0x15, 0x08, 0x46, 0xfe, 0x3b, 0xec, 0xc6, 0xe4, 0xf1, 0x96,
	0xfc, 0x83, 0x6f, 0xa3, 0x62, 0x2c, 0x7c, 0x25, 0xb6, 0x81, 0x1e, 0xc7, 0x7d, 0xb6, 0xe6, 0x85,
	0xb3, 0x00, 0x86, 0x50, 0x6b, 0xdb, 0x76, 0x86, 0x94, 0x5c, 0xdf, 0xe7, 0x5c, 0x3a, 0x84, 0x7c,
	0xa9, 0x9b, 0x09, 0x64, 0xee, 0x9c, 0xe4, 0xb2, 0x7d, 0x16, 0x12, 0x2f, 0x22, 0x56, 0xbc, 0xac,
	0x45, 0xbc, 0x4a, 0xe2, 0x60, 0x53, 0xe8, 0xb9, 0xab, 0x2f, 0x2e, 0x83, 0x65, 0xaf, 0xea, 0x4a,
	0x07, 0xe9, 0xb1, 0x67, 0xf9, 0x43, 0x34, 0x6a, 0x82, 0x51, 0x2a, 0xe2, 0x74, 0xb7, 0x15, 0x1a,
	0xa9, 0x3f, 0xcf, 0xfc, 0xe0, 0x3c, 0xe0, 0x31, 0x8a, 0xfd, 0x29, 0x2a, 0x54, 0xfd, 0x29, 0xeb,
	0x19, 0xe7, 0xaf, 0x70, 0x93, 0xab, 0x8e, 0x30, 0xa2, 0xae, 0x97, 0xfc, 0x43, 0xc2, 0x30, 0x8b,
	0x76, 0x82, 0x92, 0x73, 0xdf, 0x9d, 0x89, 0x91, 0xc6, 0xfe, 0x5b, 0xf6, 0x7f, 0x94, 0x57, 0x88,
	0xd2, 0xd8, 0x17, 0xe4, 0xaa, 0xb1, 0x2f, 0xa9, 0xf3, 0x79, 0xc5, 0xc5, 0x3d, 0xfc, 0x94, 0xcf,
	0x2b, 0x41, 0x58, 0x9a, 0x57, 0x92, 0x4e, 0xbe, 0xc5, 0x31, 0x0d, 0xcf, 0xe7, 0x9e, 0xc2, 0x7b,
	0x21, 0xa5, 0xe6, 0x2c, 0x48, 0xfe, 0x05, 0x49, 0xa7, 0x9a, 0x78, 0xf0, 0xa6, 0x3c, 0xf0, 0x14,
	0x67, 0xdf, 0x9b, 0x81, 0x48, 0x99, 0x0f, 0xfe, 0xbe, 0x02, 0xeb, 0xd9, 0x82, 0xc6, 0x77, 0xa0,
	0xdf, 0x92, 0x21, 0x23, 0x6f, 0xaa, 0xec, 0xeb, 0xcd, 0xae, 0xe0, 0xba, 0xed, 0x97, 0x7d, 0xbd,
	0xf5, 0x28, 0x76, 0xa0, 0x9f, 0x93, 0xd6, 0x13, 0xd7, 0x4c, 0xc3, 0x2c, 0x58, 0x2a, 0xf6, 0xd5,
	0xfa, 0xdd, 0x99, 0x18, 0xc6, 0xfd, 0x26, 0x69, 0xc1, 0xe2, 0x32, 0xa9, 0xfd, 0x98, 0xdd, 0x57,
	0x46, 0xac, 0xd8, 0x42, 0x7b, 0xe2, 0x67, 0x9c, 0x2d, 0x9b, 0x5a, 0xd6, 0x7b, 0xea, 0x48, 0x0b,
	0x3b, 0xea, 0xbb, 0xe5, 0xc4, 0xec, 0xc9, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x34, 0x17,
	0x00, 0xff, 0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// M2MServerServiceClient is the client API for M2MServerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type M2MServerServiceClient interface {
	AddDeviceInM2MServer(ctx context.Context, in *AddDeviceInM2MServerRequest, opts ...grpc.CallOption) (*AddDeviceInM2MServerResponse, error)
	DeleteDeviceInM2MServer(ctx context.Context, in *DeleteDeviceInM2MServerRequest, opts ...grpc.CallOption) (*DeleteDeviceInM2MServerResponse, error)
	AddGatewayInM2MServer(ctx context.Context, in *AddGatewayInM2MServerRequest, opts ...grpc.CallOption) (*AddGatewayInM2MServerResponse, error)
	DeleteGatewayInM2MServer(ctx context.Context, in *DeleteGatewayInM2MServerRequest, opts ...grpc.CallOption) (*DeleteGatewayInM2MServerResponse, error)
	// WalletService
	GetWalletBalance(ctx context.Context, in *GetWalletBalanceRequest, opts ...grpc.CallOption) (*GetWalletBalanceResponse, error)
	GetVmxcTxHistory(ctx context.Context, in *GetVmxcTxHistoryRequest, opts ...grpc.CallOption) (*GetVmxcTxHistoryResponse, error)
	GetWalletUsageHist(ctx context.Context, in *GetWalletUsageHistRequest, opts ...grpc.CallOption) (*GetWalletUsageHistResponse, error)
	GetDlPrice(ctx context.Context, in *GetDownLinkPriceRequest, opts ...grpc.CallOption) (*GetDownLinkPriceResponse, error)
	// DeviceService
	GetDeviceList(ctx context.Context, in *GetDeviceListRequest, opts ...grpc.CallOption) (*GetDeviceListResponse, error)
	GetDeviceProfile(ctx context.Context, in *GetDeviceProfileRequest, opts ...grpc.CallOption) (*GetDeviceProfileResponse, error)
	GetDeviceHistory(ctx context.Context, in *GetDeviceHistoryRequest, opts ...grpc.CallOption) (*GetDeviceHistoryResponse, error)
	SetDeviceMode(ctx context.Context, in *SetDeviceModeRequest, opts ...grpc.CallOption) (*SetDeviceModeResponse, error)
	// MoneyService
	ModifyMoneyAccount(ctx context.Context, in *ModifyMoneyAccountRequest, opts ...grpc.CallOption) (*ModifyMoneyAccountResponse, error)
	GetChangeMoneyAccountHistory(ctx context.Context, in *GetMoneyAccountChangeHistoryRequest, opts ...grpc.CallOption) (*GetMoneyAccountChangeHistoryResponse, error)
	GetActiveMoneyAccount(ctx context.Context, in *GetActiveMoneyAccountRequest, opts ...grpc.CallOption) (*GetActiveMoneyAccountResponse, error)
	// GatewayService
	GetGatewayList(ctx context.Context, in *GetGatewayListRequest, opts ...grpc.CallOption) (*GetGatewayListResponse, error)
	GetGatewayProfile(ctx context.Context, in *GetGatewayProfileRequest, opts ...grpc.CallOption) (*GetGatewayProfileResponse, error)
	GetGatewayHistory(ctx context.Context, in *GetGatewayHistoryRequest, opts ...grpc.CallOption) (*GetGatewayHistoryResponse, error)
	SetGatewayMode(ctx context.Context, in *SetGatewayModeRequest, opts ...grpc.CallOption) (*SetGatewayModeResponse, error)
	// ServerInfoService
	GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetVersionResponse, error)
	// SettingsService
	GetSettings(ctx context.Context, in *GetSettingsRequest, opts ...grpc.CallOption) (*GetSettingsResponse, error)
	ModifySettings(ctx context.Context, in *ModifySettingsRequest, opts ...grpc.CallOption) (*ModifySettingsResponse, error)
	// StakingService
	Stake(ctx context.Context, in *StakeRequest, opts ...grpc.CallOption) (*StakeResponse, error)
	Unstake(ctx context.Context, in *UnstakeRequest, opts ...grpc.CallOption) (*UnstakeResponse, error)
	GetActiveStakes(ctx context.Context, in *GetActiveStakesRequest, opts ...grpc.CallOption) (*GetActiveStakesResponse, error)
	GetStakingHistory(ctx context.Context, in *StakingHistoryRequest, opts ...grpc.CallOption) (*StakingHistoryResponse, error)
	GetStakingPercentage(ctx context.Context, in *StakingPercentageRequest, opts ...grpc.CallOption) (*StakingPercentageResponse, error)
	// SuperNodeService
	GetSuperNodeActiveMoneyAccount(ctx context.Context, in *GetSuperNodeActiveMoneyAccountRequest, opts ...grpc.CallOption) (*GetSuperNodeActiveMoneyAccountResponse, error)
	AddSuperNodeMoneyAccount(ctx context.Context, in *AddSuperNodeMoneyAccountRequest, opts ...grpc.CallOption) (*AddSuperNodeMoneyAccountResponse, error)
	// TopUpService
	GetTransactionsHistory(ctx context.Context, in *GetTransactionsHistoryRequest, opts ...grpc.CallOption) (*GetTransactionsHistoryResponse, error)
	GetIncome(ctx context.Context, in *GetIncomeRequest, opts ...grpc.CallOption) (*GetIncomeResponse, error)
	GetTopUpHistory(ctx context.Context, in *GetTopUpHistoryRequest, opts ...grpc.CallOption) (*GetTopUpHistoryResponse, error)
	GetTopUpDestination(ctx context.Context, in *GetTopUpDestinationRequest, opts ...grpc.CallOption) (*GetTopUpDestinationResponse, error)
	// WithdrawService
	GetWithdrawFee(ctx context.Context, in *GetWithdrawFeeRequest, opts ...grpc.CallOption) (*GetWithdrawFeeResponse, error)
	WithdrawReq(ctx context.Context, in *WithdrawReqRequest, opts ...grpc.CallOption) (*WithdrawReqResponse, error)
	GetWithdrawHistory(ctx context.Context, in *GetWithdrawHistoryRequest, opts ...grpc.CallOption) (*GetWithdrawHistoryResponse, error)
	ModifyWithdrawFee(ctx context.Context, in *ModifyWithdrawFeeRequest, opts ...grpc.CallOption) (*ModifyWithdrawFeeResponse, error)
}

type m2MServerServiceClient struct {
	cc *grpc.ClientConn
}

func NewM2MServerServiceClient(cc *grpc.ClientConn) M2MServerServiceClient {
	return &m2MServerServiceClient{cc}
}

func (c *m2MServerServiceClient) AddDeviceInM2MServer(ctx context.Context, in *AddDeviceInM2MServerRequest, opts ...grpc.CallOption) (*AddDeviceInM2MServerResponse, error) {
	out := new(AddDeviceInM2MServerResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/AddDeviceInM2MServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) DeleteDeviceInM2MServer(ctx context.Context, in *DeleteDeviceInM2MServerRequest, opts ...grpc.CallOption) (*DeleteDeviceInM2MServerResponse, error) {
	out := new(DeleteDeviceInM2MServerResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/DeleteDeviceInM2MServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) AddGatewayInM2MServer(ctx context.Context, in *AddGatewayInM2MServerRequest, opts ...grpc.CallOption) (*AddGatewayInM2MServerResponse, error) {
	out := new(AddGatewayInM2MServerResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/AddGatewayInM2MServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) DeleteGatewayInM2MServer(ctx context.Context, in *DeleteGatewayInM2MServerRequest, opts ...grpc.CallOption) (*DeleteGatewayInM2MServerResponse, error) {
	out := new(DeleteGatewayInM2MServerResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/DeleteGatewayInM2MServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetWalletBalance(ctx context.Context, in *GetWalletBalanceRequest, opts ...grpc.CallOption) (*GetWalletBalanceResponse, error) {
	out := new(GetWalletBalanceResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetWalletBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetVmxcTxHistory(ctx context.Context, in *GetVmxcTxHistoryRequest, opts ...grpc.CallOption) (*GetVmxcTxHistoryResponse, error) {
	out := new(GetVmxcTxHistoryResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetVmxcTxHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetWalletUsageHist(ctx context.Context, in *GetWalletUsageHistRequest, opts ...grpc.CallOption) (*GetWalletUsageHistResponse, error) {
	out := new(GetWalletUsageHistResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetWalletUsageHist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetDlPrice(ctx context.Context, in *GetDownLinkPriceRequest, opts ...grpc.CallOption) (*GetDownLinkPriceResponse, error) {
	out := new(GetDownLinkPriceResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetDlPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetDeviceList(ctx context.Context, in *GetDeviceListRequest, opts ...grpc.CallOption) (*GetDeviceListResponse, error) {
	out := new(GetDeviceListResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetDeviceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetDeviceProfile(ctx context.Context, in *GetDeviceProfileRequest, opts ...grpc.CallOption) (*GetDeviceProfileResponse, error) {
	out := new(GetDeviceProfileResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetDeviceProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetDeviceHistory(ctx context.Context, in *GetDeviceHistoryRequest, opts ...grpc.CallOption) (*GetDeviceHistoryResponse, error) {
	out := new(GetDeviceHistoryResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetDeviceHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) SetDeviceMode(ctx context.Context, in *SetDeviceModeRequest, opts ...grpc.CallOption) (*SetDeviceModeResponse, error) {
	out := new(SetDeviceModeResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/SetDeviceMode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) ModifyMoneyAccount(ctx context.Context, in *ModifyMoneyAccountRequest, opts ...grpc.CallOption) (*ModifyMoneyAccountResponse, error) {
	out := new(ModifyMoneyAccountResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/ModifyMoneyAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetChangeMoneyAccountHistory(ctx context.Context, in *GetMoneyAccountChangeHistoryRequest, opts ...grpc.CallOption) (*GetMoneyAccountChangeHistoryResponse, error) {
	out := new(GetMoneyAccountChangeHistoryResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetChangeMoneyAccountHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetActiveMoneyAccount(ctx context.Context, in *GetActiveMoneyAccountRequest, opts ...grpc.CallOption) (*GetActiveMoneyAccountResponse, error) {
	out := new(GetActiveMoneyAccountResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetActiveMoneyAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetGatewayList(ctx context.Context, in *GetGatewayListRequest, opts ...grpc.CallOption) (*GetGatewayListResponse, error) {
	out := new(GetGatewayListResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetGatewayList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetGatewayProfile(ctx context.Context, in *GetGatewayProfileRequest, opts ...grpc.CallOption) (*GetGatewayProfileResponse, error) {
	out := new(GetGatewayProfileResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetGatewayProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetGatewayHistory(ctx context.Context, in *GetGatewayHistoryRequest, opts ...grpc.CallOption) (*GetGatewayHistoryResponse, error) {
	out := new(GetGatewayHistoryResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetGatewayHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) SetGatewayMode(ctx context.Context, in *SetGatewayModeRequest, opts ...grpc.CallOption) (*SetGatewayModeResponse, error) {
	out := new(SetGatewayModeResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/SetGatewayMode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetSettings(ctx context.Context, in *GetSettingsRequest, opts ...grpc.CallOption) (*GetSettingsResponse, error) {
	out := new(GetSettingsResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) ModifySettings(ctx context.Context, in *ModifySettingsRequest, opts ...grpc.CallOption) (*ModifySettingsResponse, error) {
	out := new(ModifySettingsResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/ModifySettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) Stake(ctx context.Context, in *StakeRequest, opts ...grpc.CallOption) (*StakeResponse, error) {
	out := new(StakeResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/Stake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) Unstake(ctx context.Context, in *UnstakeRequest, opts ...grpc.CallOption) (*UnstakeResponse, error) {
	out := new(UnstakeResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/Unstake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetActiveStakes(ctx context.Context, in *GetActiveStakesRequest, opts ...grpc.CallOption) (*GetActiveStakesResponse, error) {
	out := new(GetActiveStakesResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetActiveStakes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetStakingHistory(ctx context.Context, in *StakingHistoryRequest, opts ...grpc.CallOption) (*StakingHistoryResponse, error) {
	out := new(StakingHistoryResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetStakingHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetStakingPercentage(ctx context.Context, in *StakingPercentageRequest, opts ...grpc.CallOption) (*StakingPercentageResponse, error) {
	out := new(StakingPercentageResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetStakingPercentage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetSuperNodeActiveMoneyAccount(ctx context.Context, in *GetSuperNodeActiveMoneyAccountRequest, opts ...grpc.CallOption) (*GetSuperNodeActiveMoneyAccountResponse, error) {
	out := new(GetSuperNodeActiveMoneyAccountResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetSuperNodeActiveMoneyAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) AddSuperNodeMoneyAccount(ctx context.Context, in *AddSuperNodeMoneyAccountRequest, opts ...grpc.CallOption) (*AddSuperNodeMoneyAccountResponse, error) {
	out := new(AddSuperNodeMoneyAccountResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/AddSuperNodeMoneyAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetTransactionsHistory(ctx context.Context, in *GetTransactionsHistoryRequest, opts ...grpc.CallOption) (*GetTransactionsHistoryResponse, error) {
	out := new(GetTransactionsHistoryResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetTransactionsHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetIncome(ctx context.Context, in *GetIncomeRequest, opts ...grpc.CallOption) (*GetIncomeResponse, error) {
	out := new(GetIncomeResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetIncome", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetTopUpHistory(ctx context.Context, in *GetTopUpHistoryRequest, opts ...grpc.CallOption) (*GetTopUpHistoryResponse, error) {
	out := new(GetTopUpHistoryResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetTopUpHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetTopUpDestination(ctx context.Context, in *GetTopUpDestinationRequest, opts ...grpc.CallOption) (*GetTopUpDestinationResponse, error) {
	out := new(GetTopUpDestinationResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetTopUpDestination", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetWithdrawFee(ctx context.Context, in *GetWithdrawFeeRequest, opts ...grpc.CallOption) (*GetWithdrawFeeResponse, error) {
	out := new(GetWithdrawFeeResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetWithdrawFee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) WithdrawReq(ctx context.Context, in *WithdrawReqRequest, opts ...grpc.CallOption) (*WithdrawReqResponse, error) {
	out := new(WithdrawReqResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/WithdrawReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) GetWithdrawHistory(ctx context.Context, in *GetWithdrawHistoryRequest, opts ...grpc.CallOption) (*GetWithdrawHistoryResponse, error) {
	out := new(GetWithdrawHistoryResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/GetWithdrawHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *m2MServerServiceClient) ModifyWithdrawFee(ctx context.Context, in *ModifyWithdrawFeeRequest, opts ...grpc.CallOption) (*ModifyWithdrawFeeResponse, error) {
	out := new(ModifyWithdrawFeeResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.M2MServerService/ModifyWithdrawFee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// M2MServerServiceServer is the server API for M2MServerService service.
type M2MServerServiceServer interface {
	AddDeviceInM2MServer(context.Context, *AddDeviceInM2MServerRequest) (*AddDeviceInM2MServerResponse, error)
	DeleteDeviceInM2MServer(context.Context, *DeleteDeviceInM2MServerRequest) (*DeleteDeviceInM2MServerResponse, error)
	AddGatewayInM2MServer(context.Context, *AddGatewayInM2MServerRequest) (*AddGatewayInM2MServerResponse, error)
	DeleteGatewayInM2MServer(context.Context, *DeleteGatewayInM2MServerRequest) (*DeleteGatewayInM2MServerResponse, error)
	// WalletService
	GetWalletBalance(context.Context, *GetWalletBalanceRequest) (*GetWalletBalanceResponse, error)
	GetVmxcTxHistory(context.Context, *GetVmxcTxHistoryRequest) (*GetVmxcTxHistoryResponse, error)
	GetWalletUsageHist(context.Context, *GetWalletUsageHistRequest) (*GetWalletUsageHistResponse, error)
	GetDlPrice(context.Context, *GetDownLinkPriceRequest) (*GetDownLinkPriceResponse, error)
	// DeviceService
	GetDeviceList(context.Context, *GetDeviceListRequest) (*GetDeviceListResponse, error)
	GetDeviceProfile(context.Context, *GetDeviceProfileRequest) (*GetDeviceProfileResponse, error)
	GetDeviceHistory(context.Context, *GetDeviceHistoryRequest) (*GetDeviceHistoryResponse, error)
	SetDeviceMode(context.Context, *SetDeviceModeRequest) (*SetDeviceModeResponse, error)
	// MoneyService
	ModifyMoneyAccount(context.Context, *ModifyMoneyAccountRequest) (*ModifyMoneyAccountResponse, error)
	GetChangeMoneyAccountHistory(context.Context, *GetMoneyAccountChangeHistoryRequest) (*GetMoneyAccountChangeHistoryResponse, error)
	GetActiveMoneyAccount(context.Context, *GetActiveMoneyAccountRequest) (*GetActiveMoneyAccountResponse, error)
	// GatewayService
	GetGatewayList(context.Context, *GetGatewayListRequest) (*GetGatewayListResponse, error)
	GetGatewayProfile(context.Context, *GetGatewayProfileRequest) (*GetGatewayProfileResponse, error)
	GetGatewayHistory(context.Context, *GetGatewayHistoryRequest) (*GetGatewayHistoryResponse, error)
	SetGatewayMode(context.Context, *SetGatewayModeRequest) (*SetGatewayModeResponse, error)
	// ServerInfoService
	GetVersion(context.Context, *empty.Empty) (*GetVersionResponse, error)
	// SettingsService
	GetSettings(context.Context, *GetSettingsRequest) (*GetSettingsResponse, error)
	ModifySettings(context.Context, *ModifySettingsRequest) (*ModifySettingsResponse, error)
	// StakingService
	Stake(context.Context, *StakeRequest) (*StakeResponse, error)
	Unstake(context.Context, *UnstakeRequest) (*UnstakeResponse, error)
	GetActiveStakes(context.Context, *GetActiveStakesRequest) (*GetActiveStakesResponse, error)
	GetStakingHistory(context.Context, *StakingHistoryRequest) (*StakingHistoryResponse, error)
	GetStakingPercentage(context.Context, *StakingPercentageRequest) (*StakingPercentageResponse, error)
	// SuperNodeService
	GetSuperNodeActiveMoneyAccount(context.Context, *GetSuperNodeActiveMoneyAccountRequest) (*GetSuperNodeActiveMoneyAccountResponse, error)
	AddSuperNodeMoneyAccount(context.Context, *AddSuperNodeMoneyAccountRequest) (*AddSuperNodeMoneyAccountResponse, error)
	// TopUpService
	GetTransactionsHistory(context.Context, *GetTransactionsHistoryRequest) (*GetTransactionsHistoryResponse, error)
	GetIncome(context.Context, *GetIncomeRequest) (*GetIncomeResponse, error)
	GetTopUpHistory(context.Context, *GetTopUpHistoryRequest) (*GetTopUpHistoryResponse, error)
	GetTopUpDestination(context.Context, *GetTopUpDestinationRequest) (*GetTopUpDestinationResponse, error)
	// WithdrawService
	GetWithdrawFee(context.Context, *GetWithdrawFeeRequest) (*GetWithdrawFeeResponse, error)
	WithdrawReq(context.Context, *WithdrawReqRequest) (*WithdrawReqResponse, error)
	GetWithdrawHistory(context.Context, *GetWithdrawHistoryRequest) (*GetWithdrawHistoryResponse, error)
	ModifyWithdrawFee(context.Context, *ModifyWithdrawFeeRequest) (*ModifyWithdrawFeeResponse, error)
}

// UnimplementedM2MServerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedM2MServerServiceServer struct {
}

func (*UnimplementedM2MServerServiceServer) AddDeviceInM2MServer(ctx context.Context, req *AddDeviceInM2MServerRequest) (*AddDeviceInM2MServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDeviceInM2MServer not implemented")
}
func (*UnimplementedM2MServerServiceServer) DeleteDeviceInM2MServer(ctx context.Context, req *DeleteDeviceInM2MServerRequest) (*DeleteDeviceInM2MServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDeviceInM2MServer not implemented")
}
func (*UnimplementedM2MServerServiceServer) AddGatewayInM2MServer(ctx context.Context, req *AddGatewayInM2MServerRequest) (*AddGatewayInM2MServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGatewayInM2MServer not implemented")
}
func (*UnimplementedM2MServerServiceServer) DeleteGatewayInM2MServer(ctx context.Context, req *DeleteGatewayInM2MServerRequest) (*DeleteGatewayInM2MServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGatewayInM2MServer not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetWalletBalance(ctx context.Context, req *GetWalletBalanceRequest) (*GetWalletBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWalletBalance not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetVmxcTxHistory(ctx context.Context, req *GetVmxcTxHistoryRequest) (*GetVmxcTxHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVmxcTxHistory not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetWalletUsageHist(ctx context.Context, req *GetWalletUsageHistRequest) (*GetWalletUsageHistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWalletUsageHist not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetDlPrice(ctx context.Context, req *GetDownLinkPriceRequest) (*GetDownLinkPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDlPrice not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetDeviceList(ctx context.Context, req *GetDeviceListRequest) (*GetDeviceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceList not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetDeviceProfile(ctx context.Context, req *GetDeviceProfileRequest) (*GetDeviceProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceProfile not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetDeviceHistory(ctx context.Context, req *GetDeviceHistoryRequest) (*GetDeviceHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceHistory not implemented")
}
func (*UnimplementedM2MServerServiceServer) SetDeviceMode(ctx context.Context, req *SetDeviceModeRequest) (*SetDeviceModeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDeviceMode not implemented")
}
func (*UnimplementedM2MServerServiceServer) ModifyMoneyAccount(ctx context.Context, req *ModifyMoneyAccountRequest) (*ModifyMoneyAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyMoneyAccount not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetChangeMoneyAccountHistory(ctx context.Context, req *GetMoneyAccountChangeHistoryRequest) (*GetMoneyAccountChangeHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChangeMoneyAccountHistory not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetActiveMoneyAccount(ctx context.Context, req *GetActiveMoneyAccountRequest) (*GetActiveMoneyAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActiveMoneyAccount not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetGatewayList(ctx context.Context, req *GetGatewayListRequest) (*GetGatewayListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGatewayList not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetGatewayProfile(ctx context.Context, req *GetGatewayProfileRequest) (*GetGatewayProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGatewayProfile not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetGatewayHistory(ctx context.Context, req *GetGatewayHistoryRequest) (*GetGatewayHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGatewayHistory not implemented")
}
func (*UnimplementedM2MServerServiceServer) SetGatewayMode(ctx context.Context, req *SetGatewayModeRequest) (*SetGatewayModeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGatewayMode not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetVersion(ctx context.Context, req *empty.Empty) (*GetVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetSettings(ctx context.Context, req *GetSettingsRequest) (*GetSettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSettings not implemented")
}
func (*UnimplementedM2MServerServiceServer) ModifySettings(ctx context.Context, req *ModifySettingsRequest) (*ModifySettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifySettings not implemented")
}
func (*UnimplementedM2MServerServiceServer) Stake(ctx context.Context, req *StakeRequest) (*StakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stake not implemented")
}
func (*UnimplementedM2MServerServiceServer) Unstake(ctx context.Context, req *UnstakeRequest) (*UnstakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unstake not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetActiveStakes(ctx context.Context, req *GetActiveStakesRequest) (*GetActiveStakesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActiveStakes not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetStakingHistory(ctx context.Context, req *StakingHistoryRequest) (*StakingHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStakingHistory not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetStakingPercentage(ctx context.Context, req *StakingPercentageRequest) (*StakingPercentageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStakingPercentage not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetSuperNodeActiveMoneyAccount(ctx context.Context, req *GetSuperNodeActiveMoneyAccountRequest) (*GetSuperNodeActiveMoneyAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSuperNodeActiveMoneyAccount not implemented")
}
func (*UnimplementedM2MServerServiceServer) AddSuperNodeMoneyAccount(ctx context.Context, req *AddSuperNodeMoneyAccountRequest) (*AddSuperNodeMoneyAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSuperNodeMoneyAccount not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetTransactionsHistory(ctx context.Context, req *GetTransactionsHistoryRequest) (*GetTransactionsHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionsHistory not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetIncome(ctx context.Context, req *GetIncomeRequest) (*GetIncomeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIncome not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetTopUpHistory(ctx context.Context, req *GetTopUpHistoryRequest) (*GetTopUpHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopUpHistory not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetTopUpDestination(ctx context.Context, req *GetTopUpDestinationRequest) (*GetTopUpDestinationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopUpDestination not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetWithdrawFee(ctx context.Context, req *GetWithdrawFeeRequest) (*GetWithdrawFeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWithdrawFee not implemented")
}
func (*UnimplementedM2MServerServiceServer) WithdrawReq(ctx context.Context, req *WithdrawReqRequest) (*WithdrawReqResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawReq not implemented")
}
func (*UnimplementedM2MServerServiceServer) GetWithdrawHistory(ctx context.Context, req *GetWithdrawHistoryRequest) (*GetWithdrawHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWithdrawHistory not implemented")
}
func (*UnimplementedM2MServerServiceServer) ModifyWithdrawFee(ctx context.Context, req *ModifyWithdrawFeeRequest) (*ModifyWithdrawFeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyWithdrawFee not implemented")
}

func RegisterM2MServerServiceServer(s *grpc.Server, srv M2MServerServiceServer) {
	s.RegisterService(&_M2MServerService_serviceDesc, srv)
}

func _M2MServerService_AddDeviceInM2MServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDeviceInM2MServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).AddDeviceInM2MServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/AddDeviceInM2MServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).AddDeviceInM2MServer(ctx, req.(*AddDeviceInM2MServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_DeleteDeviceInM2MServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceInM2MServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).DeleteDeviceInM2MServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/DeleteDeviceInM2MServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).DeleteDeviceInM2MServer(ctx, req.(*DeleteDeviceInM2MServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_AddGatewayInM2MServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddGatewayInM2MServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).AddGatewayInM2MServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/AddGatewayInM2MServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).AddGatewayInM2MServer(ctx, req.(*AddGatewayInM2MServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_DeleteGatewayInM2MServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGatewayInM2MServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).DeleteGatewayInM2MServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/DeleteGatewayInM2MServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).DeleteGatewayInM2MServer(ctx, req.(*DeleteGatewayInM2MServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetWalletBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWalletBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetWalletBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetWalletBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetWalletBalance(ctx, req.(*GetWalletBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetVmxcTxHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVmxcTxHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetVmxcTxHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetVmxcTxHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetVmxcTxHistory(ctx, req.(*GetVmxcTxHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetWalletUsageHist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWalletUsageHistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetWalletUsageHist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetWalletUsageHist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetWalletUsageHist(ctx, req.(*GetWalletUsageHistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetDlPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDownLinkPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetDlPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetDlPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetDlPrice(ctx, req.(*GetDownLinkPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetDeviceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetDeviceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetDeviceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetDeviceList(ctx, req.(*GetDeviceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetDeviceProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetDeviceProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetDeviceProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetDeviceProfile(ctx, req.(*GetDeviceProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetDeviceHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetDeviceHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetDeviceHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetDeviceHistory(ctx, req.(*GetDeviceHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_SetDeviceMode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDeviceModeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).SetDeviceMode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/SetDeviceMode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).SetDeviceMode(ctx, req.(*SetDeviceModeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_ModifyMoneyAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyMoneyAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).ModifyMoneyAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/ModifyMoneyAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).ModifyMoneyAccount(ctx, req.(*ModifyMoneyAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetChangeMoneyAccountHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMoneyAccountChangeHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetChangeMoneyAccountHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetChangeMoneyAccountHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetChangeMoneyAccountHistory(ctx, req.(*GetMoneyAccountChangeHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetActiveMoneyAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActiveMoneyAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetActiveMoneyAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetActiveMoneyAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetActiveMoneyAccount(ctx, req.(*GetActiveMoneyAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetGatewayList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewayListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetGatewayList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetGatewayList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetGatewayList(ctx, req.(*GetGatewayListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetGatewayProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewayProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetGatewayProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetGatewayProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetGatewayProfile(ctx, req.(*GetGatewayProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetGatewayHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewayHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetGatewayHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetGatewayHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetGatewayHistory(ctx, req.(*GetGatewayHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_SetGatewayMode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetGatewayModeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).SetGatewayMode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/SetGatewayMode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).SetGatewayMode(ctx, req.(*SetGatewayModeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetVersion(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetSettings(ctx, req.(*GetSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_ModifySettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifySettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).ModifySettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/ModifySettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).ModifySettings(ctx, req.(*ModifySettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_Stake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StakeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).Stake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/Stake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).Stake(ctx, req.(*StakeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_Unstake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnstakeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).Unstake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/Unstake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).Unstake(ctx, req.(*UnstakeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetActiveStakes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActiveStakesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetActiveStakes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetActiveStakes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetActiveStakes(ctx, req.(*GetActiveStakesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetStakingHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StakingHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetStakingHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetStakingHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetStakingHistory(ctx, req.(*StakingHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetStakingPercentage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StakingPercentageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetStakingPercentage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetStakingPercentage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetStakingPercentage(ctx, req.(*StakingPercentageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetSuperNodeActiveMoneyAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSuperNodeActiveMoneyAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetSuperNodeActiveMoneyAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetSuperNodeActiveMoneyAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetSuperNodeActiveMoneyAccount(ctx, req.(*GetSuperNodeActiveMoneyAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_AddSuperNodeMoneyAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddSuperNodeMoneyAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).AddSuperNodeMoneyAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/AddSuperNodeMoneyAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).AddSuperNodeMoneyAccount(ctx, req.(*AddSuperNodeMoneyAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetTransactionsHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionsHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetTransactionsHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetTransactionsHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetTransactionsHistory(ctx, req.(*GetTransactionsHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetIncome_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIncomeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetIncome(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetIncome",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetIncome(ctx, req.(*GetIncomeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetTopUpHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTopUpHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetTopUpHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetTopUpHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetTopUpHistory(ctx, req.(*GetTopUpHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetTopUpDestination_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTopUpDestinationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetTopUpDestination(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetTopUpDestination",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetTopUpDestination(ctx, req.(*GetTopUpDestinationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetWithdrawFee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWithdrawFeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetWithdrawFee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetWithdrawFee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetWithdrawFee(ctx, req.(*GetWithdrawFeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_WithdrawReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawReqRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).WithdrawReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/WithdrawReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).WithdrawReq(ctx, req.(*WithdrawReqRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_GetWithdrawHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWithdrawHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).GetWithdrawHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/GetWithdrawHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).GetWithdrawHistory(ctx, req.(*GetWithdrawHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _M2MServerService_ModifyWithdrawFee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyWithdrawFeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M2MServerServiceServer).ModifyWithdrawFee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.M2MServerService/ModifyWithdrawFee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M2MServerServiceServer).ModifyWithdrawFee(ctx, req.(*ModifyWithdrawFeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _M2MServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "m2m_server.M2MServerService",
	HandlerType: (*M2MServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddDeviceInM2MServer",
			Handler:    _M2MServerService_AddDeviceInM2MServer_Handler,
		},
		{
			MethodName: "DeleteDeviceInM2MServer",
			Handler:    _M2MServerService_DeleteDeviceInM2MServer_Handler,
		},
		{
			MethodName: "AddGatewayInM2MServer",
			Handler:    _M2MServerService_AddGatewayInM2MServer_Handler,
		},
		{
			MethodName: "DeleteGatewayInM2MServer",
			Handler:    _M2MServerService_DeleteGatewayInM2MServer_Handler,
		},
		{
			MethodName: "GetWalletBalance",
			Handler:    _M2MServerService_GetWalletBalance_Handler,
		},
		{
			MethodName: "GetVmxcTxHistory",
			Handler:    _M2MServerService_GetVmxcTxHistory_Handler,
		},
		{
			MethodName: "GetWalletUsageHist",
			Handler:    _M2MServerService_GetWalletUsageHist_Handler,
		},
		{
			MethodName: "GetDlPrice",
			Handler:    _M2MServerService_GetDlPrice_Handler,
		},
		{
			MethodName: "GetDeviceList",
			Handler:    _M2MServerService_GetDeviceList_Handler,
		},
		{
			MethodName: "GetDeviceProfile",
			Handler:    _M2MServerService_GetDeviceProfile_Handler,
		},
		{
			MethodName: "GetDeviceHistory",
			Handler:    _M2MServerService_GetDeviceHistory_Handler,
		},
		{
			MethodName: "SetDeviceMode",
			Handler:    _M2MServerService_SetDeviceMode_Handler,
		},
		{
			MethodName: "ModifyMoneyAccount",
			Handler:    _M2MServerService_ModifyMoneyAccount_Handler,
		},
		{
			MethodName: "GetChangeMoneyAccountHistory",
			Handler:    _M2MServerService_GetChangeMoneyAccountHistory_Handler,
		},
		{
			MethodName: "GetActiveMoneyAccount",
			Handler:    _M2MServerService_GetActiveMoneyAccount_Handler,
		},
		{
			MethodName: "GetGatewayList",
			Handler:    _M2MServerService_GetGatewayList_Handler,
		},
		{
			MethodName: "GetGatewayProfile",
			Handler:    _M2MServerService_GetGatewayProfile_Handler,
		},
		{
			MethodName: "GetGatewayHistory",
			Handler:    _M2MServerService_GetGatewayHistory_Handler,
		},
		{
			MethodName: "SetGatewayMode",
			Handler:    _M2MServerService_SetGatewayMode_Handler,
		},
		{
			MethodName: "GetVersion",
			Handler:    _M2MServerService_GetVersion_Handler,
		},
		{
			MethodName: "GetSettings",
			Handler:    _M2MServerService_GetSettings_Handler,
		},
		{
			MethodName: "ModifySettings",
			Handler:    _M2MServerService_ModifySettings_Handler,
		},
		{
			MethodName: "Stake",
			Handler:    _M2MServerService_Stake_Handler,
		},
		{
			MethodName: "Unstake",
			Handler:    _M2MServerService_Unstake_Handler,
		},
		{
			MethodName: "GetActiveStakes",
			Handler:    _M2MServerService_GetActiveStakes_Handler,
		},
		{
			MethodName: "GetStakingHistory",
			Handler:    _M2MServerService_GetStakingHistory_Handler,
		},
		{
			MethodName: "GetStakingPercentage",
			Handler:    _M2MServerService_GetStakingPercentage_Handler,
		},
		{
			MethodName: "GetSuperNodeActiveMoneyAccount",
			Handler:    _M2MServerService_GetSuperNodeActiveMoneyAccount_Handler,
		},
		{
			MethodName: "AddSuperNodeMoneyAccount",
			Handler:    _M2MServerService_AddSuperNodeMoneyAccount_Handler,
		},
		{
			MethodName: "GetTransactionsHistory",
			Handler:    _M2MServerService_GetTransactionsHistory_Handler,
		},
		{
			MethodName: "GetIncome",
			Handler:    _M2MServerService_GetIncome_Handler,
		},
		{
			MethodName: "GetTopUpHistory",
			Handler:    _M2MServerService_GetTopUpHistory_Handler,
		},
		{
			MethodName: "GetTopUpDestination",
			Handler:    _M2MServerService_GetTopUpDestination_Handler,
		},
		{
			MethodName: "GetWithdrawFee",
			Handler:    _M2MServerService_GetWithdrawFee_Handler,
		},
		{
			MethodName: "WithdrawReq",
			Handler:    _M2MServerService_WithdrawReq_Handler,
		},
		{
			MethodName: "GetWithdrawHistory",
			Handler:    _M2MServerService_GetWithdrawHistory_Handler,
		},
		{
			MethodName: "ModifyWithdrawFee",
			Handler:    _M2MServerService_ModifyWithdrawFee_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "appserver.proto",
}

// AppServerServiceClient is the client API for AppServerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppServerServiceClient interface {
	GetDeviceByDevEui(ctx context.Context, in *GetDeviceByDevEuiRequest, opts ...grpc.CallOption) (*GetDeviceByDevEuiResponse, error)
	GetGatewayByMac(ctx context.Context, in *GetGatewayByMacRequest, opts ...grpc.CallOption) (*GetGatewayByMacResponse, error)
	GetDeviceDevEuiList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetDeviceDevEuiListResponse, error)
	GetGatewayMacList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetGatewayMacListResponse, error)
}

type appServerServiceClient struct {
	cc *grpc.ClientConn
}

func NewAppServerServiceClient(cc *grpc.ClientConn) AppServerServiceClient {
	return &appServerServiceClient{cc}
}

func (c *appServerServiceClient) GetDeviceByDevEui(ctx context.Context, in *GetDeviceByDevEuiRequest, opts ...grpc.CallOption) (*GetDeviceByDevEuiResponse, error) {
	out := new(GetDeviceByDevEuiResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.AppServerService/GetDeviceByDevEui", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appServerServiceClient) GetGatewayByMac(ctx context.Context, in *GetGatewayByMacRequest, opts ...grpc.CallOption) (*GetGatewayByMacResponse, error) {
	out := new(GetGatewayByMacResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.AppServerService/GetGatewayByMac", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appServerServiceClient) GetDeviceDevEuiList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetDeviceDevEuiListResponse, error) {
	out := new(GetDeviceDevEuiListResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.AppServerService/GetDeviceDevEuiList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appServerServiceClient) GetGatewayMacList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetGatewayMacListResponse, error) {
	out := new(GetGatewayMacListResponse)
	err := c.cc.Invoke(ctx, "/m2m_server.AppServerService/GetGatewayMacList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppServerServiceServer is the server API for AppServerService service.
type AppServerServiceServer interface {
	GetDeviceByDevEui(context.Context, *GetDeviceByDevEuiRequest) (*GetDeviceByDevEuiResponse, error)
	GetGatewayByMac(context.Context, *GetGatewayByMacRequest) (*GetGatewayByMacResponse, error)
	GetDeviceDevEuiList(context.Context, *empty.Empty) (*GetDeviceDevEuiListResponse, error)
	GetGatewayMacList(context.Context, *empty.Empty) (*GetGatewayMacListResponse, error)
}

// UnimplementedAppServerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAppServerServiceServer struct {
}

func (*UnimplementedAppServerServiceServer) GetDeviceByDevEui(ctx context.Context, req *GetDeviceByDevEuiRequest) (*GetDeviceByDevEuiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceByDevEui not implemented")
}
func (*UnimplementedAppServerServiceServer) GetGatewayByMac(ctx context.Context, req *GetGatewayByMacRequest) (*GetGatewayByMacResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGatewayByMac not implemented")
}
func (*UnimplementedAppServerServiceServer) GetDeviceDevEuiList(ctx context.Context, req *empty.Empty) (*GetDeviceDevEuiListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceDevEuiList not implemented")
}
func (*UnimplementedAppServerServiceServer) GetGatewayMacList(ctx context.Context, req *empty.Empty) (*GetGatewayMacListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGatewayMacList not implemented")
}

func RegisterAppServerServiceServer(s *grpc.Server, srv AppServerServiceServer) {
	s.RegisterService(&_AppServerService_serviceDesc, srv)
}

func _AppServerService_GetDeviceByDevEui_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceByDevEuiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServerServiceServer).GetDeviceByDevEui(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.AppServerService/GetDeviceByDevEui",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServerServiceServer).GetDeviceByDevEui(ctx, req.(*GetDeviceByDevEuiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppServerService_GetGatewayByMac_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewayByMacRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServerServiceServer).GetGatewayByMac(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.AppServerService/GetGatewayByMac",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServerServiceServer).GetGatewayByMac(ctx, req.(*GetGatewayByMacRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppServerService_GetDeviceDevEuiList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServerServiceServer).GetDeviceDevEuiList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.AppServerService/GetDeviceDevEuiList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServerServiceServer).GetDeviceDevEuiList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppServerService_GetGatewayMacList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServerServiceServer).GetGatewayMacList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_server.AppServerService/GetGatewayMacList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServerServiceServer).GetGatewayMacList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _AppServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "m2m_server.AppServerService",
	HandlerType: (*AppServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDeviceByDevEui",
			Handler:    _AppServerService_GetDeviceByDevEui_Handler,
		},
		{
			MethodName: "GetGatewayByMac",
			Handler:    _AppServerService_GetGatewayByMac_Handler,
		},
		{
			MethodName: "GetDeviceDevEuiList",
			Handler:    _AppServerService_GetDeviceDevEuiList_Handler,
		},
		{
			MethodName: "GetGatewayMacList",
			Handler:    _AppServerService_GetGatewayMacList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "appserver.proto",
}
