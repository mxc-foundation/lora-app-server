// Code generated by protoc-gen-go. DO NOT EDIT.
// source: organization.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Organization struct {
	// Organization ID.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Organization name.
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Organization display name.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// Can the organization create and "own" Gateways?
	CanHaveGateways bool `protobuf:"varint,4,opt,name=can_have_gateways,json=canHaveGateways" json:"can_have_gateways,omitempty"`
}

func (m *Organization) Reset()                    { *m = Organization{} }
func (m *Organization) String() string            { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()               {}
func (*Organization) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Organization) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Organization) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Organization) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Organization) GetCanHaveGateways() bool {
	if m != nil {
		return m.CanHaveGateways
	}
	return false
}

type OrganizationListItem struct {
	// Organization ID.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Organization name.
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Organization display name.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// Can the organization create and "own" Gateways?
	CanHaveGateways bool `protobuf:"varint,4,opt,name=can_have_gateways,json=canHaveGateways" json:"can_have_gateways,omitempty"`
	// Created at timestamp.
	CreatedAt *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *OrganizationListItem) Reset()                    { *m = OrganizationListItem{} }
func (m *OrganizationListItem) String() string            { return proto.CompactTextString(m) }
func (*OrganizationListItem) ProtoMessage()               {}
func (*OrganizationListItem) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *OrganizationListItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OrganizationListItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrganizationListItem) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *OrganizationListItem) GetCanHaveGateways() bool {
	if m != nil {
		return m.CanHaveGateways
	}
	return false
}

func (m *OrganizationListItem) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *OrganizationListItem) GetUpdatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type GetOrganizationRequest struct {
	// Organization ID.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetOrganizationRequest) Reset()                    { *m = GetOrganizationRequest{} }
func (m *GetOrganizationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOrganizationRequest) ProtoMessage()               {}
func (*GetOrganizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *GetOrganizationRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetOrganizationResponse struct {
	// Organization object.
	Organization *Organization `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	// Created at timestamp.
	CreatedAt *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *GetOrganizationResponse) Reset()                    { *m = GetOrganizationResponse{} }
func (m *GetOrganizationResponse) String() string            { return proto.CompactTextString(m) }
func (*GetOrganizationResponse) ProtoMessage()               {}
func (*GetOrganizationResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *GetOrganizationResponse) GetOrganization() *Organization {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *GetOrganizationResponse) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetOrganizationResponse) GetUpdatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CreateOrganizationRequest struct {
	// Organization object to create.
	Organization *Organization `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
}

func (m *CreateOrganizationRequest) Reset()                    { *m = CreateOrganizationRequest{} }
func (m *CreateOrganizationRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateOrganizationRequest) ProtoMessage()               {}
func (*CreateOrganizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *CreateOrganizationRequest) GetOrganization() *Organization {
	if m != nil {
		return m.Organization
	}
	return nil
}

type CreateOrganizationResponse struct {
	// Organization ID.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateOrganizationResponse) Reset()                    { *m = CreateOrganizationResponse{} }
func (m *CreateOrganizationResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateOrganizationResponse) ProtoMessage()               {}
func (*CreateOrganizationResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *CreateOrganizationResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UpdateOrganizationRequest struct {
	// Organization object to update.
	Organization *Organization `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
}

func (m *UpdateOrganizationRequest) Reset()                    { *m = UpdateOrganizationRequest{} }
func (m *UpdateOrganizationRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateOrganizationRequest) ProtoMessage()               {}
func (*UpdateOrganizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *UpdateOrganizationRequest) GetOrganization() *Organization {
	if m != nil {
		return m.Organization
	}
	return nil
}

type DeleteOrganizationRequest struct {
	// Organization ID.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteOrganizationRequest) Reset()                    { *m = DeleteOrganizationRequest{} }
func (m *DeleteOrganizationRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteOrganizationRequest) ProtoMessage()               {}
func (*DeleteOrganizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *DeleteOrganizationRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListOrganizationRequest struct {
	// Max number of organizations to return in the result-set.
	Limit int64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int64 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	// When provided, the given string will be used to search on
	// displayName.
	Search string `protobuf:"bytes,3,opt,name=search" json:"search,omitempty"`
}

func (m *ListOrganizationRequest) Reset()                    { *m = ListOrganizationRequest{} }
func (m *ListOrganizationRequest) String() string            { return proto.CompactTextString(m) }
func (*ListOrganizationRequest) ProtoMessage()               {}
func (*ListOrganizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

func (m *ListOrganizationRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListOrganizationRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListOrganizationRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type ListOrganizationResponse struct {
	// Total number of organizations.
	TotalCount int64                   `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	Result     []*OrganizationListItem `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
}

func (m *ListOrganizationResponse) Reset()                    { *m = ListOrganizationResponse{} }
func (m *ListOrganizationResponse) String() string            { return proto.CompactTextString(m) }
func (*ListOrganizationResponse) ProtoMessage()               {}
func (*ListOrganizationResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func (m *ListOrganizationResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListOrganizationResponse) GetResult() []*OrganizationListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type OrganizationUser struct {
	// Organization ID.
	OrganizationId int64 `protobuf:"varint,1,opt,name=organization_id,json=organizationID" json:"organization_id,omitempty"`
	// User ID.
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userID" json:"user_id,omitempty"`
	// User is admin within the context of the organization.
	// There is no need to set the is_device_admin and is_gateway_admin flags.
	IsAdmin bool `protobuf:"varint,3,opt,name=is_admin,json=isAdmin" json:"is_admin,omitempty"`
	// User is able to modify device related resources (applications,
	// device-profiles, devices, multicast-groups).
	IsDeviceAdmin bool `protobuf:"varint,5,opt,name=is_device_admin,json=isDeviceAdmin" json:"is_device_admin,omitempty"`
	// User is able to modify gateways.
	IsGatewayAdmin bool `protobuf:"varint,6,opt,name=is_gateway_admin,json=isGatewayAdmin" json:"is_gateway_admin,omitempty"`
	// Username (only used on get).
	Username string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
}

func (m *OrganizationUser) Reset()                    { *m = OrganizationUser{} }
func (m *OrganizationUser) String() string            { return proto.CompactTextString(m) }
func (*OrganizationUser) ProtoMessage()               {}
func (*OrganizationUser) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

func (m *OrganizationUser) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *OrganizationUser) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *OrganizationUser) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *OrganizationUser) GetIsDeviceAdmin() bool {
	if m != nil {
		return m.IsDeviceAdmin
	}
	return false
}

func (m *OrganizationUser) GetIsGatewayAdmin() bool {
	if m != nil {
		return m.IsGatewayAdmin
	}
	return false
}

func (m *OrganizationUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type OrganizationUserListItem struct {
	// User ID.
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userID" json:"user_id,omitempty"`
	// Username.
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	// User is admin within the context of the organization.
	// There is no need to set the is_device_admin and is_gateway_admin flags.
	IsAdmin bool `protobuf:"varint,3,opt,name=is_admin,json=isAdmin" json:"is_admin,omitempty"`
	// User is able to modify device related resources (applications,
	// device-profiles, devices, multicast-groups).
	IsDeviceAdmin bool `protobuf:"varint,6,opt,name=is_device_admin,json=isDeviceAdmin" json:"is_device_admin,omitempty"`
	// User is able to modify gateways.
	IsGatewayAdmin bool `protobuf:"varint,7,opt,name=is_gateway_admin,json=isGatewayAdmin" json:"is_gateway_admin,omitempty"`
	// Created at timestamp.
	CreatedAt *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *OrganizationUserListItem) Reset()                    { *m = OrganizationUserListItem{} }
func (m *OrganizationUserListItem) String() string            { return proto.CompactTextString(m) }
func (*OrganizationUserListItem) ProtoMessage()               {}
func (*OrganizationUserListItem) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

func (m *OrganizationUserListItem) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *OrganizationUserListItem) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *OrganizationUserListItem) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *OrganizationUserListItem) GetIsDeviceAdmin() bool {
	if m != nil {
		return m.IsDeviceAdmin
	}
	return false
}

func (m *OrganizationUserListItem) GetIsGatewayAdmin() bool {
	if m != nil {
		return m.IsGatewayAdmin
	}
	return false
}

func (m *OrganizationUserListItem) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *OrganizationUserListItem) GetUpdatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type AddOrganizationUserRequest struct {
	// Organization-user object to create.
	OrganizationUser *OrganizationUser `protobuf:"bytes,1,opt,name=organization_user,json=organizationUser" json:"organization_user,omitempty"`
}

func (m *AddOrganizationUserRequest) Reset()                    { *m = AddOrganizationUserRequest{} }
func (m *AddOrganizationUserRequest) String() string            { return proto.CompactTextString(m) }
func (*AddOrganizationUserRequest) ProtoMessage()               {}
func (*AddOrganizationUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{12} }

func (m *AddOrganizationUserRequest) GetOrganizationUser() *OrganizationUser {
	if m != nil {
		return m.OrganizationUser
	}
	return nil
}

type UpdateOrganizationUserRequest struct {
	// Organization-user object to update.
	OrganizationUser *OrganizationUser `protobuf:"bytes,1,opt,name=organization_user,json=organizationUser" json:"organization_user,omitempty"`
}

func (m *UpdateOrganizationUserRequest) Reset()                    { *m = UpdateOrganizationUserRequest{} }
func (m *UpdateOrganizationUserRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateOrganizationUserRequest) ProtoMessage()               {}
func (*UpdateOrganizationUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{13} }

func (m *UpdateOrganizationUserRequest) GetOrganizationUser() *OrganizationUser {
	if m != nil {
		return m.OrganizationUser
	}
	return nil
}

type DeleteOrganizationUserRequest struct {
	// Organization ID.
	OrganizationId int64 `protobuf:"varint,1,opt,name=organization_id,json=organizationID" json:"organization_id,omitempty"`
	// User ID.
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userID" json:"user_id,omitempty"`
}

func (m *DeleteOrganizationUserRequest) Reset()                    { *m = DeleteOrganizationUserRequest{} }
func (m *DeleteOrganizationUserRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteOrganizationUserRequest) ProtoMessage()               {}
func (*DeleteOrganizationUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{14} }

func (m *DeleteOrganizationUserRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *DeleteOrganizationUserRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ListOrganizationUsersRequest struct {
	// Organization ID.
	OrganizationId int64 `protobuf:"varint,1,opt,name=organization_id,json=organizationID" json:"organization_id,omitempty"`
	// Max number of users to return in the result-set.
	Limit int32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int32 `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
}

func (m *ListOrganizationUsersRequest) Reset()                    { *m = ListOrganizationUsersRequest{} }
func (m *ListOrganizationUsersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListOrganizationUsersRequest) ProtoMessage()               {}
func (*ListOrganizationUsersRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{15} }

func (m *ListOrganizationUsersRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *ListOrganizationUsersRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListOrganizationUsersRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ListOrganizationUsersResponse struct {
	// The total number of users in the organization.
	TotalCount int64                       `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	Result     []*OrganizationUserListItem `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
}

func (m *ListOrganizationUsersResponse) Reset()                    { *m = ListOrganizationUsersResponse{} }
func (m *ListOrganizationUsersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListOrganizationUsersResponse) ProtoMessage()               {}
func (*ListOrganizationUsersResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{16} }

func (m *ListOrganizationUsersResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListOrganizationUsersResponse) GetResult() []*OrganizationUserListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetOrganizationUserRequest struct {
	// Organization ID.
	OrganizationId int64 `protobuf:"varint,1,opt,name=organization_id,json=organizationID" json:"organization_id,omitempty"`
	// User ID.
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userID" json:"user_id,omitempty"`
}

func (m *GetOrganizationUserRequest) Reset()                    { *m = GetOrganizationUserRequest{} }
func (m *GetOrganizationUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOrganizationUserRequest) ProtoMessage()               {}
func (*GetOrganizationUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{17} }

func (m *GetOrganizationUserRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *GetOrganizationUserRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// Response for a user in the organization
type GetOrganizationUserResponse struct {
	// Organization-user object.
	OrganizationUser *OrganizationUser `protobuf:"bytes,1,opt,name=organization_user,json=organizationUser" json:"organization_user,omitempty"`
	// Created at timestamp.
	CreatedAt *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *GetOrganizationUserResponse) Reset()                    { *m = GetOrganizationUserResponse{} }
func (m *GetOrganizationUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GetOrganizationUserResponse) ProtoMessage()               {}
func (*GetOrganizationUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{18} }

func (m *GetOrganizationUserResponse) GetOrganizationUser() *OrganizationUser {
	if m != nil {
		return m.OrganizationUser
	}
	return nil
}

func (m *GetOrganizationUserResponse) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetOrganizationUserResponse) GetUpdatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*Organization)(nil), "api.Organization")
	proto.RegisterType((*OrganizationListItem)(nil), "api.OrganizationListItem")
	proto.RegisterType((*GetOrganizationRequest)(nil), "api.GetOrganizationRequest")
	proto.RegisterType((*GetOrganizationResponse)(nil), "api.GetOrganizationResponse")
	proto.RegisterType((*CreateOrganizationRequest)(nil), "api.CreateOrganizationRequest")
	proto.RegisterType((*CreateOrganizationResponse)(nil), "api.CreateOrganizationResponse")
	proto.RegisterType((*UpdateOrganizationRequest)(nil), "api.UpdateOrganizationRequest")
	proto.RegisterType((*DeleteOrganizationRequest)(nil), "api.DeleteOrganizationRequest")
	proto.RegisterType((*ListOrganizationRequest)(nil), "api.ListOrganizationRequest")
	proto.RegisterType((*ListOrganizationResponse)(nil), "api.ListOrganizationResponse")
	proto.RegisterType((*OrganizationUser)(nil), "api.OrganizationUser")
	proto.RegisterType((*OrganizationUserListItem)(nil), "api.OrganizationUserListItem")
	proto.RegisterType((*AddOrganizationUserRequest)(nil), "api.AddOrganizationUserRequest")
	proto.RegisterType((*UpdateOrganizationUserRequest)(nil), "api.UpdateOrganizationUserRequest")
	proto.RegisterType((*DeleteOrganizationUserRequest)(nil), "api.DeleteOrganizationUserRequest")
	proto.RegisterType((*ListOrganizationUsersRequest)(nil), "api.ListOrganizationUsersRequest")
	proto.RegisterType((*ListOrganizationUsersResponse)(nil), "api.ListOrganizationUsersResponse")
	proto.RegisterType((*GetOrganizationUserRequest)(nil), "api.GetOrganizationUserRequest")
	proto.RegisterType((*GetOrganizationUserResponse)(nil), "api.GetOrganizationUserResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OrganizationService service

type OrganizationServiceClient interface {
	// Get organization list.
	List(ctx context.Context, in *ListOrganizationRequest, opts ...grpc.CallOption) (*ListOrganizationResponse, error)
	// Get data for a particular organization.
	Get(ctx context.Context, in *GetOrganizationRequest, opts ...grpc.CallOption) (*GetOrganizationResponse, error)
	// Create a new organization.
	Create(ctx context.Context, in *CreateOrganizationRequest, opts ...grpc.CallOption) (*CreateOrganizationResponse, error)
	// Update an existing organization.
	Update(ctx context.Context, in *UpdateOrganizationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// Delete an organization.
	Delete(ctx context.Context, in *DeleteOrganizationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// Get organization's user list.
	ListUsers(ctx context.Context, in *ListOrganizationUsersRequest, opts ...grpc.CallOption) (*ListOrganizationUsersResponse, error)
	// Get data for a particular organization user.
	GetUser(ctx context.Context, in *GetOrganizationUserRequest, opts ...grpc.CallOption) (*GetOrganizationUserResponse, error)
	// Add a new user to an organization.
	AddUser(ctx context.Context, in *AddOrganizationUserRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// Update a user in an organization.
	UpdateUser(ctx context.Context, in *UpdateOrganizationUserRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// Delete a user from an organization.
	DeleteUser(ctx context.Context, in *DeleteOrganizationUserRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
}

type organizationServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrganizationServiceClient(cc *grpc.ClientConn) OrganizationServiceClient {
	return &organizationServiceClient{cc}
}

func (c *organizationServiceClient) List(ctx context.Context, in *ListOrganizationRequest, opts ...grpc.CallOption) (*ListOrganizationResponse, error) {
	out := new(ListOrganizationResponse)
	err := grpc.Invoke(ctx, "/api.OrganizationService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationServiceClient) Get(ctx context.Context, in *GetOrganizationRequest, opts ...grpc.CallOption) (*GetOrganizationResponse, error) {
	out := new(GetOrganizationResponse)
	err := grpc.Invoke(ctx, "/api.OrganizationService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationServiceClient) Create(ctx context.Context, in *CreateOrganizationRequest, opts ...grpc.CallOption) (*CreateOrganizationResponse, error) {
	out := new(CreateOrganizationResponse)
	err := grpc.Invoke(ctx, "/api.OrganizationService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationServiceClient) Update(ctx context.Context, in *UpdateOrganizationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.OrganizationService/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationServiceClient) Delete(ctx context.Context, in *DeleteOrganizationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.OrganizationService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationServiceClient) ListUsers(ctx context.Context, in *ListOrganizationUsersRequest, opts ...grpc.CallOption) (*ListOrganizationUsersResponse, error) {
	out := new(ListOrganizationUsersResponse)
	err := grpc.Invoke(ctx, "/api.OrganizationService/ListUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationServiceClient) GetUser(ctx context.Context, in *GetOrganizationUserRequest, opts ...grpc.CallOption) (*GetOrganizationUserResponse, error) {
	out := new(GetOrganizationUserResponse)
	err := grpc.Invoke(ctx, "/api.OrganizationService/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationServiceClient) AddUser(ctx context.Context, in *AddOrganizationUserRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.OrganizationService/AddUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationServiceClient) UpdateUser(ctx context.Context, in *UpdateOrganizationUserRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.OrganizationService/UpdateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationServiceClient) DeleteUser(ctx context.Context, in *DeleteOrganizationUserRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.OrganizationService/DeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OrganizationService service

type OrganizationServiceServer interface {
	// Get organization list.
	List(context.Context, *ListOrganizationRequest) (*ListOrganizationResponse, error)
	// Get data for a particular organization.
	Get(context.Context, *GetOrganizationRequest) (*GetOrganizationResponse, error)
	// Create a new organization.
	Create(context.Context, *CreateOrganizationRequest) (*CreateOrganizationResponse, error)
	// Update an existing organization.
	Update(context.Context, *UpdateOrganizationRequest) (*google_protobuf2.Empty, error)
	// Delete an organization.
	Delete(context.Context, *DeleteOrganizationRequest) (*google_protobuf2.Empty, error)
	// Get organization's user list.
	ListUsers(context.Context, *ListOrganizationUsersRequest) (*ListOrganizationUsersResponse, error)
	// Get data for a particular organization user.
	GetUser(context.Context, *GetOrganizationUserRequest) (*GetOrganizationUserResponse, error)
	// Add a new user to an organization.
	AddUser(context.Context, *AddOrganizationUserRequest) (*google_protobuf2.Empty, error)
	// Update a user in an organization.
	UpdateUser(context.Context, *UpdateOrganizationUserRequest) (*google_protobuf2.Empty, error)
	// Delete a user from an organization.
	DeleteUser(context.Context, *DeleteOrganizationUserRequest) (*google_protobuf2.Empty, error)
}

func RegisterOrganizationServiceServer(s *grpc.Server, srv OrganizationServiceServer) {
	s.RegisterService(&_OrganizationService_serviceDesc, srv)
}

func _OrganizationService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OrganizationService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServiceServer).List(ctx, req.(*ListOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OrganizationService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServiceServer).Get(ctx, req.(*GetOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OrganizationService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServiceServer).Create(ctx, req.(*CreateOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OrganizationService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServiceServer).Update(ctx, req.(*UpdateOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OrganizationService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServiceServer).Delete(ctx, req.(*DeleteOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationService_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrganizationUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServiceServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OrganizationService/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServiceServer).ListUsers(ctx, req.(*ListOrganizationUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrganizationUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OrganizationService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServiceServer).GetUser(ctx, req.(*GetOrganizationUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddOrganizationUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OrganizationService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServiceServer).AddUser(ctx, req.(*AddOrganizationUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrganizationUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OrganizationService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServiceServer).UpdateUser(ctx, req.(*UpdateOrganizationUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationService_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrganizationUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServiceServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OrganizationService/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServiceServer).DeleteUser(ctx, req.(*DeleteOrganizationUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrganizationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.OrganizationService",
	HandlerType: (*OrganizationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _OrganizationService_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _OrganizationService_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _OrganizationService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _OrganizationService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OrganizationService_Delete_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _OrganizationService_ListUsers_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _OrganizationService_GetUser_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _OrganizationService_AddUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _OrganizationService_UpdateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _OrganizationService_DeleteUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "organization.proto",
}

func init() { proto.RegisterFile("organization.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 1017 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0x56, 0xfb, 0x67, 0x9c, 0x94, 0x43, 0x7e, 0x9a, 0x10, 0xdb, 0xb3, 0x31, 0xf1, 0xb6, 0x10,
	0x18, 0xb3, 0xb2, 0x85, 0x61, 0x91, 0x40, 0x7b, 0x31, 0x1b, 0x64, 0x22, 0x21, 0x90, 0x06, 0x56,
	0xe2, 0x02, 0x43, 0xaf, 0xa7, 0x93, 0xb4, 0x64, 0xcf, 0xcc, 0xba, 0xdb, 0x59, 0x85, 0x55, 0x0e,
	0x70, 0xd8, 0x03, 0x1c, 0x79, 0x0e, 0x2e, 0x3c, 0x04, 0x2f, 0xc0, 0x81, 0x13, 0x37, 0x9e, 0x81,
	0x2b, 0xab, 0xee, 0x69, 0x5b, 0xe3, 0xf9, 0xd9, 0xfc, 0xac, 0xa5, 0x5c, 0x2c, 0x77, 0x4d, 0x75,
	0x7d, 0x5f, 0x7d, 0x5d, 0x55, 0xdd, 0x80, 0x83, 0xe9, 0x09, 0xf5, 0xf9, 0x8f, 0x54, 0xf2, 0xc0,
	0xef, 0x86, 0xd3, 0x40, 0x06, 0xb8, 0x48, 0x43, 0x6e, 0xef, 0x9f, 0x04, 0xc1, 0xc9, 0x98, 0xf5,
	0x68, 0xc8, 0x7b, 0xd4, 0xf7, 0x03, 0xa9, 0x3d, 0x44, 0xe4, 0x62, 0x37, 0x24, 0x9f, 0x30, 0x21,
	0xe9, 0x24, 0xec, 0x2d, 0xfe, 0x99, 0x4f, 0x3b, 0x6c, 0x12, 0xca, 0xf3, 0x9e, 0xfe, 0x8d, 0x4c,
	0xe4, 0x27, 0x04, 0x1b, 0x5f, 0xc5, 0x70, 0xf0, 0x26, 0x14, 0xb8, 0x57, 0x47, 0x2d, 0xd4, 0x2e,
	0x3a, 0x05, 0xee, 0x61, 0x0c, 0x25, 0x9f, 0x4e, 0x58, 0xbd, 0xd0, 0x42, 0xed, 0x75, 0x47, 0xff,
	0xc7, 0x77, 0x61, 0xc3, 0xe3, 0x22, 0x1c, 0xd3, 0x73, 0x57, 0x7f, 0x2b, 0xea, 0x6f, 0x55, 0x63,
	0xfb, 0x52, 0xb9, 0x74, 0x60, 0x67, 0x44, 0x7d, 0xf7, 0x94, 0x9e, 0x31, 0xf7, 0x84, 0x4a, 0xf6,
	0x94, 0x9e, 0x8b, 0x7a, 0xa9, 0x85, 0xda, 0x6b, 0xce, 0xd6, 0x88, 0xfa, 0x9f, 0xd3, 0x33, 0x36,
	0x34, 0x66, 0xf2, 0x3f, 0x82, 0xdd, 0x38, 0x87, 0x2f, 0xb8, 0x90, 0x47, 0x92, 0x4d, 0x6e, 0x81,
	0x0b, 0xfe, 0x18, 0x60, 0x34, 0x65, 0x54, 0x32, 0xcf, 0xa5, 0xb2, 0x5e, 0x6e, 0xa1, 0x76, 0xb5,
	0x6f, 0x77, 0x23, 0xc1, 0x23, 0xc9, 0x1e, 0xcf, 0x8e, 0xbb, 0xdf, 0xcc, 0x85, 0x75, 0xd6, 0x8d,
	0xf7, 0x40, 0xaa, 0xad, 0xb3, 0xd0, 0x9b, 0x6f, 0xb5, 0x2e, 0xdf, 0x6a, 0xbc, 0x07, 0x92, 0xb4,
	0x61, 0x6f, 0xc8, 0x64, 0x5c, 0x03, 0x87, 0x3d, 0x99, 0x31, 0x21, 0x93, 0x12, 0x90, 0x3f, 0x11,
	0xd4, 0x52, 0xae, 0x22, 0x0c, 0x7c, 0xc1, 0xf0, 0x7d, 0xd8, 0x88, 0x97, 0x8c, 0xde, 0x55, 0xed,
	0xef, 0x74, 0x69, 0xc8, 0xbb, 0x4b, 0x1b, 0x96, 0xdc, 0x12, 0x29, 0x17, 0x6e, 0x9e, 0x72, 0xf1,
	0x3a, 0x29, 0x3b, 0xd0, 0x78, 0xa8, 0xe3, 0x64, 0x65, 0x7d, 0xb3, 0x4c, 0xc8, 0x3d, 0xb0, 0xb3,
	0x62, 0x1a, 0x79, 0x92, 0x52, 0x3a, 0xd0, 0x78, 0xa4, 0xe9, 0xac, 0x90, 0xc1, 0x7b, 0xd0, 0x38,
	0x64, 0x63, 0x96, 0x1d, 0x33, 0x49, 0xc0, 0x85, 0x9a, 0x2a, 0xf5, 0x2c, 0xd7, 0x5d, 0x28, 0x8f,
	0xf9, 0x84, 0x4b, 0xe3, 0x1d, 0x2d, 0xf0, 0x1e, 0x58, 0xc1, 0xf1, 0xb1, 0x60, 0xd1, 0x29, 0x15,
	0x1d, 0xb3, 0x52, 0x76, 0xc1, 0xe8, 0x74, 0x74, 0x6a, 0xaa, 0xdf, 0xac, 0x88, 0x0f, 0xf5, 0x34,
	0x80, 0x51, 0xe3, 0x00, 0xaa, 0x32, 0x90, 0x74, 0xec, 0x8e, 0x82, 0x99, 0x3f, 0xc7, 0x01, 0x6d,
	0x7a, 0xa8, 0x2c, 0xf8, 0x7d, 0xb0, 0xa6, 0x4c, 0xcc, 0xc6, 0x0a, 0xac, 0xd8, 0xae, 0xf6, 0x1b,
	0xa9, 0xdc, 0xe7, 0x7d, 0xea, 0x18, 0x47, 0xf2, 0x0f, 0x82, 0xed, 0xb8, 0xc3, 0x23, 0xc1, 0xa6,
	0xf8, 0x1d, 0xd8, 0x8a, 0x4b, 0xe4, 0x2e, 0x24, 0xd8, 0x8c, 0x9b, 0x8f, 0x0e, 0x71, 0x0d, 0x2a,
	0x33, 0xc1, 0xa6, 0xca, 0xc1, 0xa4, 0xa7, 0x96, 0x47, 0x87, 0xb8, 0x01, 0x6b, 0x5c, 0xb8, 0xd4,
	0x9b, 0x70, 0x5f, 0x27, 0xb8, 0xe6, 0x54, 0xb8, 0x18, 0xa8, 0x25, 0x7e, 0x1b, 0xb6, 0xb8, 0x70,
	0x3d, 0x76, 0xc6, 0x47, 0xcc, 0x78, 0x94, 0xb5, 0xc7, 0x6b, 0x5c, 0x1c, 0x6a, 0x6b, 0xe4, 0xd7,
	0x86, 0x6d, 0x2e, 0xe6, 0xcd, 0x6f, 0x1c, 0x2d, 0xed, 0xb8, 0xc9, 0x85, 0x69, 0xfe, 0xc8, 0xd3,
	0x86, 0x35, 0x05, 0xab, 0x67, 0x49, 0x49, 0xab, 0xb9, 0x58, 0x93, 0x3f, 0x0a, 0x50, 0x4f, 0xe6,
	0xb7, 0x18, 0x56, 0x31, 0xfa, 0x68, 0x89, 0x7e, 0x3c, 0x62, 0x61, 0x39, 0xe2, 0x35, 0x53, 0xb3,
	0xae, 0x9a, 0x5a, 0x25, 0x33, 0xb5, 0xe5, 0x46, 0x2f, 0xdd, 0xbc, 0xd1, 0xcb, 0xd7, 0x69, 0xf4,
	0x1f, 0xc0, 0x1e, 0x78, 0x5e, 0x52, 0xb6, 0x79, 0xa1, 0x7f, 0x0a, 0x3b, 0x4b, 0xd5, 0xa1, 0x94,
	0x31, 0xcd, 0xf6, 0x46, 0xaa, 0xe0, 0xf4, 0xc6, 0xed, 0x20, 0x61, 0x21, 0x23, 0x68, 0xa6, 0x1b,
	0x79, 0xd5, 0x20, 0x14, 0x9a, 0xe9, 0xce, 0x8e, 0x83, 0xbc, 0x72, 0x9d, 0x93, 0x19, 0xec, 0x27,
	0xdb, 0x55, 0x01, 0x88, 0x6b, 0x23, 0x2c, 0xa6, 0x87, 0x8a, 0x5f, 0x4e, 0x4f, 0x8f, 0xa2, 0x36,
	0x9b, 0x15, 0x79, 0x0a, 0xcd, 0x1c, 0xd8, 0xab, 0x8e, 0x8a, 0xfb, 0x89, 0x51, 0xd1, 0xcc, 0x14,
	0x35, 0x35, 0x2e, 0xbe, 0x07, 0x3b, 0x71, 0x95, 0xad, 0x56, 0xcf, 0xbf, 0x11, 0xdc, 0xc9, 0x04,
	0x30, 0x79, 0xad, 0xa0, 0x2c, 0x6e, 0xe7, 0xf2, 0xec, 0xff, 0xb7, 0x0e, 0xaf, 0xc7, 0xc9, 0x7d,
	0xcd, 0xa6, 0x6a, 0x20, 0x60, 0x17, 0x4a, 0x4a, 0x65, 0xbc, 0xaf, 0xe9, 0xe7, 0x5c, 0x2e, 0x76,
	0x33, 0xe7, 0x6b, 0x24, 0x0b, 0xb1, 0x7f, 0xfe, 0xeb, 0xdf, 0xdf, 0x0a, 0xbb, 0x18, 0xeb, 0x07,
	0x66, 0x3c, 0x63, 0x81, 0x29, 0x14, 0x87, 0x4c, 0xe2, 0x3b, 0x3a, 0x42, 0xf6, 0x93, 0xc5, 0xde,
	0xcf, 0xfe, 0x68, 0xa2, 0x1f, 0xe8, 0xe8, 0x0d, 0x5c, 0x4b, 0x47, 0xef, 0x3d, 0xe3, 0xde, 0x05,
	0x3e, 0x05, 0x2b, 0xba, 0xc4, 0xf1, 0x9b, 0x3a, 0x50, 0xee, 0x2b, 0xc1, 0x3e, 0xc8, 0xfd, 0x6e,
	0xb0, 0x9a, 0x1a, 0xab, 0x46, 0x32, 0x32, 0xf9, 0x04, 0x75, 0xf0, 0x13, 0xb0, 0xa2, 0xb9, 0x61,
	0x90, 0x72, 0x5f, 0x03, 0xf6, 0x5e, 0xea, 0x58, 0x3e, 0x53, 0x6f, 0x68, 0xd2, 0xd3, 0x00, 0xef,
	0xda, 0x6f, 0x65, 0x25, 0xb3, 0xf4, 0x7c, 0xe7, 0xde, 0x85, 0x82, 0xa4, 0x60, 0x45, 0x53, 0xc4,
	0x40, 0xe6, 0x3e, 0x16, 0x72, 0x21, 0x8d, 0x7e, 0x9d, 0x5c, 0xfd, 0x9e, 0x23, 0x58, 0x57, 0x67,
	0xab, 0x7b, 0x18, 0xdf, 0xcd, 0x3c, 0xeb, 0xf8, 0x58, 0xb1, 0xc9, 0xcb, 0x5c, 0x8c, 0x92, 0x7d,
	0x8d, 0x7a, 0x0f, 0x77, 0x2e, 0x4b, 0xd4, 0xe5, 0xde, 0x45, 0x6f, 0xa6, 0xa1, 0x7f, 0x41, 0x50,
	0x19, 0x32, 0xcd, 0x03, 0x1f, 0x64, 0xd5, 0x44, 0xac, 0xdb, 0xed, 0x56, 0xbe, 0x83, 0xa1, 0xf0,
	0x40, 0x53, 0xf8, 0x08, 0x7f, 0x78, 0x75, 0x0a, 0xbd, 0x67, 0x66, 0x30, 0x5c, 0xe0, 0x5f, 0x11,
	0x54, 0x06, 0x9e, 0x17, 0x23, 0x93, 0x7f, 0x29, 0xe5, 0x6a, 0x3f, 0xd4, 0x14, 0x06, 0xe4, 0xc1,
	0xa5, 0x14, 0x14, 0x6e, 0x37, 0x9b, 0x94, 0x2a, 0x83, 0xdf, 0x11, 0x40, 0x54, 0x6d, 0x9a, 0x10,
	0xc9, 0x29, 0xbf, 0xab, 0x70, 0x1a, 0x69, 0x4e, 0xdf, 0xd9, 0xdf, 0xbe, 0x0a, 0xa7, 0x2c, 0xcf,
	0xb9, 0x74, 0x8a, 0xef, 0x73, 0x04, 0x10, 0x95, 0x6a, 0x8c, 0xef, 0x4b, 0xaf, 0xc3, 0x5c, 0xbe,
	0xe6, 0x18, 0x3b, 0x37, 0x3a, 0xc6, 0xc7, 0x96, 0x8e, 0xf6, 0xc1, 0x8b, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x17, 0x70, 0x17, 0xff, 0x1c, 0x0f, 0x00, 0x00,
}
