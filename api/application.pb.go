// Code generated by protoc-gen-go. DO NOT EDIT.
// source: application.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type IntegrationKind int32

const (
	IntegrationKind_HTTP        IntegrationKind = 0
	IntegrationKind_INFLUXDB    IntegrationKind = 1
	IntegrationKind_THINGSBOARD IntegrationKind = 2
)

var IntegrationKind_name = map[int32]string{
	0: "HTTP",
	1: "INFLUXDB",
	2: "THINGSBOARD",
}
var IntegrationKind_value = map[string]int32{
	"HTTP":        0,
	"INFLUXDB":    1,
	"THINGSBOARD": 2,
}

func (x IntegrationKind) String() string {
	return proto.EnumName(IntegrationKind_name, int32(x))
}
func (IntegrationKind) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type InfluxDBPrecision int32

const (
	InfluxDBPrecision_NS InfluxDBPrecision = 0
	InfluxDBPrecision_U  InfluxDBPrecision = 1
	InfluxDBPrecision_MS InfluxDBPrecision = 2
	InfluxDBPrecision_S  InfluxDBPrecision = 3
	InfluxDBPrecision_M  InfluxDBPrecision = 4
	InfluxDBPrecision_H  InfluxDBPrecision = 5
)

var InfluxDBPrecision_name = map[int32]string{
	0: "NS",
	1: "U",
	2: "MS",
	3: "S",
	4: "M",
	5: "H",
}
var InfluxDBPrecision_value = map[string]int32{
	"NS": 0,
	"U":  1,
	"MS": 2,
	"S":  3,
	"M":  4,
	"H":  5,
}

func (x InfluxDBPrecision) String() string {
	return proto.EnumName(InfluxDBPrecision_name, int32(x))
}
func (InfluxDBPrecision) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type Application struct {
	// Application ID.
	// This will be automatically assigned on create.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Name of the application (must be unique).
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Description of the application.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// ID of the organization to which the application belongs.
	// After create, this can not be modified.
	OrganizationId int64 `protobuf:"varint,4,opt,name=organization_id,json=organizationID" json:"organization_id,omitempty"`
	// ID of the service profile.
	ServiceProfileId string `protobuf:"bytes,5,opt,name=service_profile_id,json=serviceProfileID" json:"service_profile_id,omitempty"`
	// Payload codec.
	// NOTE: These field have moved to the device-profile and will be removed
	// in the next major release. When set, the device-profile payload_ fields
	// have priority over the application payload_ fields.
	PayloadCodec string `protobuf:"bytes,6,opt,name=payload_codec,json=payloadCodec" json:"payload_codec,omitempty"`
	// Payload encoder script.
	// NOTE: These field have moved to the device-profile and will be removed
	// in the next major release. When set, the device-profile payload_ fields
	// have priority over the application payload_ fields.
	PayloadEncoderScript string `protobuf:"bytes,7,opt,name=payload_encoder_script,json=payloadEncoderScript" json:"payload_encoder_script,omitempty"`
	// Payload decoder script.
	// NOTE: These field have moved to the device-profile and will be removed
	// in the next major release. When set, the device-profile payload_ fields
	// have priority over the application payload_ fields.
	PayloadDecoderScript string `protobuf:"bytes,8,opt,name=payload_decoder_script,json=payloadDecoderScript" json:"payload_decoder_script,omitempty"`
}

func (m *Application) Reset()                    { *m = Application{} }
func (m *Application) String() string            { return proto.CompactTextString(m) }
func (*Application) ProtoMessage()               {}
func (*Application) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Application) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Application) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Application) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Application) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *Application) GetServiceProfileId() string {
	if m != nil {
		return m.ServiceProfileId
	}
	return ""
}

func (m *Application) GetPayloadCodec() string {
	if m != nil {
		return m.PayloadCodec
	}
	return ""
}

func (m *Application) GetPayloadEncoderScript() string {
	if m != nil {
		return m.PayloadEncoderScript
	}
	return ""
}

func (m *Application) GetPayloadDecoderScript() string {
	if m != nil {
		return m.PayloadDecoderScript
	}
	return ""
}

type ApplicationListItem struct {
	// Application ID.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Name of the application.
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Description of the application.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// ID of the organization to which the application belongs.
	OrganizationId int64 `protobuf:"varint,4,opt,name=organization_id,json=organizationID" json:"organization_id,omitempty"`
	// ID of the service profile.
	ServiceProfileId string `protobuf:"bytes,5,opt,name=service_profile_id,json=serviceProfileID" json:"service_profile_id,omitempty"`
	// Service-profile name.
	ServiceProfileName string `protobuf:"bytes,6,opt,name=service_profile_name,json=serviceProfileName" json:"service_profile_name,omitempty"`
}

func (m *ApplicationListItem) Reset()                    { *m = ApplicationListItem{} }
func (m *ApplicationListItem) String() string            { return proto.CompactTextString(m) }
func (*ApplicationListItem) ProtoMessage()               {}
func (*ApplicationListItem) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ApplicationListItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ApplicationListItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ApplicationListItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ApplicationListItem) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *ApplicationListItem) GetServiceProfileId() string {
	if m != nil {
		return m.ServiceProfileId
	}
	return ""
}

func (m *ApplicationListItem) GetServiceProfileName() string {
	if m != nil {
		return m.ServiceProfileName
	}
	return ""
}

type CreateApplicationRequest struct {
	// Application object to create.
	Application *Application `protobuf:"bytes,1,opt,name=application" json:"application,omitempty"`
}

func (m *CreateApplicationRequest) Reset()                    { *m = CreateApplicationRequest{} }
func (m *CreateApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateApplicationRequest) ProtoMessage()               {}
func (*CreateApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *CreateApplicationRequest) GetApplication() *Application {
	if m != nil {
		return m.Application
	}
	return nil
}

type CreateApplicationResponse struct {
	// Application ID.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateApplicationResponse) Reset()                    { *m = CreateApplicationResponse{} }
func (m *CreateApplicationResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateApplicationResponse) ProtoMessage()               {}
func (*CreateApplicationResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *CreateApplicationResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetApplicationRequest struct {
	// Application ID.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetApplicationRequest) Reset()                    { *m = GetApplicationRequest{} }
func (m *GetApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetApplicationRequest) ProtoMessage()               {}
func (*GetApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *GetApplicationRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetApplicationResponse struct {
	// Application object.
	Application *Application `protobuf:"bytes,1,opt,name=application" json:"application,omitempty"`
}

func (m *GetApplicationResponse) Reset()                    { *m = GetApplicationResponse{} }
func (m *GetApplicationResponse) String() string            { return proto.CompactTextString(m) }
func (*GetApplicationResponse) ProtoMessage()               {}
func (*GetApplicationResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *GetApplicationResponse) GetApplication() *Application {
	if m != nil {
		return m.Application
	}
	return nil
}

type UpdateApplicationRequest struct {
	// Application object to update.
	Application *Application `protobuf:"bytes,1,opt,name=application" json:"application,omitempty"`
}

func (m *UpdateApplicationRequest) Reset()                    { *m = UpdateApplicationRequest{} }
func (m *UpdateApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateApplicationRequest) ProtoMessage()               {}
func (*UpdateApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *UpdateApplicationRequest) GetApplication() *Application {
	if m != nil {
		return m.Application
	}
	return nil
}

type DeleteApplicationRequest struct {
	// Application ID.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteApplicationRequest) Reset()                    { *m = DeleteApplicationRequest{} }
func (m *DeleteApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteApplicationRequest) ProtoMessage()               {}
func (*DeleteApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *DeleteApplicationRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListApplicationRequest struct {
	// Max number of applications to return in the result-test.
	Limit int64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int64 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	// ID of the organization to filter on.
	OrganizationId int64 `protobuf:"varint,3,opt,name=organization_id,json=organizationID" json:"organization_id,omitempty"`
	// Search on name (optional).
	Search string `protobuf:"bytes,4,opt,name=search" json:"search,omitempty"`
}

func (m *ListApplicationRequest) Reset()                    { *m = ListApplicationRequest{} }
func (m *ListApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*ListApplicationRequest) ProtoMessage()               {}
func (*ListApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *ListApplicationRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListApplicationRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListApplicationRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *ListApplicationRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type ListApplicationResponse struct {
	// Total number of applications available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	// Applications within this result-set.
	Result []*ApplicationListItem `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
}

func (m *ListApplicationResponse) Reset()                    { *m = ListApplicationResponse{} }
func (m *ListApplicationResponse) String() string            { return proto.CompactTextString(m) }
func (*ListApplicationResponse) ProtoMessage()               {}
func (*ListApplicationResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ListApplicationResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListApplicationResponse) GetResult() []*ApplicationListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type HTTPIntegrationHeader struct {
	// Key
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// Value
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *HTTPIntegrationHeader) Reset()                    { *m = HTTPIntegrationHeader{} }
func (m *HTTPIntegrationHeader) String() string            { return proto.CompactTextString(m) }
func (*HTTPIntegrationHeader) ProtoMessage()               {}
func (*HTTPIntegrationHeader) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *HTTPIntegrationHeader) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HTTPIntegrationHeader) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type HTTPIntegration struct {
	// The id of the application.
	ApplicationId int64 `protobuf:"varint,1,opt,name=application_id,json=applicationID" json:"application_id,omitempty"`
	// The headers to use when making HTTP callbacks.
	Headers []*HTTPIntegrationHeader `protobuf:"bytes,2,rep,name=headers" json:"headers,omitempty"`
	// The URL to call for uplink data.
	UplinkDataUrl string `protobuf:"bytes,3,opt,name=uplink_data_url,json=uplinkDataURL" json:"uplink_data_url,omitempty"`
	// The URL to call for join notifications.
	JoinNotificationUrl string `protobuf:"bytes,4,opt,name=join_notification_url,json=joinNotificationURL" json:"join_notification_url,omitempty"`
	// The URL to call for ACK notifications (for confirmed downlink data).
	AckNotificationUrl string `protobuf:"bytes,5,opt,name=ack_notification_url,json=ackNotificationURL" json:"ack_notification_url,omitempty"`
	// The URL to call for error notifications.
	ErrorNotificationUrl string `protobuf:"bytes,6,opt,name=error_notification_url,json=errorNotificationURL" json:"error_notification_url,omitempty"`
	// The URL to call for device-status notifications.
	StatusNotificationUrl string `protobuf:"bytes,7,opt,name=status_notification_url,json=statusNotificationURL" json:"status_notification_url,omitempty"`
	// The URL to call for location notifications.
	LocationNotificationUrl string `protobuf:"bytes,8,opt,name=location_notification_url,json=locationNotificationURL" json:"location_notification_url,omitempty"`
}

func (m *HTTPIntegration) Reset()                    { *m = HTTPIntegration{} }
func (m *HTTPIntegration) String() string            { return proto.CompactTextString(m) }
func (*HTTPIntegration) ProtoMessage()               {}
func (*HTTPIntegration) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *HTTPIntegration) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *HTTPIntegration) GetHeaders() []*HTTPIntegrationHeader {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *HTTPIntegration) GetUplinkDataUrl() string {
	if m != nil {
		return m.UplinkDataUrl
	}
	return ""
}

func (m *HTTPIntegration) GetJoinNotificationUrl() string {
	if m != nil {
		return m.JoinNotificationUrl
	}
	return ""
}

func (m *HTTPIntegration) GetAckNotificationUrl() string {
	if m != nil {
		return m.AckNotificationUrl
	}
	return ""
}

func (m *HTTPIntegration) GetErrorNotificationUrl() string {
	if m != nil {
		return m.ErrorNotificationUrl
	}
	return ""
}

func (m *HTTPIntegration) GetStatusNotificationUrl() string {
	if m != nil {
		return m.StatusNotificationUrl
	}
	return ""
}

func (m *HTTPIntegration) GetLocationNotificationUrl() string {
	if m != nil {
		return m.LocationNotificationUrl
	}
	return ""
}

type CreateHTTPIntegrationRequest struct {
	// Integration object to create.
	Integration *HTTPIntegration `protobuf:"bytes,1,opt,name=integration" json:"integration,omitempty"`
}

func (m *CreateHTTPIntegrationRequest) Reset()                    { *m = CreateHTTPIntegrationRequest{} }
func (m *CreateHTTPIntegrationRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateHTTPIntegrationRequest) ProtoMessage()               {}
func (*CreateHTTPIntegrationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *CreateHTTPIntegrationRequest) GetIntegration() *HTTPIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

type GetHTTPIntegrationRequest struct {
	// Application ID.
	ApplicationId int64 `protobuf:"varint,1,opt,name=application_id,json=applicationID" json:"application_id,omitempty"`
}

func (m *GetHTTPIntegrationRequest) Reset()                    { *m = GetHTTPIntegrationRequest{} }
func (m *GetHTTPIntegrationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetHTTPIntegrationRequest) ProtoMessage()               {}
func (*GetHTTPIntegrationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *GetHTTPIntegrationRequest) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

type GetHTTPIntegrationResponse struct {
	// Integration object.
	Integration *HTTPIntegration `protobuf:"bytes,1,opt,name=integration" json:"integration,omitempty"`
}

func (m *GetHTTPIntegrationResponse) Reset()                    { *m = GetHTTPIntegrationResponse{} }
func (m *GetHTTPIntegrationResponse) String() string            { return proto.CompactTextString(m) }
func (*GetHTTPIntegrationResponse) ProtoMessage()               {}
func (*GetHTTPIntegrationResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *GetHTTPIntegrationResponse) GetIntegration() *HTTPIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

type UpdateHTTPIntegrationRequest struct {
	// Integration object to update.
	Integration *HTTPIntegration `protobuf:"bytes,1,opt,name=integration" json:"integration,omitempty"`
}

func (m *UpdateHTTPIntegrationRequest) Reset()                    { *m = UpdateHTTPIntegrationRequest{} }
func (m *UpdateHTTPIntegrationRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateHTTPIntegrationRequest) ProtoMessage()               {}
func (*UpdateHTTPIntegrationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *UpdateHTTPIntegrationRequest) GetIntegration() *HTTPIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

type DeleteHTTPIntegrationRequest struct {
	// The id of the application.
	ApplicationId int64 `protobuf:"varint,1,opt,name=application_id,json=applicationID" json:"application_id,omitempty"`
}

func (m *DeleteHTTPIntegrationRequest) Reset()                    { *m = DeleteHTTPIntegrationRequest{} }
func (m *DeleteHTTPIntegrationRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteHTTPIntegrationRequest) ProtoMessage()               {}
func (*DeleteHTTPIntegrationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *DeleteHTTPIntegrationRequest) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

type ListIntegrationRequest struct {
	// The id of the application.
	ApplicationId int64 `protobuf:"varint,1,opt,name=application_id,json=applicationID" json:"application_id,omitempty"`
}

func (m *ListIntegrationRequest) Reset()                    { *m = ListIntegrationRequest{} }
func (m *ListIntegrationRequest) String() string            { return proto.CompactTextString(m) }
func (*ListIntegrationRequest) ProtoMessage()               {}
func (*ListIntegrationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *ListIntegrationRequest) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

type IntegrationListItem struct {
	// Integration kind.
	Kind IntegrationKind `protobuf:"varint,1,opt,name=kind,enum=api.IntegrationKind" json:"kind,omitempty"`
}

func (m *IntegrationListItem) Reset()                    { *m = IntegrationListItem{} }
func (m *IntegrationListItem) String() string            { return proto.CompactTextString(m) }
func (*IntegrationListItem) ProtoMessage()               {}
func (*IntegrationListItem) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *IntegrationListItem) GetKind() IntegrationKind {
	if m != nil {
		return m.Kind
	}
	return IntegrationKind_HTTP
}

type ListIntegrationResponse struct {
	// Total number of integrations available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	// Integrations within result-set.
	Result []*IntegrationListItem `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
}

func (m *ListIntegrationResponse) Reset()                    { *m = ListIntegrationResponse{} }
func (m *ListIntegrationResponse) String() string            { return proto.CompactTextString(m) }
func (*ListIntegrationResponse) ProtoMessage()               {}
func (*ListIntegrationResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *ListIntegrationResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListIntegrationResponse) GetResult() []*IntegrationListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type InfluxDBIntegration struct {
	// Application ID.
	ApplicationId int64 `protobuf:"varint,1,opt,name=application_id,json=applicationID" json:"application_id,omitempty"`
	// InfluxDB API write endpoint (e.g. http://localhost:8086/write).
	Endpoint string `protobuf:"bytes,2,opt,name=endpoint" json:"endpoint,omitempty"`
	// InfluxDB database name.
	Db string `protobuf:"bytes,3,opt,name=db" json:"db,omitempty"`
	// InfluxDB username.
	Username string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	// InfluxDB password.
	Password string `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	// InfluxDB retention policy name.
	RetentionPolicyName string `protobuf:"bytes,6,opt,name=retention_policy_name,json=retentionPolicyName" json:"retention_policy_name,omitempty"`
	// InfluxDB timestamp precision.
	Precision InfluxDBPrecision `protobuf:"varint,7,opt,name=precision,enum=api.InfluxDBPrecision" json:"precision,omitempty"`
}

func (m *InfluxDBIntegration) Reset()                    { *m = InfluxDBIntegration{} }
func (m *InfluxDBIntegration) String() string            { return proto.CompactTextString(m) }
func (*InfluxDBIntegration) ProtoMessage()               {}
func (*InfluxDBIntegration) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *InfluxDBIntegration) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *InfluxDBIntegration) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *InfluxDBIntegration) GetDb() string {
	if m != nil {
		return m.Db
	}
	return ""
}

func (m *InfluxDBIntegration) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *InfluxDBIntegration) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *InfluxDBIntegration) GetRetentionPolicyName() string {
	if m != nil {
		return m.RetentionPolicyName
	}
	return ""
}

func (m *InfluxDBIntegration) GetPrecision() InfluxDBPrecision {
	if m != nil {
		return m.Precision
	}
	return InfluxDBPrecision_NS
}

type CreateInfluxDBIntegrationRequest struct {
	// Integration object to create.
	Integration *InfluxDBIntegration `protobuf:"bytes,1,opt,name=integration" json:"integration,omitempty"`
}

func (m *CreateInfluxDBIntegrationRequest) Reset()         { *m = CreateInfluxDBIntegrationRequest{} }
func (m *CreateInfluxDBIntegrationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateInfluxDBIntegrationRequest) ProtoMessage()    {}
func (*CreateInfluxDBIntegrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{21}
}

func (m *CreateInfluxDBIntegrationRequest) GetIntegration() *InfluxDBIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

type GetInfluxDBIntegrationRequest struct {
	// Application ID.
	ApplicationId int64 `protobuf:"varint,1,opt,name=application_id,json=applicationID" json:"application_id,omitempty"`
}

func (m *GetInfluxDBIntegrationRequest) Reset()                    { *m = GetInfluxDBIntegrationRequest{} }
func (m *GetInfluxDBIntegrationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetInfluxDBIntegrationRequest) ProtoMessage()               {}
func (*GetInfluxDBIntegrationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *GetInfluxDBIntegrationRequest) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

type GetInfluxDBIntegrationResponse struct {
	// Integration object.
	Integration *InfluxDBIntegration `protobuf:"bytes,1,opt,name=integration" json:"integration,omitempty"`
}

func (m *GetInfluxDBIntegrationResponse) Reset()                    { *m = GetInfluxDBIntegrationResponse{} }
func (m *GetInfluxDBIntegrationResponse) String() string            { return proto.CompactTextString(m) }
func (*GetInfluxDBIntegrationResponse) ProtoMessage()               {}
func (*GetInfluxDBIntegrationResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *GetInfluxDBIntegrationResponse) GetIntegration() *InfluxDBIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

type UpdateInfluxDBIntegrationRequest struct {
	// Integration object.
	Integration *InfluxDBIntegration `protobuf:"bytes,1,opt,name=integration" json:"integration,omitempty"`
}

func (m *UpdateInfluxDBIntegrationRequest) Reset()         { *m = UpdateInfluxDBIntegrationRequest{} }
func (m *UpdateInfluxDBIntegrationRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateInfluxDBIntegrationRequest) ProtoMessage()    {}
func (*UpdateInfluxDBIntegrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{24}
}

func (m *UpdateInfluxDBIntegrationRequest) GetIntegration() *InfluxDBIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

type DeleteInfluxDBIntegrationRequest struct {
	// Application ID.
	ApplicationId int64 `protobuf:"varint,1,opt,name=application_id,json=applicationID" json:"application_id,omitempty"`
}

func (m *DeleteInfluxDBIntegrationRequest) Reset()         { *m = DeleteInfluxDBIntegrationRequest{} }
func (m *DeleteInfluxDBIntegrationRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteInfluxDBIntegrationRequest) ProtoMessage()    {}
func (*DeleteInfluxDBIntegrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{25}
}

func (m *DeleteInfluxDBIntegrationRequest) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

type ThingsBoardIntegration struct {
	// Application ID.
	ApplicationId int64 `protobuf:"varint,1,opt,name=application_id,json=applicationID" json:"application_id,omitempty"`
	// ThingsBoard server endpoint, e.g. https://example.com
	Server string `protobuf:"bytes,2,opt,name=server" json:"server,omitempty"`
}

func (m *ThingsBoardIntegration) Reset()                    { *m = ThingsBoardIntegration{} }
func (m *ThingsBoardIntegration) String() string            { return proto.CompactTextString(m) }
func (*ThingsBoardIntegration) ProtoMessage()               {}
func (*ThingsBoardIntegration) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *ThingsBoardIntegration) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *ThingsBoardIntegration) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

type CreateThingsBoardIntegrationRequest struct {
	// Integration object to create.
	Integration *ThingsBoardIntegration `protobuf:"bytes,1,opt,name=integration" json:"integration,omitempty"`
}

func (m *CreateThingsBoardIntegrationRequest) Reset()         { *m = CreateThingsBoardIntegrationRequest{} }
func (m *CreateThingsBoardIntegrationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateThingsBoardIntegrationRequest) ProtoMessage()    {}
func (*CreateThingsBoardIntegrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{27}
}

func (m *CreateThingsBoardIntegrationRequest) GetIntegration() *ThingsBoardIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

type GetThingsBoardIntegrationRequest struct {
	// Application ID.
	ApplicationId int64 `protobuf:"varint,1,opt,name=application_id,json=applicationID" json:"application_id,omitempty"`
}

func (m *GetThingsBoardIntegrationRequest) Reset()         { *m = GetThingsBoardIntegrationRequest{} }
func (m *GetThingsBoardIntegrationRequest) String() string { return proto.CompactTextString(m) }
func (*GetThingsBoardIntegrationRequest) ProtoMessage()    {}
func (*GetThingsBoardIntegrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{28}
}

func (m *GetThingsBoardIntegrationRequest) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

type GetThingsBoardIntegrationResponse struct {
	// Integration object.
	Integration *ThingsBoardIntegration `protobuf:"bytes,1,opt,name=integration" json:"integration,omitempty"`
}

func (m *GetThingsBoardIntegrationResponse) Reset()         { *m = GetThingsBoardIntegrationResponse{} }
func (m *GetThingsBoardIntegrationResponse) String() string { return proto.CompactTextString(m) }
func (*GetThingsBoardIntegrationResponse) ProtoMessage()    {}
func (*GetThingsBoardIntegrationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{29}
}

func (m *GetThingsBoardIntegrationResponse) GetIntegration() *ThingsBoardIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

type UpdateThingsBoardIntegrationRequest struct {
	// Integration object.
	Integration *ThingsBoardIntegration `protobuf:"bytes,1,opt,name=integration" json:"integration,omitempty"`
}

func (m *UpdateThingsBoardIntegrationRequest) Reset()         { *m = UpdateThingsBoardIntegrationRequest{} }
func (m *UpdateThingsBoardIntegrationRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateThingsBoardIntegrationRequest) ProtoMessage()    {}
func (*UpdateThingsBoardIntegrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{30}
}

func (m *UpdateThingsBoardIntegrationRequest) GetIntegration() *ThingsBoardIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

type DeleteThingsBoardIntegrationRequest struct {
	// Application ID.
	ApplicationId int64 `protobuf:"varint,1,opt,name=application_id,json=applicationID" json:"application_id,omitempty"`
}

func (m *DeleteThingsBoardIntegrationRequest) Reset()         { *m = DeleteThingsBoardIntegrationRequest{} }
func (m *DeleteThingsBoardIntegrationRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteThingsBoardIntegrationRequest) ProtoMessage()    {}
func (*DeleteThingsBoardIntegrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{31}
}

func (m *DeleteThingsBoardIntegrationRequest) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func init() {
	proto.RegisterType((*Application)(nil), "api.Application")
	proto.RegisterType((*ApplicationListItem)(nil), "api.ApplicationListItem")
	proto.RegisterType((*CreateApplicationRequest)(nil), "api.CreateApplicationRequest")
	proto.RegisterType((*CreateApplicationResponse)(nil), "api.CreateApplicationResponse")
	proto.RegisterType((*GetApplicationRequest)(nil), "api.GetApplicationRequest")
	proto.RegisterType((*GetApplicationResponse)(nil), "api.GetApplicationResponse")
	proto.RegisterType((*UpdateApplicationRequest)(nil), "api.UpdateApplicationRequest")
	proto.RegisterType((*DeleteApplicationRequest)(nil), "api.DeleteApplicationRequest")
	proto.RegisterType((*ListApplicationRequest)(nil), "api.ListApplicationRequest")
	proto.RegisterType((*ListApplicationResponse)(nil), "api.ListApplicationResponse")
	proto.RegisterType((*HTTPIntegrationHeader)(nil), "api.HTTPIntegrationHeader")
	proto.RegisterType((*HTTPIntegration)(nil), "api.HTTPIntegration")
	proto.RegisterType((*CreateHTTPIntegrationRequest)(nil), "api.CreateHTTPIntegrationRequest")
	proto.RegisterType((*GetHTTPIntegrationRequest)(nil), "api.GetHTTPIntegrationRequest")
	proto.RegisterType((*GetHTTPIntegrationResponse)(nil), "api.GetHTTPIntegrationResponse")
	proto.RegisterType((*UpdateHTTPIntegrationRequest)(nil), "api.UpdateHTTPIntegrationRequest")
	proto.RegisterType((*DeleteHTTPIntegrationRequest)(nil), "api.DeleteHTTPIntegrationRequest")
	proto.RegisterType((*ListIntegrationRequest)(nil), "api.ListIntegrationRequest")
	proto.RegisterType((*IntegrationListItem)(nil), "api.IntegrationListItem")
	proto.RegisterType((*ListIntegrationResponse)(nil), "api.ListIntegrationResponse")
	proto.RegisterType((*InfluxDBIntegration)(nil), "api.InfluxDBIntegration")
	proto.RegisterType((*CreateInfluxDBIntegrationRequest)(nil), "api.CreateInfluxDBIntegrationRequest")
	proto.RegisterType((*GetInfluxDBIntegrationRequest)(nil), "api.GetInfluxDBIntegrationRequest")
	proto.RegisterType((*GetInfluxDBIntegrationResponse)(nil), "api.GetInfluxDBIntegrationResponse")
	proto.RegisterType((*UpdateInfluxDBIntegrationRequest)(nil), "api.UpdateInfluxDBIntegrationRequest")
	proto.RegisterType((*DeleteInfluxDBIntegrationRequest)(nil), "api.DeleteInfluxDBIntegrationRequest")
	proto.RegisterType((*ThingsBoardIntegration)(nil), "api.ThingsBoardIntegration")
	proto.RegisterType((*CreateThingsBoardIntegrationRequest)(nil), "api.CreateThingsBoardIntegrationRequest")
	proto.RegisterType((*GetThingsBoardIntegrationRequest)(nil), "api.GetThingsBoardIntegrationRequest")
	proto.RegisterType((*GetThingsBoardIntegrationResponse)(nil), "api.GetThingsBoardIntegrationResponse")
	proto.RegisterType((*UpdateThingsBoardIntegrationRequest)(nil), "api.UpdateThingsBoardIntegrationRequest")
	proto.RegisterType((*DeleteThingsBoardIntegrationRequest)(nil), "api.DeleteThingsBoardIntegrationRequest")
	proto.RegisterEnum("api.IntegrationKind", IntegrationKind_name, IntegrationKind_value)
	proto.RegisterEnum("api.InfluxDBPrecision", InfluxDBPrecision_name, InfluxDBPrecision_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ApplicationService service

type ApplicationServiceClient interface {
	// Create creates the given application.
	Create(ctx context.Context, in *CreateApplicationRequest, opts ...grpc.CallOption) (*CreateApplicationResponse, error)
	// Get returns the requested application.
	Get(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*GetApplicationResponse, error)
	// Update updates the given application.
	Update(ctx context.Context, in *UpdateApplicationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// Delete deletes the given application.
	Delete(ctx context.Context, in *DeleteApplicationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// List lists the available applications.
	List(ctx context.Context, in *ListApplicationRequest, opts ...grpc.CallOption) (*ListApplicationResponse, error)
	// CreateHTTPIntegration creates a HTTP application-integration.
	CreateHTTPIntegration(ctx context.Context, in *CreateHTTPIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// GetHTTPIntegration returns the HTTP application-integration.
	GetHTTPIntegration(ctx context.Context, in *GetHTTPIntegrationRequest, opts ...grpc.CallOption) (*GetHTTPIntegrationResponse, error)
	// UpdateHTTPIntegration updates the HTTP application-integration.
	UpdateHTTPIntegration(ctx context.Context, in *UpdateHTTPIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// DeleteIntegration deletes the HTTP application-integration.
	DeleteHTTPIntegration(ctx context.Context, in *DeleteHTTPIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// CreateInfluxDBIntegration create an InfluxDB application-integration.
	CreateInfluxDBIntegration(ctx context.Context, in *CreateInfluxDBIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// GetInfluxDBIntegration returns the InfluxDB application-integration.
	GetInfluxDBIntegration(ctx context.Context, in *GetInfluxDBIntegrationRequest, opts ...grpc.CallOption) (*GetInfluxDBIntegrationResponse, error)
	// UpdateInfluxDBIntegration updates the InfluxDB application-integration.
	UpdateInfluxDBIntegration(ctx context.Context, in *UpdateInfluxDBIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// DeleteInfluxDBIntegration deletes the InfluxDB application-integration.
	DeleteInfluxDBIntegration(ctx context.Context, in *DeleteInfluxDBIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// CreateThingsBoardIntegration creates a ThingsBoard application-integration.
	CreateThingsBoardIntegration(ctx context.Context, in *CreateThingsBoardIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// GetThingsBoardIntegration returns the ThingsBoard application-integration.
	GetThingsBoardIntegration(ctx context.Context, in *GetThingsBoardIntegrationRequest, opts ...grpc.CallOption) (*GetThingsBoardIntegrationResponse, error)
	// UpdateThingsBoardIntegration updates the ThingsBoard application-integration.
	UpdateThingsBoardIntegration(ctx context.Context, in *UpdateThingsBoardIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// DeleteThingsBoardIntegration deletes the ThingsBoard application-integration.
	DeleteThingsBoardIntegration(ctx context.Context, in *DeleteThingsBoardIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	// ListIntegrations lists all configured integrations.
	ListIntegrations(ctx context.Context, in *ListIntegrationRequest, opts ...grpc.CallOption) (*ListIntegrationResponse, error)
}

type applicationServiceClient struct {
	cc *grpc.ClientConn
}

func NewApplicationServiceClient(cc *grpc.ClientConn) ApplicationServiceClient {
	return &applicationServiceClient{cc}
}

func (c *applicationServiceClient) Create(ctx context.Context, in *CreateApplicationRequest, opts ...grpc.CallOption) (*CreateApplicationResponse, error) {
	out := new(CreateApplicationResponse)
	err := grpc.Invoke(ctx, "/api.ApplicationService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) Get(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*GetApplicationResponse, error) {
	out := new(GetApplicationResponse)
	err := grpc.Invoke(ctx, "/api.ApplicationService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) Update(ctx context.Context, in *UpdateApplicationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.ApplicationService/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) Delete(ctx context.Context, in *DeleteApplicationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.ApplicationService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) List(ctx context.Context, in *ListApplicationRequest, opts ...grpc.CallOption) (*ListApplicationResponse, error) {
	out := new(ListApplicationResponse)
	err := grpc.Invoke(ctx, "/api.ApplicationService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) CreateHTTPIntegration(ctx context.Context, in *CreateHTTPIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.ApplicationService/CreateHTTPIntegration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) GetHTTPIntegration(ctx context.Context, in *GetHTTPIntegrationRequest, opts ...grpc.CallOption) (*GetHTTPIntegrationResponse, error) {
	out := new(GetHTTPIntegrationResponse)
	err := grpc.Invoke(ctx, "/api.ApplicationService/GetHTTPIntegration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) UpdateHTTPIntegration(ctx context.Context, in *UpdateHTTPIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.ApplicationService/UpdateHTTPIntegration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) DeleteHTTPIntegration(ctx context.Context, in *DeleteHTTPIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.ApplicationService/DeleteHTTPIntegration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) CreateInfluxDBIntegration(ctx context.Context, in *CreateInfluxDBIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.ApplicationService/CreateInfluxDBIntegration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) GetInfluxDBIntegration(ctx context.Context, in *GetInfluxDBIntegrationRequest, opts ...grpc.CallOption) (*GetInfluxDBIntegrationResponse, error) {
	out := new(GetInfluxDBIntegrationResponse)
	err := grpc.Invoke(ctx, "/api.ApplicationService/GetInfluxDBIntegration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) UpdateInfluxDBIntegration(ctx context.Context, in *UpdateInfluxDBIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.ApplicationService/UpdateInfluxDBIntegration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) DeleteInfluxDBIntegration(ctx context.Context, in *DeleteInfluxDBIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.ApplicationService/DeleteInfluxDBIntegration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) CreateThingsBoardIntegration(ctx context.Context, in *CreateThingsBoardIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.ApplicationService/CreateThingsBoardIntegration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) GetThingsBoardIntegration(ctx context.Context, in *GetThingsBoardIntegrationRequest, opts ...grpc.CallOption) (*GetThingsBoardIntegrationResponse, error) {
	out := new(GetThingsBoardIntegrationResponse)
	err := grpc.Invoke(ctx, "/api.ApplicationService/GetThingsBoardIntegration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) UpdateThingsBoardIntegration(ctx context.Context, in *UpdateThingsBoardIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.ApplicationService/UpdateThingsBoardIntegration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) DeleteThingsBoardIntegration(ctx context.Context, in *DeleteThingsBoardIntegrationRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/api.ApplicationService/DeleteThingsBoardIntegration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) ListIntegrations(ctx context.Context, in *ListIntegrationRequest, opts ...grpc.CallOption) (*ListIntegrationResponse, error) {
	out := new(ListIntegrationResponse)
	err := grpc.Invoke(ctx, "/api.ApplicationService/ListIntegrations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ApplicationService service

type ApplicationServiceServer interface {
	// Create creates the given application.
	Create(context.Context, *CreateApplicationRequest) (*CreateApplicationResponse, error)
	// Get returns the requested application.
	Get(context.Context, *GetApplicationRequest) (*GetApplicationResponse, error)
	// Update updates the given application.
	Update(context.Context, *UpdateApplicationRequest) (*google_protobuf2.Empty, error)
	// Delete deletes the given application.
	Delete(context.Context, *DeleteApplicationRequest) (*google_protobuf2.Empty, error)
	// List lists the available applications.
	List(context.Context, *ListApplicationRequest) (*ListApplicationResponse, error)
	// CreateHTTPIntegration creates a HTTP application-integration.
	CreateHTTPIntegration(context.Context, *CreateHTTPIntegrationRequest) (*google_protobuf2.Empty, error)
	// GetHTTPIntegration returns the HTTP application-integration.
	GetHTTPIntegration(context.Context, *GetHTTPIntegrationRequest) (*GetHTTPIntegrationResponse, error)
	// UpdateHTTPIntegration updates the HTTP application-integration.
	UpdateHTTPIntegration(context.Context, *UpdateHTTPIntegrationRequest) (*google_protobuf2.Empty, error)
	// DeleteIntegration deletes the HTTP application-integration.
	DeleteHTTPIntegration(context.Context, *DeleteHTTPIntegrationRequest) (*google_protobuf2.Empty, error)
	// CreateInfluxDBIntegration create an InfluxDB application-integration.
	CreateInfluxDBIntegration(context.Context, *CreateInfluxDBIntegrationRequest) (*google_protobuf2.Empty, error)
	// GetInfluxDBIntegration returns the InfluxDB application-integration.
	GetInfluxDBIntegration(context.Context, *GetInfluxDBIntegrationRequest) (*GetInfluxDBIntegrationResponse, error)
	// UpdateInfluxDBIntegration updates the InfluxDB application-integration.
	UpdateInfluxDBIntegration(context.Context, *UpdateInfluxDBIntegrationRequest) (*google_protobuf2.Empty, error)
	// DeleteInfluxDBIntegration deletes the InfluxDB application-integration.
	DeleteInfluxDBIntegration(context.Context, *DeleteInfluxDBIntegrationRequest) (*google_protobuf2.Empty, error)
	// CreateThingsBoardIntegration creates a ThingsBoard application-integration.
	CreateThingsBoardIntegration(context.Context, *CreateThingsBoardIntegrationRequest) (*google_protobuf2.Empty, error)
	// GetThingsBoardIntegration returns the ThingsBoard application-integration.
	GetThingsBoardIntegration(context.Context, *GetThingsBoardIntegrationRequest) (*GetThingsBoardIntegrationResponse, error)
	// UpdateThingsBoardIntegration updates the ThingsBoard application-integration.
	UpdateThingsBoardIntegration(context.Context, *UpdateThingsBoardIntegrationRequest) (*google_protobuf2.Empty, error)
	// DeleteThingsBoardIntegration deletes the ThingsBoard application-integration.
	DeleteThingsBoardIntegration(context.Context, *DeleteThingsBoardIntegrationRequest) (*google_protobuf2.Empty, error)
	// ListIntegrations lists all configured integrations.
	ListIntegrations(context.Context, *ListIntegrationRequest) (*ListIntegrationResponse, error)
}

func RegisterApplicationServiceServer(s *grpc.Server, srv ApplicationServiceServer) {
	s.RegisterService(&_ApplicationService_serviceDesc, srv)
}

func _ApplicationService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).Create(ctx, req.(*CreateApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).Get(ctx, req.(*GetApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).Update(ctx, req.(*UpdateApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).Delete(ctx, req.(*DeleteApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).List(ctx, req.(*ListApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_CreateHTTPIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateHTTPIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).CreateHTTPIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/CreateHTTPIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).CreateHTTPIntegration(ctx, req.(*CreateHTTPIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_GetHTTPIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHTTPIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).GetHTTPIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/GetHTTPIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).GetHTTPIntegration(ctx, req.(*GetHTTPIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_UpdateHTTPIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHTTPIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).UpdateHTTPIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/UpdateHTTPIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).UpdateHTTPIntegration(ctx, req.(*UpdateHTTPIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_DeleteHTTPIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteHTTPIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).DeleteHTTPIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/DeleteHTTPIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).DeleteHTTPIntegration(ctx, req.(*DeleteHTTPIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_CreateInfluxDBIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInfluxDBIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).CreateInfluxDBIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/CreateInfluxDBIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).CreateInfluxDBIntegration(ctx, req.(*CreateInfluxDBIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_GetInfluxDBIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfluxDBIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).GetInfluxDBIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/GetInfluxDBIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).GetInfluxDBIntegration(ctx, req.(*GetInfluxDBIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_UpdateInfluxDBIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInfluxDBIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).UpdateInfluxDBIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/UpdateInfluxDBIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).UpdateInfluxDBIntegration(ctx, req.(*UpdateInfluxDBIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_DeleteInfluxDBIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInfluxDBIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).DeleteInfluxDBIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/DeleteInfluxDBIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).DeleteInfluxDBIntegration(ctx, req.(*DeleteInfluxDBIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_CreateThingsBoardIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateThingsBoardIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).CreateThingsBoardIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/CreateThingsBoardIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).CreateThingsBoardIntegration(ctx, req.(*CreateThingsBoardIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_GetThingsBoardIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetThingsBoardIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).GetThingsBoardIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/GetThingsBoardIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).GetThingsBoardIntegration(ctx, req.(*GetThingsBoardIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_UpdateThingsBoardIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateThingsBoardIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).UpdateThingsBoardIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/UpdateThingsBoardIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).UpdateThingsBoardIntegration(ctx, req.(*UpdateThingsBoardIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_DeleteThingsBoardIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteThingsBoardIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).DeleteThingsBoardIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/DeleteThingsBoardIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).DeleteThingsBoardIntegration(ctx, req.(*DeleteThingsBoardIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_ListIntegrations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).ListIntegrations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ApplicationService/ListIntegrations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).ListIntegrations(ctx, req.(*ListIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApplicationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ApplicationService",
	HandlerType: (*ApplicationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ApplicationService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ApplicationService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ApplicationService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ApplicationService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ApplicationService_List_Handler,
		},
		{
			MethodName: "CreateHTTPIntegration",
			Handler:    _ApplicationService_CreateHTTPIntegration_Handler,
		},
		{
			MethodName: "GetHTTPIntegration",
			Handler:    _ApplicationService_GetHTTPIntegration_Handler,
		},
		{
			MethodName: "UpdateHTTPIntegration",
			Handler:    _ApplicationService_UpdateHTTPIntegration_Handler,
		},
		{
			MethodName: "DeleteHTTPIntegration",
			Handler:    _ApplicationService_DeleteHTTPIntegration_Handler,
		},
		{
			MethodName: "CreateInfluxDBIntegration",
			Handler:    _ApplicationService_CreateInfluxDBIntegration_Handler,
		},
		{
			MethodName: "GetInfluxDBIntegration",
			Handler:    _ApplicationService_GetInfluxDBIntegration_Handler,
		},
		{
			MethodName: "UpdateInfluxDBIntegration",
			Handler:    _ApplicationService_UpdateInfluxDBIntegration_Handler,
		},
		{
			MethodName: "DeleteInfluxDBIntegration",
			Handler:    _ApplicationService_DeleteInfluxDBIntegration_Handler,
		},
		{
			MethodName: "CreateThingsBoardIntegration",
			Handler:    _ApplicationService_CreateThingsBoardIntegration_Handler,
		},
		{
			MethodName: "GetThingsBoardIntegration",
			Handler:    _ApplicationService_GetThingsBoardIntegration_Handler,
		},
		{
			MethodName: "UpdateThingsBoardIntegration",
			Handler:    _ApplicationService_UpdateThingsBoardIntegration_Handler,
		},
		{
			MethodName: "DeleteThingsBoardIntegration",
			Handler:    _ApplicationService_DeleteThingsBoardIntegration_Handler,
		},
		{
			MethodName: "ListIntegrations",
			Handler:    _ApplicationService_ListIntegrations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "application.proto",
}

func init() { proto.RegisterFile("application.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 1573 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x4d, 0x4f, 0x1b, 0x47,
	0x18, 0xce, 0xda, 0xe0, 0xc0, 0xeb, 0x04, 0xcc, 0x00, 0x8e, 0x71, 0x08, 0x21, 0x8b, 0x9a, 0x20,
	0xb7, 0x85, 0x94, 0xa2, 0xb4, 0xa2, 0x8d, 0x92, 0x80, 0x09, 0x58, 0x21, 0x0e, 0x5a, 0x20, 0xed,
	0x21, 0x8a, 0xb5, 0xf6, 0x0e, 0x30, 0x65, 0xd9, 0xdd, 0xee, 0x8e, 0xd3, 0xd2, 0x2a, 0x97, 0x1e,
	0x5a, 0xa9, 0xa7, 0x4a, 0xb9, 0x56, 0xea, 0xa1, 0x6a, 0x2f, 0x3d, 0xf4, 0xd2, 0x5b, 0x7f, 0x46,
	0xff, 0x42, 0x2e, 0xfd, 0x17, 0xd5, 0x7c, 0xac, 0x59, 0xd6, 0xb3, 0x86, 0xd8, 0x44, 0xea, 0x05,
	0x98, 0x79, 0x3f, 0xe6, 0x99, 0x67, 0x9f, 0x79, 0xe7, 0x1d, 0x60, 0xc4, 0xf4, 0x3c, 0x9b, 0x34,
	0x4c, 0x4a, 0x5c, 0x67, 0xce, 0xf3, 0x5d, 0xea, 0xa2, 0xb4, 0xe9, 0x91, 0xe2, 0xe4, 0x9e, 0xeb,
	0xee, 0xd9, 0x78, 0xde, 0xf4, 0xc8, 0xbc, 0xe9, 0x38, 0x2e, 0xe5, 0x1e, 0x81, 0x70, 0x29, 0x8e,
	0xe0, 0x43, 0x8f, 0x1e, 0xcd, 0xf3, 0x9f, 0x62, 0x4a, 0xff, 0x3b, 0x05, 0xd9, 0x07, 0xc7, 0xb9,
	0xd0, 0x10, 0xa4, 0x88, 0x55, 0xd0, 0xa6, 0xb5, 0xd9, 0xb4, 0x91, 0x22, 0x16, 0x42, 0xd0, 0xe7,
	0x98, 0x87, 0xb8, 0x90, 0x9a, 0xd6, 0x66, 0x07, 0x0d, 0xfe, 0x37, 0x9a, 0x86, 0xac, 0x85, 0x83,
	0x86, 0x4f, 0x3c, 0x16, 0x52, 0x48, 0x73, 0x53, 0x74, 0x0a, 0xdd, 0x82, 0x61, 0xd7, 0xdf, 0x33,
	0x1d, 0xf2, 0x0d, 0xcf, 0x5a, 0x23, 0x56, 0xa1, 0x8f, 0xa7, 0x1c, 0x8a, 0x4e, 0x57, 0xca, 0xe8,
	0x3d, 0x40, 0x01, 0xf6, 0x5f, 0x90, 0x06, 0xae, 0x79, 0xbe, 0xbb, 0x4b, 0x6c, 0xcc, 0x7c, 0xfb,
	0x79, 0xc6, 0x9c, 0xb4, 0x6c, 0x0a, 0x43, 0xa5, 0x8c, 0x66, 0xe0, 0xb2, 0x67, 0x1e, 0xd9, 0xae,
	0x69, 0xd5, 0x1a, 0xae, 0x85, 0x1b, 0x85, 0x0c, 0x77, 0xbc, 0x24, 0x27, 0x57, 0xd8, 0x1c, 0x5a,
	0x84, 0x7c, 0xe8, 0x84, 0x1d, 0xe6, 0xe6, 0xd7, 0x04, 0xb0, 0xc2, 0x45, 0xee, 0x3d, 0x26, 0xad,
	0xab, 0xc2, 0xb8, 0xc5, 0x6d, 0xd1, 0x28, 0x0b, 0x9f, 0x88, 0x1a, 0x38, 0x11, 0x55, 0xc6, 0x91,
	0x28, 0xfd, 0xb5, 0x06, 0xa3, 0x11, 0xf6, 0x36, 0x48, 0x40, 0x2b, 0x14, 0x1f, 0xfe, 0xbf, 0x59,
	0xbc, 0x0d, 0x63, 0x71, 0x6f, 0x0e, 0x4e, 0x90, 0x89, 0x4e, 0xfa, 0x57, 0xcd, 0x43, 0xac, 0x57,
	0xa1, 0xb0, 0xe2, 0x63, 0x93, 0xe2, 0xc8, 0x5e, 0x0d, 0xfc, 0x65, 0x13, 0x07, 0x14, 0x2d, 0x40,
	0x36, 0xa2, 0x45, 0xbe, 0xe7, 0xec, 0x42, 0x6e, 0xce, 0xf4, 0xc8, 0x5c, 0xd4, 0x3b, 0xea, 0xa4,
	0xbf, 0x0b, 0x13, 0x8a, 0x7c, 0x81, 0xe7, 0x3a, 0x01, 0x8e, 0x73, 0xa7, 0xdf, 0x82, 0xf1, 0x35,
	0x4c, 0x15, 0x2b, 0xc7, 0x1d, 0x37, 0x20, 0x1f, 0x77, 0x94, 0x29, 0xbb, 0xc1, 0x58, 0x85, 0xc2,
	0x8e, 0x67, 0x9d, 0xdf, 0x9e, 0x4b, 0x50, 0x28, 0x63, 0x1b, 0x2b, 0xf3, 0xc5, 0x77, 0xf2, 0x83,
	0x06, 0x79, 0xa6, 0x25, 0x85, 0xeb, 0x18, 0xf4, 0xdb, 0xe4, 0x90, 0x50, 0xe9, 0x2d, 0x06, 0x28,
	0x0f, 0x19, 0x77, 0x77, 0x37, 0xc0, 0x94, 0x2b, 0x2c, 0x6d, 0xc8, 0x91, 0x4a, 0x41, 0x69, 0xa5,
	0x82, 0xf2, 0x90, 0x09, 0xb0, 0xe9, 0x37, 0xf6, 0xb9, 0xc2, 0x06, 0x0d, 0x39, 0xd2, 0x6d, 0xb8,
	0xd2, 0x06, 0x44, 0x92, 0x7a, 0x1d, 0xb2, 0xd4, 0xa5, 0xa6, 0x5d, 0x6b, 0xb8, 0x4d, 0x27, 0xc4,
	0x03, 0x7c, 0x6a, 0x85, 0xcd, 0xa0, 0xdb, 0x90, 0xf1, 0x71, 0xd0, 0xb4, 0x19, 0xa8, 0xf4, 0x6c,
	0x76, 0xa1, 0x10, 0x27, 0x28, 0x3c, 0x2e, 0x86, 0xf4, 0xd3, 0xef, 0xc1, 0xf8, 0xfa, 0xf6, 0xf6,
	0x66, 0xc5, 0xa1, 0x78, 0xcf, 0xe7, 0x2e, 0xeb, 0xd8, 0xb4, 0xb0, 0x8f, 0x72, 0x90, 0x3e, 0xc0,
	0x47, 0x7c, 0x8d, 0x41, 0x83, 0xfd, 0xc9, 0x78, 0x78, 0x61, 0xda, 0xcd, 0xf0, 0x48, 0x89, 0x81,
	0xfe, 0x7b, 0x1a, 0x86, 0x63, 0x19, 0xd0, 0x3b, 0x30, 0x14, 0xf9, 0x0e, 0xb5, 0x16, 0xd1, 0x97,
	0x23, 0xb3, 0x95, 0x32, 0x5a, 0x84, 0x8b, 0xfb, 0x7c, 0xb1, 0x40, 0xc2, 0x2d, 0x72, 0xb8, 0x4a,
	0x3c, 0x46, 0xe8, 0x8a, 0x6e, 0xc2, 0x70, 0xd3, 0xb3, 0x89, 0x73, 0x50, 0xb3, 0x4c, 0x6a, 0xd6,
	0x9a, 0xbe, 0x2d, 0x0f, 0xf2, 0x65, 0x31, 0x5d, 0x36, 0xa9, 0xb9, 0x63, 0x6c, 0xa0, 0x05, 0x18,
	0xff, 0xc2, 0x25, 0x4e, 0xcd, 0x71, 0x29, 0xd9, 0x0d, 0xa1, 0x30, 0x6f, 0x41, 0xf7, 0x28, 0x33,
	0x56, 0x23, 0x36, 0x16, 0x73, 0x1b, 0xc6, 0xcc, 0xc6, 0x41, 0x7b, 0x88, 0x38, 0xd7, 0xc8, 0x6c,
	0x1c, 0xc4, 0x23, 0x16, 0x21, 0x8f, 0x7d, 0xdf, 0xf5, 0xdb, 0x63, 0xc4, 0xd9, 0x1e, 0xe3, 0xd6,
	0x78, 0xd4, 0x1d, 0xb8, 0x12, 0x50, 0x93, 0x36, 0x83, 0xf6, 0x30, 0x51, 0x31, 0xc7, 0x85, 0x39,
	0x1e, 0xb7, 0x04, 0x13, 0xb6, 0x2b, 0x9d, 0xdb, 0x22, 0x45, 0xd5, 0xbc, 0x12, 0x3a, 0xc4, 0x62,
	0xf5, 0xa7, 0x30, 0x29, 0x2a, 0x40, 0x8c, 0xdf, 0x50, 0xe6, 0x77, 0x20, 0x4b, 0x8e, 0x67, 0xe5,
	0x09, 0x1b, 0x53, 0x7d, 0x11, 0x23, 0xea, 0xa8, 0x2f, 0xc3, 0xc4, 0x1a, 0xa6, 0x09, 0x49, 0xcf,
	0xa6, 0x04, 0x7d, 0x1b, 0x8a, 0xaa, 0x1c, 0x52, 0xf6, 0xdd, 0x22, 0x7b, 0x0a, 0x93, 0xa2, 0x9e,
	0x9c, 0xf3, 0x8e, 0x57, 0x61, 0x52, 0xd4, 0x95, 0xde, 0x36, 0x7d, 0x4f, 0x54, 0x9c, 0x5e, 0x12,
	0x8c, 0x46, 0x82, 0x5b, 0x37, 0xe1, 0x2c, 0xf4, 0x1d, 0x10, 0x47, 0xc4, 0x0c, 0xc9, 0xfd, 0x44,
	0xfc, 0x1e, 0x11, 0xc7, 0x32, 0xb8, 0x47, 0x58, 0x6a, 0x54, 0x9c, 0x77, 0x59, 0x6a, 0x14, 0x78,
	0x5a, 0xa5, 0xe6, 0xc7, 0x14, 0xc3, 0xbb, 0x6b, 0x37, 0xbf, 0x2e, 0x2f, 0x77, 0x51, 0x2d, 0x8a,
	0x30, 0x80, 0x1d, 0xcb, 0x73, 0x89, 0x43, 0x65, 0x05, 0x6a, 0x8d, 0x59, 0x35, 0xb7, 0xea, 0xb2,
	0x0c, 0xa4, 0xac, 0x3a, 0xf3, 0x6d, 0x06, 0xd8, 0xe7, 0x77, 0xac, 0x38, 0xee, 0xad, 0x31, 0xb3,
	0x79, 0x66, 0x10, 0x7c, 0xe5, 0xfa, 0xe1, 0x7d, 0xdd, 0x1a, 0xb3, 0x9a, 0xe1, 0x63, 0x8a, 0x1d,
	0x0e, 0xc4, 0x73, 0x6d, 0xd2, 0x38, 0x8a, 0x5e, 0xd4, 0xa3, 0x2d, 0xe3, 0x26, 0xb7, 0xb1, 0x9b,
	0x1a, 0x2d, 0xc2, 0xa0, 0xe7, 0xe3, 0x06, 0x09, 0x98, 0x86, 0x2e, 0x72, 0xce, 0xf3, 0x92, 0x0b,
	0xb1, 0xd7, 0xcd, 0xd0, 0x6a, 0x1c, 0x3b, 0xea, 0xcf, 0x61, 0x5a, 0x9c, 0x46, 0x05, 0x23, 0xa1,
	0x0c, 0x96, 0x54, 0xfa, 0x2c, 0x9c, 0xc8, 0x9d, 0xa8, 0xd1, 0x87, 0x70, 0x6d, 0x0d, 0xd3, 0x0e,
	0xc9, 0xcf, 0xa8, 0xb1, 0x67, 0x30, 0x95, 0x94, 0x47, 0x2a, 0xa5, 0x17, 0x94, 0xcf, 0x61, 0x5a,
	0x9c, 0xd0, 0xb7, 0xc4, 0x42, 0x05, 0xa6, 0xc5, 0x49, 0xed, 0x9d, 0x88, 0xcf, 0x20, 0xbf, 0xbd,
	0x4f, 0x9c, 0xbd, 0x60, 0xd9, 0x35, 0x7d, 0xab, 0x0b, 0xfd, 0xf2, 0xfb, 0xde, 0x7f, 0x81, 0x7d,
	0xa9, 0x5e, 0x39, 0xd2, 0x2d, 0x98, 0x11, 0x4a, 0x50, 0xa7, 0x0f, 0x61, 0xde, 0x55, 0xd1, 0x70,
	0x95, 0xd3, 0x90, 0x10, 0x18, 0x67, 0x62, 0x0d, 0xd3, 0xce, 0x4b, 0x9c, 0x91, 0x89, 0x3a, 0xdc,
	0xe8, 0x90, 0x4a, 0xaa, 0xa2, 0x47, 0xb8, 0x16, 0xcc, 0x08, 0x61, 0xbc, 0x55, 0x52, 0x36, 0x60,
	0x46, 0xc8, 0xe3, 0x3c, 0x78, 0x29, 0x2d, 0xc1, 0x70, 0xac, 0xcc, 0xa2, 0x01, 0xe8, 0x63, 0x77,
	0x44, 0xee, 0x02, 0xba, 0x04, 0x03, 0x95, 0xea, 0xc3, 0x8d, 0x9d, 0xcf, 0xcb, 0xcb, 0x39, 0x0d,
	0x0d, 0x43, 0x76, 0x7b, 0xbd, 0x52, 0x5d, 0xdb, 0x5a, 0x7e, 0xf2, 0xc0, 0x28, 0xe7, 0x52, 0xa5,
	0x7b, 0x30, 0xd2, 0x56, 0x2e, 0x50, 0x06, 0x52, 0xd5, 0xad, 0xdc, 0x05, 0xd4, 0x0f, 0xda, 0x4e,
	0x4e, 0x63, 0xc3, 0xc7, 0x5b, 0xb9, 0x14, 0x1b, 0x6e, 0xe5, 0xd2, 0xec, 0xd7, 0xe3, 0x5c, 0x1f,
	0xfb, 0xb5, 0x9e, 0xeb, 0x5f, 0xf8, 0x77, 0x0c, 0x50, 0xa4, 0xcf, 0xdb, 0x12, 0x2f, 0x0a, 0x84,
	0x21, 0x23, 0xc4, 0x85, 0xae, 0x71, 0x56, 0x92, 0xde, 0x14, 0xc5, 0xa9, 0x24, 0xb3, 0xf8, 0x9e,
	0xfa, 0xe4, 0x77, 0xff, 0xbc, 0x7e, 0x95, 0xca, 0xeb, 0x23, 0xe2, 0x9d, 0x7b, 0xec, 0x11, 0x2c,
	0x69, 0x25, 0xf4, 0x1c, 0xd2, 0x6b, 0x98, 0x22, 0xd1, 0xbf, 0x29, 0x9f, 0x0e, 0xc5, 0xab, 0x4a,
	0x9b, 0xcc, 0x3e, 0xc5, 0xb3, 0x17, 0x50, 0xbe, 0x2d, 0xfb, 0xfc, 0xb7, 0xc4, 0x7a, 0x89, 0x1c,
	0xc8, 0x08, 0x39, 0xc8, 0x6d, 0x24, 0x3d, 0x13, 0x8a, 0xf9, 0x39, 0xf1, 0x1a, 0x17, 0x4f, 0xed,
	0x7a, 0x73, 0x77, 0x6e, 0x95, 0xbd, 0xbc, 0xf5, 0xf7, 0xf9, 0x02, 0xb7, 0x8a, 0xba, 0x62, 0x81,
	0xe8, 0xbb, 0x9e, 0x58, 0x2f, 0xd9, 0x7e, 0x6a, 0x90, 0x11, 0xc2, 0x90, 0xeb, 0x25, 0x3d, 0x23,
	0x12, 0xd7, 0x93, 0x1b, 0x2a, 0x25, 0x6d, 0xe8, 0x19, 0xf4, 0xb1, 0xfb, 0x11, 0x09, 0x56, 0xd4,
	0x0f, 0x8f, 0xe2, 0xa4, 0xda, 0x28, 0x39, 0x9b, 0xe0, 0x4b, 0x8c, 0xa2, 0xf6, 0x2f, 0x82, 0x7e,
	0xd1, 0x60, 0x5c, 0xd9, 0xeb, 0xa1, 0x1b, 0x91, 0xcf, 0xac, 0xee, 0x5e, 0x12, 0xb7, 0xf4, 0x88,
	0xaf, 0xb7, 0xaa, 0xdf, 0x57, 0x6d, 0xe9, 0x38, 0xcd, 0xdc, 0xc9, 0xa3, 0xf2, 0x72, 0x3e, 0x62,
	0x0b, 0xe6, 0xf7, 0x29, 0xf5, 0x18, 0xc1, 0xaf, 0x34, 0x40, 0xed, 0x1d, 0x1f, 0x9a, 0x0a, 0x45,
	0x92, 0x80, 0xed, 0x7a, 0xa2, 0x5d, 0x92, 0xf2, 0x29, 0x07, 0x79, 0x07, 0x2d, 0x76, 0xfe, 0xce,
	0x6a, 0x60, 0x9c, 0x37, 0x65, 0xc7, 0x28, 0x79, 0xeb, 0xd4, 0x4d, 0x9e, 0xc6, 0x5b, 0xf1, 0x5c,
	0x78, 0xfb, 0x49, 0x83, 0x71, 0x65, 0xef, 0x29, 0x11, 0x76, 0xea, 0x4b, 0x13, 0x11, 0x4a, 0xd2,
	0x4a, 0xdd, 0x91, 0xf6, 0x87, 0x16, 0xfe, 0x6b, 0x41, 0xd9, 0xdc, 0x45, 0x04, 0x97, 0x7c, 0x09,
	0x27, 0x42, 0x7b, 0xc2, 0xa1, 0x55, 0xf4, 0x72, 0x2f, 0xe4, 0x11, 0xbe, 0xae, 0x55, 0x67, 0x04,
	0xfe, 0xaa, 0xf1, 0x7f, 0x59, 0xa8, 0xa0, 0xea, 0xa1, 0xb8, 0x3a, 0xe0, 0x9c, 0xe9, 0xe8, 0x23,
	0x45, 0x78, 0x9f, 0x83, 0x5e, 0x42, 0x1f, 0xbf, 0x29, 0x9f, 0x21, 0x50, 0xce, 0x69, 0x62, 0x63,
	0x24, 0x39, 0x3d, 0xad, 0x71, 0x3a, 0x8d, 0xd3, 0xe2, 0xb9, 0x71, 0xfa, 0xb3, 0x06, 0x13, 0x89,
	0x6d, 0x96, 0x44, 0x7b, 0x5a, 0x1b, 0x96, 0x88, 0x56, 0x92, 0x59, 0xea, 0x9e, 0xcc, 0xbf, 0xb4,
	0xf0, 0xe5, 0x9b, 0xd0, 0xc0, 0xcd, 0x46, 0x34, 0xda, 0xb1, 0x13, 0x48, 0x04, 0x69, 0x70, 0x90,
	0x1b, 0xfa, 0x5a, 0x2f, 0x94, 0x52, 0xbe, 0x74, 0x9d, 0x2d, 0xcd, 0x58, 0xfd, 0x53, 0xe3, 0x0f,
	0xeb, 0xa4, 0xa6, 0x33, 0x14, 0x62, 0x67, 0xc0, 0x37, 0x4f, 0x73, 0x93, 0x92, 0x5d, 0xe1, 0x1b,
	0xb8, 0x8b, 0x3e, 0x79, 0x53, 0x96, 0x23, 0xa0, 0x39, 0xd1, 0x9d, 0xba, 0x36, 0x49, 0xf4, 0x19,
	0x1a, 0xbb, 0xd3, 0x88, 0x2e, 0x9e, 0x27, 0xd1, 0xbf, 0x69, 0xe1, 0x7b, 0xbe, 0x23, 0xec, 0x33,
	0x74, 0x8a, 0x89, 0xb0, 0x25, 0xbd, 0xa5, 0x9e, 0xe8, 0xfd, 0x5e, 0x83, 0x5c, 0xec, 0xb9, 0x1e,
	0x44, 0x1a, 0x08, 0x05, 0x9c, 0x49, 0xb5, 0x51, 0x7e, 0xf3, 0x8f, 0x38, 0xa8, 0x0f, 0xd0, 0xfc,
	0x1b, 0x82, 0xaa, 0x67, 0xf8, 0xee, 0x3e, 0xfc, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x31, 0x6c, 0x4e,
	0xf1, 0x12, 0x19, 0x00, 0x00,
}
