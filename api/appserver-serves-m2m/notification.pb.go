// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notification.proto

package appserver_serves_m2m

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendStakeIncomeNotificationRequest struct {
	StakeIncomeAmount    string   `protobuf:"bytes,1,opt,name=stake_income_amount,json=stakeIncomeAmount,proto3" json:"stake_income_amount,omitempty"`
	StakeAmount          string   `protobuf:"bytes,2,opt,name=stake_amount,json=stakeAmount,proto3" json:"stake_amount,omitempty"`
	StakeIncomeInterest  string   `protobuf:"bytes,3,opt,name=stake_income_interest,json=stakeIncomeInterest,proto3" json:"stake_income_interest,omitempty"`
	StakeId              string   `protobuf:"bytes,4,opt,name=stake_id,json=stakeId,proto3" json:"stake_id,omitempty"`
	StakeRevenueId       string   `protobuf:"bytes,5,opt,name=stake_revenue_id,json=stakeRevenueId,proto3" json:"stake_revenue_id,omitempty"`
	StakeRevenueDate     string   `protobuf:"bytes,6,opt,name=stake_revenue_date,json=stakeRevenueDate,proto3" json:"stake_revenue_date,omitempty"`
	StakeStartDate       string   `protobuf:"bytes,7,opt,name=stake_start_date,json=stakeStartDate,proto3" json:"stake_start_date,omitempty"`
	OrganizationId       int64    `protobuf:"varint,8,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendStakeIncomeNotificationRequest) Reset()         { *m = SendStakeIncomeNotificationRequest{} }
func (m *SendStakeIncomeNotificationRequest) String() string { return proto.CompactTextString(m) }
func (*SendStakeIncomeNotificationRequest) ProtoMessage()    {}
func (*SendStakeIncomeNotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{0}
}

func (m *SendStakeIncomeNotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendStakeIncomeNotificationRequest.Unmarshal(m, b)
}
func (m *SendStakeIncomeNotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendStakeIncomeNotificationRequest.Marshal(b, m, deterministic)
}
func (m *SendStakeIncomeNotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendStakeIncomeNotificationRequest.Merge(m, src)
}
func (m *SendStakeIncomeNotificationRequest) XXX_Size() int {
	return xxx_messageInfo_SendStakeIncomeNotificationRequest.Size(m)
}
func (m *SendStakeIncomeNotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendStakeIncomeNotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendStakeIncomeNotificationRequest proto.InternalMessageInfo

func (m *SendStakeIncomeNotificationRequest) GetStakeIncomeAmount() string {
	if m != nil {
		return m.StakeIncomeAmount
	}
	return ""
}

func (m *SendStakeIncomeNotificationRequest) GetStakeAmount() string {
	if m != nil {
		return m.StakeAmount
	}
	return ""
}

func (m *SendStakeIncomeNotificationRequest) GetStakeIncomeInterest() string {
	if m != nil {
		return m.StakeIncomeInterest
	}
	return ""
}

func (m *SendStakeIncomeNotificationRequest) GetStakeId() string {
	if m != nil {
		return m.StakeId
	}
	return ""
}

func (m *SendStakeIncomeNotificationRequest) GetStakeRevenueId() string {
	if m != nil {
		return m.StakeRevenueId
	}
	return ""
}

func (m *SendStakeIncomeNotificationRequest) GetStakeRevenueDate() string {
	if m != nil {
		return m.StakeRevenueDate
	}
	return ""
}

func (m *SendStakeIncomeNotificationRequest) GetStakeStartDate() string {
	if m != nil {
		return m.StakeStartDate
	}
	return ""
}

func (m *SendStakeIncomeNotificationRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

type SendStakeIncomeNotificationResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendStakeIncomeNotificationResponse) Reset()         { *m = SendStakeIncomeNotificationResponse{} }
func (m *SendStakeIncomeNotificationResponse) String() string { return proto.CompactTextString(m) }
func (*SendStakeIncomeNotificationResponse) ProtoMessage()    {}
func (*SendStakeIncomeNotificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{1}
}

func (m *SendStakeIncomeNotificationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendStakeIncomeNotificationResponse.Unmarshal(m, b)
}
func (m *SendStakeIncomeNotificationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendStakeIncomeNotificationResponse.Marshal(b, m, deterministic)
}
func (m *SendStakeIncomeNotificationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendStakeIncomeNotificationResponse.Merge(m, src)
}
func (m *SendStakeIncomeNotificationResponse) XXX_Size() int {
	return xxx_messageInfo_SendStakeIncomeNotificationResponse.Size(m)
}
func (m *SendStakeIncomeNotificationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendStakeIncomeNotificationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendStakeIncomeNotificationResponse proto.InternalMessageInfo

func (m *SendStakeIncomeNotificationResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*SendStakeIncomeNotificationRequest)(nil), "appserver_serves_m2m.SendStakeIncomeNotificationRequest")
	proto.RegisterType((*SendStakeIncomeNotificationResponse)(nil), "appserver_serves_m2m.SendStakeIncomeNotificationResponse")
}

func init() { proto.RegisterFile("notification.proto", fileDescriptor_736a457d4a5efa07) }

var fileDescriptor_736a457d4a5efa07 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xb1, 0x4e, 0xf3, 0x30,
	0x14, 0x85, 0x95, 0xf6, 0xff, 0xdb, 0x72, 0x41, 0xa5, 0xb8, 0x80, 0x02, 0x2c, 0xa5, 0x0c, 0x74,
	0x40, 0x19, 0xca, 0x02, 0x03, 0x03, 0x12, 0x4b, 0x16, 0x86, 0xe4, 0x01, 0x22, 0xd3, 0x5c, 0x90,
	0x85, 0x62, 0x07, 0xfb, 0xa6, 0x03, 0x8f, 0xc1, 0x63, 0xf0, 0x76, 0xbc, 0x01, 0xea, 0x8d, 0xa5,
	0xba, 0x12, 0x2a, 0x12, 0x53, 0x94, 0x73, 0xbf, 0x73, 0x64, 0x1f, 0x5f, 0x10, 0xda, 0x90, 0x7a,
	0x56, 0x0b, 0x49, 0xca, 0xe8, 0xa4, 0xb6, 0x86, 0x8c, 0x38, 0x94, 0x75, 0xed, 0xd0, 0x2e, 0xd1,
	0x16, 0xfc, 0x71, 0x45, 0x35, 0xaf, 0xa6, 0x5f, 0x1d, 0x98, 0xe6, 0xa8, 0xcb, 0x9c, 0xe4, 0x2b,
	0xa6, 0x7a, 0x61, 0x2a, 0x7c, 0x0c, 0xbc, 0x19, 0xbe, 0x35, 0xe8, 0x48, 0x24, 0x30, 0x76, 0x2b,
	0xa2, 0x50, 0x8c, 0x14, 0xb2, 0x32, 0x8d, 0xa6, 0x38, 0x9a, 0x44, 0xb3, 0x9d, 0xec, 0xc0, 0xad,
	0xcd, 0xf7, 0x3c, 0x10, 0xe7, 0xb0, 0xd7, 0xf2, 0x1e, 0xec, 0x30, 0xb8, 0xcb, 0x9a, 0x47, 0xe6,
	0x70, 0xb4, 0x11, 0xa9, 0x34, 0xa1, 0x45, 0x47, 0x71, 0x97, 0xd9, 0x71, 0x10, 0x9a, 0xfa, 0x91,
	0x38, 0x81, 0x81, 0xf7, 0x94, 0xf1, 0x3f, 0xc6, 0xfa, 0x2d, 0x56, 0x8a, 0x19, 0x8c, 0xda, 0x91,
	0xc5, 0x25, 0xea, 0x86, 0x91, 0xff, 0x8c, 0x0c, 0x59, 0xcf, 0x5a, 0x39, 0x2d, 0xc5, 0x15, 0x88,
	0x4d, 0xb2, 0x94, 0x84, 0x71, 0x8f, 0xd9, 0x51, 0xc8, 0x3e, 0x48, 0xc2, 0x75, 0xae, 0x23, 0x69,
	0xa9, 0x65, 0xfb, 0x41, 0x6e, 0xbe, 0x92, 0x99, 0xbc, 0x84, 0x7d, 0x63, 0x5f, 0xa4, 0x56, 0xef,
	0x5c, 0xdd, 0xea, 0x00, 0x83, 0x49, 0x34, 0xeb, 0x66, 0xc3, 0x50, 0x4e, 0xcb, 0xe9, 0x1d, 0x5c,
	0x6c, 0xad, 0xdc, 0xd5, 0x46, 0x3b, 0x14, 0xc7, 0xd0, 0x73, 0x24, 0xa9, 0x71, 0xbe, 0x66, 0xff,
	0x37, 0xff, 0x8c, 0x60, 0x1c, 0x1a, 0x72, 0xb4, 0x4b, 0xb5, 0x40, 0xf1, 0x11, 0xc1, 0xd9, 0x96,
	0x5c, 0x71, 0x93, 0xfc, 0xb4, 0x01, 0xc9, 0xef, 0xaf, 0x7f, 0x7a, 0xfb, 0x07, 0x67, 0x7b, 0x89,
	0xa7, 0x1e, 0x2f, 0xdf, 0xf5, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5d, 0x24, 0xb6, 0x55, 0x92,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NotificationServiceClient is the client API for NotificationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotificationServiceClient interface {
	SendStakeIncomeNotification(ctx context.Context, in *SendStakeIncomeNotificationRequest, opts ...grpc.CallOption) (*SendStakeIncomeNotificationResponse, error)
}

type notificationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNotificationServiceClient(cc grpc.ClientConnInterface) NotificationServiceClient {
	return &notificationServiceClient{cc}
}

func (c *notificationServiceClient) SendStakeIncomeNotification(ctx context.Context, in *SendStakeIncomeNotificationRequest, opts ...grpc.CallOption) (*SendStakeIncomeNotificationResponse, error) {
	out := new(SendStakeIncomeNotificationResponse)
	err := c.cc.Invoke(ctx, "/appserver_serves_m2m.NotificationService/SendStakeIncomeNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotificationServiceServer is the server API for NotificationService service.
type NotificationServiceServer interface {
	SendStakeIncomeNotification(context.Context, *SendStakeIncomeNotificationRequest) (*SendStakeIncomeNotificationResponse, error)
}

// UnimplementedNotificationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNotificationServiceServer struct {
}

func (*UnimplementedNotificationServiceServer) SendStakeIncomeNotification(ctx context.Context, req *SendStakeIncomeNotificationRequest) (*SendStakeIncomeNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendStakeIncomeNotification not implemented")
}

func RegisterNotificationServiceServer(s *grpc.Server, srv NotificationServiceServer) {
	s.RegisterService(&_NotificationService_serviceDesc, srv)
}

func _NotificationService_SendStakeIncomeNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendStakeIncomeNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).SendStakeIncomeNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appserver_serves_m2m.NotificationService/SendStakeIncomeNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).SendStakeIncomeNotification(ctx, req.(*SendStakeIncomeNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NotificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appserver_serves_m2m.NotificationService",
	HandlerType: (*NotificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendStakeIncomeNotification",
			Handler:    _NotificationService_SendStakeIncomeNotification_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notification.proto",
}
