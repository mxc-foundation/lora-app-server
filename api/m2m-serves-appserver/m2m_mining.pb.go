// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.2
// source: m2m_mining.proto

package m2m_serves_appserver

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// MiningRequest contains list of gateways that should be paid
type MiningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayMac    []string `protobuf:"bytes,1,rep,name=gateway_mac,json=gatewayMac,proto3" json:"gateway_mac,omitempty"`
	MiningRevenue float64  `protobuf:"fixed64,2,opt,name=mining_revenue,json=miningRevenue,proto3" json:"mining_revenue,omitempty"`
	MxcPrice      float64  `protobuf:"fixed64,3,opt,name=mxc_price,json=mxcPrice,proto3" json:"mxc_price,omitempty"`
	PeriodSeconds int64    `protobuf:"varint,4,opt,name=period_seconds,json=periodSeconds,proto3" json:"period_seconds,omitempty"`
}

func (x *MiningRequest) Reset() {
	*x = MiningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_m2m_mining_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningRequest) ProtoMessage() {}

func (x *MiningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_m2m_mining_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningRequest.ProtoReflect.Descriptor instead.
func (*MiningRequest) Descriptor() ([]byte, []int) {
	return file_m2m_mining_proto_rawDescGZIP(), []int{0}
}

func (x *MiningRequest) GetGatewayMac() []string {
	if x != nil {
		return x.GatewayMac
	}
	return nil
}

func (x *MiningRequest) GetMiningRevenue() float64 {
	if x != nil {
		return x.MiningRevenue
	}
	return 0
}

func (x *MiningRequest) GetMxcPrice() float64 {
	if x != nil {
		return x.MxcPrice
	}
	return 0
}

func (x *MiningRequest) GetPeriodSeconds() int64 {
	if x != nil {
		return x.PeriodSeconds
	}
	return 0
}

type MiningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MiningResponse) Reset() {
	*x = MiningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_m2m_mining_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningResponse) ProtoMessage() {}

func (x *MiningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_m2m_mining_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningResponse.ProtoReflect.Descriptor instead.
func (*MiningResponse) Descriptor() ([]byte, []int) {
	return file_m2m_mining_proto_rawDescGZIP(), []int{1}
}

func (x *MiningResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type MiningStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayMac     string               `protobuf:"bytes,1,opt,name=gateway_mac,json=gatewayMac,proto3" json:"gateway_mac,omitempty"`
	OrganizationId int64                `protobuf:"varint,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	FromDate       *timestamp.Timestamp `protobuf:"bytes,3,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	TillDate       *timestamp.Timestamp `protobuf:"bytes,4,opt,name=till_date,json=tillDate,proto3" json:"till_date,omitempty"`
}

func (x *MiningStatsRequest) Reset() {
	*x = MiningStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_m2m_mining_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiningStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningStatsRequest) ProtoMessage() {}

func (x *MiningStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_m2m_mining_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningStatsRequest.ProtoReflect.Descriptor instead.
func (*MiningStatsRequest) Descriptor() ([]byte, []int) {
	return file_m2m_mining_proto_rawDescGZIP(), []int{2}
}

func (x *MiningStatsRequest) GetGatewayMac() string {
	if x != nil {
		return x.GatewayMac
	}
	return ""
}

func (x *MiningStatsRequest) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *MiningStatsRequest) GetFromDate() *timestamp.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *MiningStatsRequest) GetTillDate() *timestamp.Timestamp {
	if x != nil {
		return x.TillDate
	}
	return nil
}

// MiningStats contains mined amount for the particular date
type MiningStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Amount string               `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *MiningStats) Reset() {
	*x = MiningStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_m2m_mining_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiningStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningStats) ProtoMessage() {}

func (x *MiningStats) ProtoReflect() protoreflect.Message {
	mi := &file_m2m_mining_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningStats.ProtoReflect.Descriptor instead.
func (*MiningStats) Descriptor() ([]byte, []int) {
	return file_m2m_mining_proto_rawDescGZIP(), []int{3}
}

func (x *MiningStats) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *MiningStats) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type MiningStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DailyStats []*MiningStats `protobuf:"bytes,1,rep,name=daily_stats,json=dailyStats,proto3" json:"daily_stats,omitempty"`
	// total amount mined by this gateway
	Total string `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MiningStatsResponse) Reset() {
	*x = MiningStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_m2m_mining_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiningStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningStatsResponse) ProtoMessage() {}

func (x *MiningStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_m2m_mining_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningStatsResponse.ProtoReflect.Descriptor instead.
func (*MiningStatsResponse) Descriptor() ([]byte, []int) {
	return file_m2m_mining_proto_rawDescGZIP(), []int{4}
}

func (x *MiningStatsResponse) GetDailyStats() []*MiningStats {
	if x != nil {
		return x.DailyStats
	}
	return nil
}

func (x *MiningStatsResponse) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

var File_m2m_mining_proto protoreflect.FileDescriptor

var file_m2m_mining_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6d, 0x32, 0x6d, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x6d, 0x32, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x5f, 0x61,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x0d, 0x4d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x61, 0x63, 0x12, 0x25, 0x0a, 0x0e,
	0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x78, 0x63, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x78, 0x63, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xd0, 0x01, 0x0a, 0x12, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x61, 0x63, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x74,
	0x69, 0x6c, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x74, 0x69, 0x6c, 0x6c,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x55, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x13, 0x4d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x32, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xc8, 0x01, 0x0a,
	0x0d, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53,
	0x0a, 0x06, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x2e, 0x6d, 0x32, 0x6d, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x6d, 0x32, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x28, 0x2e, 0x6d, 0x32, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x5f,
	0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d,
	0x32, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x78, 0x63, 0x2d, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2d,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x32, 0x6d, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_m2m_mining_proto_rawDescOnce sync.Once
	file_m2m_mining_proto_rawDescData = file_m2m_mining_proto_rawDesc
)

func file_m2m_mining_proto_rawDescGZIP() []byte {
	file_m2m_mining_proto_rawDescOnce.Do(func() {
		file_m2m_mining_proto_rawDescData = protoimpl.X.CompressGZIP(file_m2m_mining_proto_rawDescData)
	})
	return file_m2m_mining_proto_rawDescData
}

var file_m2m_mining_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_m2m_mining_proto_goTypes = []interface{}{
	(*MiningRequest)(nil),       // 0: m2m_serves_appserver.MiningRequest
	(*MiningResponse)(nil),      // 1: m2m_serves_appserver.MiningResponse
	(*MiningStatsRequest)(nil),  // 2: m2m_serves_appserver.MiningStatsRequest
	(*MiningStats)(nil),         // 3: m2m_serves_appserver.MiningStats
	(*MiningStatsResponse)(nil), // 4: m2m_serves_appserver.MiningStatsResponse
	(*timestamp.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_m2m_mining_proto_depIdxs = []int32{
	5, // 0: m2m_serves_appserver.MiningStatsRequest.from_date:type_name -> google.protobuf.Timestamp
	5, // 1: m2m_serves_appserver.MiningStatsRequest.till_date:type_name -> google.protobuf.Timestamp
	5, // 2: m2m_serves_appserver.MiningStats.date:type_name -> google.protobuf.Timestamp
	3, // 3: m2m_serves_appserver.MiningStatsResponse.daily_stats:type_name -> m2m_serves_appserver.MiningStats
	0, // 4: m2m_serves_appserver.MiningService.Mining:input_type -> m2m_serves_appserver.MiningRequest
	2, // 5: m2m_serves_appserver.MiningService.MiningStats:input_type -> m2m_serves_appserver.MiningStatsRequest
	1, // 6: m2m_serves_appserver.MiningService.Mining:output_type -> m2m_serves_appserver.MiningResponse
	4, // 7: m2m_serves_appserver.MiningService.MiningStats:output_type -> m2m_serves_appserver.MiningStatsResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_m2m_mining_proto_init() }
func file_m2m_mining_proto_init() {
	if File_m2m_mining_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_m2m_mining_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_m2m_mining_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_m2m_mining_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiningStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_m2m_mining_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiningStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_m2m_mining_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiningStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_m2m_mining_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_m2m_mining_proto_goTypes,
		DependencyIndexes: file_m2m_mining_proto_depIdxs,
		MessageInfos:      file_m2m_mining_proto_msgTypes,
	}.Build()
	File_m2m_mining_proto = out.File
	file_m2m_mining_proto_rawDesc = nil
	file_m2m_mining_proto_goTypes = nil
	file_m2m_mining_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MiningServiceClient is the client API for MiningService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MiningServiceClient interface {
	// Pay mining income to owners of the gateways specified in the request
	Mining(ctx context.Context, in *MiningRequest, opts ...grpc.CallOption) (*MiningResponse, error)
	// Get info about how much money the gateway has mined
	MiningStats(ctx context.Context, in *MiningStatsRequest, opts ...grpc.CallOption) (*MiningStatsResponse, error)
}

type miningServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMiningServiceClient(cc grpc.ClientConnInterface) MiningServiceClient {
	return &miningServiceClient{cc}
}

func (c *miningServiceClient) Mining(ctx context.Context, in *MiningRequest, opts ...grpc.CallOption) (*MiningResponse, error) {
	out := new(MiningResponse)
	err := c.cc.Invoke(ctx, "/m2m_serves_appserver.MiningService/Mining", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *miningServiceClient) MiningStats(ctx context.Context, in *MiningStatsRequest, opts ...grpc.CallOption) (*MiningStatsResponse, error) {
	out := new(MiningStatsResponse)
	err := c.cc.Invoke(ctx, "/m2m_serves_appserver.MiningService/MiningStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MiningServiceServer is the server API for MiningService service.
type MiningServiceServer interface {
	// Pay mining income to owners of the gateways specified in the request
	Mining(context.Context, *MiningRequest) (*MiningResponse, error)
	// Get info about how much money the gateway has mined
	MiningStats(context.Context, *MiningStatsRequest) (*MiningStatsResponse, error)
}

// UnimplementedMiningServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMiningServiceServer struct {
}

func (*UnimplementedMiningServiceServer) Mining(context.Context, *MiningRequest) (*MiningResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mining not implemented")
}
func (*UnimplementedMiningServiceServer) MiningStats(context.Context, *MiningStatsRequest) (*MiningStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MiningStats not implemented")
}

func RegisterMiningServiceServer(s *grpc.Server, srv MiningServiceServer) {
	s.RegisterService(&_MiningService_serviceDesc, srv)
}

func _MiningService_Mining_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MiningRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MiningServiceServer).Mining(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_serves_appserver.MiningService/Mining",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MiningServiceServer).Mining(ctx, req.(*MiningRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MiningService_MiningStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MiningStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MiningServiceServer).MiningStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m2m_serves_appserver.MiningService/MiningStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MiningServiceServer).MiningStats(ctx, req.(*MiningStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MiningService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "m2m_serves_appserver.MiningService",
	HandlerType: (*MiningServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Mining",
			Handler:    _MiningService_Mining_Handler,
		},
		{
			MethodName: "MiningStats",
			Handler:    _MiningService_MiningStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "m2m_mining.proto",
}
