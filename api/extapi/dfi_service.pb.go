// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: dfi_service.proto

package extapi

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DFIAuthenticateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DFIAuthenticateUserRequest) Reset() {
	*x = DFIAuthenticateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfi_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFIAuthenticateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFIAuthenticateUserRequest) ProtoMessage() {}

func (x *DFIAuthenticateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfi_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFIAuthenticateUserRequest.ProtoReflect.Descriptor instead.
func (*DFIAuthenticateUserRequest) Descriptor() ([]byte, []int) {
	return file_dfi_service_proto_rawDescGZIP(), []int{0}
}

type DFIAuthenticateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// for displaying
	UserEmail      string `protobuf:"bytes,1,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	OrganizationId string `protobuf:"bytes,2,opt,name=organization_id,json=organizationID,proto3" json:"organization_id,omitempty"`
	// current mxc balance in user's dd wallet/supernode wallet
	MxcBalance string `protobuf:"bytes,3,opt,name=mxc_balance,json=mxcBalance,proto3" json:"mxc_balance,omitempty"`
}

func (x *DFIAuthenticateUserResponse) Reset() {
	*x = DFIAuthenticateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfi_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFIAuthenticateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFIAuthenticateUserResponse) ProtoMessage() {}

func (x *DFIAuthenticateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfi_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFIAuthenticateUserResponse.ProtoReflect.Descriptor instead.
func (*DFIAuthenticateUserResponse) Descriptor() ([]byte, []int) {
	return file_dfi_service_proto_rawDescGZIP(), []int{1}
}

func (x *DFIAuthenticateUserResponse) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *DFIAuthenticateUserResponse) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *DFIAuthenticateUserResponse) GetMxcBalance() string {
	if x != nil {
		return x.MxcBalance
	}
	return ""
}

type TopUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// returned after call of authenticate user request, represent user's DD wallet
	OrganizationId int64 `protobuf:"varint,1,opt,name=organization_id,json=organizationID,proto3" json:"organization_id,omitempty"`
	// the amount that user wants to top up margin wallet from DD wallet
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TopUpRequest) Reset() {
	*x = TopUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfi_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopUpRequest) ProtoMessage() {}

func (x *TopUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfi_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopUpRequest.ProtoReflect.Descriptor instead.
func (*TopUpRequest) Descriptor() ([]byte, []int) {
	return file_dfi_service_proto_rawDescGZIP(), []int{2}
}

func (x *TopUpRequest) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *TopUpRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type TopUpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TopUpResponse) Reset() {
	*x = TopUpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfi_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopUpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopUpResponse) ProtoMessage() {}

func (x *TopUpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfi_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopUpResponse.ProtoReflect.Descriptor instead.
func (*TopUpResponse) Descriptor() ([]byte, []int) {
	return file_dfi_service_proto_rawDescGZIP(), []int{3}
}

type WithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId int64  `protobuf:"varint,1,opt,name=organization_id,json=organizationID,proto3" json:"organization_id,omitempty"`
	Amount         string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	DfiPoolBalance string `protobuf:"bytes,3,opt,name=dfi_pool_balance,json=DFIPoolBalance,proto3" json:"dfi_pool_balance,omitempty"`
}

func (x *WithdrawRequest) Reset() {
	*x = WithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfi_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRequest) ProtoMessage() {}

func (x *WithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dfi_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRequest.ProtoReflect.Descriptor instead.
func (*WithdrawRequest) Descriptor() ([]byte, []int) {
	return file_dfi_service_proto_rawDescGZIP(), []int{4}
}

func (x *WithdrawRequest) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *WithdrawRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *WithdrawRequest) GetDfiPoolBalance() string {
	if x != nil {
		return x.DfiPoolBalance
	}
	return ""
}

type WithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *WithdrawResponse) Reset() {
	*x = WithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dfi_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawResponse) ProtoMessage() {}

func (x *WithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dfi_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawResponse.ProtoReflect.Descriptor instead.
func (*WithdrawResponse) Descriptor() ([]byte, []int) {
	return file_dfi_service_proto_rawDescGZIP(), []int{5}
}

func (x *WithdrawResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_dfi_service_proto protoreflect.FileDescriptor

var file_dfi_service_proto_rawDesc = []byte{
	0x0a, 0x11, 0x64, 0x66, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x78, 0x74, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x46, 0x49,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x1b, 0x44, 0x46, 0x49, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x78, 0x63, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x78, 0x63, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0x4f, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x7c, 0x0a, 0x0f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x66, 0x69, 0x5f, 0x70, 0x6f,
	0x6f, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x44, 0x46, 0x49, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0x24, 0x0a, 0x10, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xac, 0x02, 0x0a, 0x0a, 0x44, 0x46, 0x49, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x65, 0x78, 0x74, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x46, 0x49, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x65, 0x78, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x46, 0x49, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x66, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x4d, 0x0a, 0x05,
	0x54, 0x6f, 0x70, 0x55, 0x70, 0x12, 0x14, 0x2e, 0x65, 0x78, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x54,
	0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x65, 0x78,
	0x74, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x66, 0x69, 0x2f, 0x74, 0x6f, 0x70, 0x2d, 0x75, 0x70, 0x12, 0x58, 0x0a, 0x08, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x17, 0x2e, 0x65, 0x78, 0x74, 0x61, 0x70, 0x69,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x65, 0x78, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x66, 0x69, 0x2f, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x78, 0x63, 0x2d, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6c, 0x70, 0x77, 0x61, 0x6e, 0x2d, 0x61, 0x70, 0x70, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x78, 0x74, 0x61, 0x70, 0x69, 0x3b, 0x65,
	0x78, 0x74, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dfi_service_proto_rawDescOnce sync.Once
	file_dfi_service_proto_rawDescData = file_dfi_service_proto_rawDesc
)

func file_dfi_service_proto_rawDescGZIP() []byte {
	file_dfi_service_proto_rawDescOnce.Do(func() {
		file_dfi_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_dfi_service_proto_rawDescData)
	})
	return file_dfi_service_proto_rawDescData
}

var file_dfi_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_dfi_service_proto_goTypes = []interface{}{
	(*DFIAuthenticateUserRequest)(nil),  // 0: extapi.DFIAuthenticateUserRequest
	(*DFIAuthenticateUserResponse)(nil), // 1: extapi.DFIAuthenticateUserResponse
	(*TopUpRequest)(nil),                // 2: extapi.TopUpRequest
	(*TopUpResponse)(nil),               // 3: extapi.TopUpResponse
	(*WithdrawRequest)(nil),             // 4: extapi.WithdrawRequest
	(*WithdrawResponse)(nil),            // 5: extapi.WithdrawResponse
}
var file_dfi_service_proto_depIdxs = []int32{
	0, // 0: extapi.DFIService.AuthenticateUser:input_type -> extapi.DFIAuthenticateUserRequest
	2, // 1: extapi.DFIService.TopUp:input_type -> extapi.TopUpRequest
	4, // 2: extapi.DFIService.Withdraw:input_type -> extapi.WithdrawRequest
	1, // 3: extapi.DFIService.AuthenticateUser:output_type -> extapi.DFIAuthenticateUserResponse
	3, // 4: extapi.DFIService.TopUp:output_type -> extapi.TopUpResponse
	5, // 5: extapi.DFIService.Withdraw:output_type -> extapi.WithdrawResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_dfi_service_proto_init() }
func file_dfi_service_proto_init() {
	if File_dfi_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dfi_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFIAuthenticateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfi_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFIAuthenticateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfi_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfi_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopUpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfi_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dfi_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dfi_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dfi_service_proto_goTypes,
		DependencyIndexes: file_dfi_service_proto_depIdxs,
		MessageInfos:      file_dfi_service_proto_msgTypes,
	}.Build()
	File_dfi_service_proto = out.File
	file_dfi_service_proto_rawDesc = nil
	file_dfi_service_proto_goTypes = nil
	file_dfi_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DFIServiceClient is the client API for DFIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DFIServiceClient interface {
	// AuthenticateUser authenticates user with given jwt, return necessary user info for DFI service
	AuthenticateUser(ctx context.Context, in *DFIAuthenticateUserRequest, opts ...grpc.CallOption) (*DFIAuthenticateUserResponse, error)
	// TopUp allows user to top up DFI margin wallet from DD wallet/supernode wallet
	TopUp(ctx context.Context, in *TopUpRequest, opts ...grpc.CallOption) (*TopUpResponse, error)
	// Withdraw allows user to withdraw from DFI margin wallet to DD wallet/supernode wallet
	Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error)
}

type dFIServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDFIServiceClient(cc grpc.ClientConnInterface) DFIServiceClient {
	return &dFIServiceClient{cc}
}

func (c *dFIServiceClient) AuthenticateUser(ctx context.Context, in *DFIAuthenticateUserRequest, opts ...grpc.CallOption) (*DFIAuthenticateUserResponse, error) {
	out := new(DFIAuthenticateUserResponse)
	err := c.cc.Invoke(ctx, "/extapi.DFIService/AuthenticateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dFIServiceClient) TopUp(ctx context.Context, in *TopUpRequest, opts ...grpc.CallOption) (*TopUpResponse, error) {
	out := new(TopUpResponse)
	err := c.cc.Invoke(ctx, "/extapi.DFIService/TopUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dFIServiceClient) Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error) {
	out := new(WithdrawResponse)
	err := c.cc.Invoke(ctx, "/extapi.DFIService/Withdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DFIServiceServer is the server API for DFIService service.
type DFIServiceServer interface {
	// AuthenticateUser authenticates user with given jwt, return necessary user info for DFI service
	AuthenticateUser(context.Context, *DFIAuthenticateUserRequest) (*DFIAuthenticateUserResponse, error)
	// TopUp allows user to top up DFI margin wallet from DD wallet/supernode wallet
	TopUp(context.Context, *TopUpRequest) (*TopUpResponse, error)
	// Withdraw allows user to withdraw from DFI margin wallet to DD wallet/supernode wallet
	Withdraw(context.Context, *WithdrawRequest) (*WithdrawResponse, error)
}

// UnimplementedDFIServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDFIServiceServer struct {
}

func (*UnimplementedDFIServiceServer) AuthenticateUser(context.Context, *DFIAuthenticateUserRequest) (*DFIAuthenticateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthenticateUser not implemented")
}
func (*UnimplementedDFIServiceServer) TopUp(context.Context, *TopUpRequest) (*TopUpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TopUp not implemented")
}
func (*UnimplementedDFIServiceServer) Withdraw(context.Context, *WithdrawRequest) (*WithdrawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Withdraw not implemented")
}

func RegisterDFIServiceServer(s *grpc.Server, srv DFIServiceServer) {
	s.RegisterService(&_DFIService_serviceDesc, srv)
}

func _DFIService_AuthenticateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DFIAuthenticateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DFIServiceServer).AuthenticateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/extapi.DFIService/AuthenticateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DFIServiceServer).AuthenticateUser(ctx, req.(*DFIAuthenticateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DFIService_TopUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DFIServiceServer).TopUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/extapi.DFIService/TopUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DFIServiceServer).TopUp(ctx, req.(*TopUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DFIService_Withdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DFIServiceServer).Withdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/extapi.DFIService/Withdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DFIServiceServer).Withdraw(ctx, req.(*WithdrawRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DFIService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "extapi.DFIService",
	HandlerType: (*DFIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthenticateUser",
			Handler:    _DFIService_AuthenticateUser_Handler,
		},
		{
			MethodName: "TopUp",
			Handler:    _DFIService_TopUp_Handler,
		},
		{
			MethodName: "Withdraw",
			Handler:    _DFIService_Withdraw_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dfi_service.proto",
}
