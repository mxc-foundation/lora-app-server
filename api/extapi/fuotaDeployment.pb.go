// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: fuotaDeployment.proto

package extapi

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FUOTADeploymentDeviceState int32

const (
	// Pending.
	FUOTADeploymentDeviceState_PENDING FUOTADeploymentDeviceState = 0
	// Success.
	FUOTADeploymentDeviceState_SUCCESS FUOTADeploymentDeviceState = 1
	// Error.
	FUOTADeploymentDeviceState_ERROR FUOTADeploymentDeviceState = 2
)

// Enum value maps for FUOTADeploymentDeviceState.
var (
	FUOTADeploymentDeviceState_name = map[int32]string{
		0: "PENDING",
		1: "SUCCESS",
		2: "ERROR",
	}
	FUOTADeploymentDeviceState_value = map[string]int32{
		"PENDING": 0,
		"SUCCESS": 1,
		"ERROR":   2,
	}
)

func (x FUOTADeploymentDeviceState) Enum() *FUOTADeploymentDeviceState {
	p := new(FUOTADeploymentDeviceState)
	*p = x
	return p
}

func (x FUOTADeploymentDeviceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FUOTADeploymentDeviceState) Descriptor() protoreflect.EnumDescriptor {
	return file_fuotaDeployment_proto_enumTypes[0].Descriptor()
}

func (FUOTADeploymentDeviceState) Type() protoreflect.EnumType {
	return &file_fuotaDeployment_proto_enumTypes[0]
}

func (x FUOTADeploymentDeviceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FUOTADeploymentDeviceState.Descriptor instead.
func (FUOTADeploymentDeviceState) EnumDescriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{0}
}

type FUOTADeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the deployment (string formatted UUID).
	// This value will be automatically assigned on create.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the deployment.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Multicast type.
	// Currently only Class-C is supported!
	GroupType MulticastGroupType `protobuf:"varint,3,opt,name=group_type,json=groupType,proto3,enum=restful.MulticastGroupType" json:"group_type,omitempty"`
	// Data-rate.
	Dr uint32 `protobuf:"varint,4,opt,name=dr,proto3" json:"dr,omitempty"`
	// Frequency (Hz).
	Frequency uint32 `protobuf:"varint,5,opt,name=frequency,proto3" json:"frequency,omitempty"`
	// Payload.
	Payload []byte `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty"`
	// Redundancy (number of packages).
	Redundancy uint32 `protobuf:"varint,7,opt,name=redundancy,proto3" json:"redundancy,omitempty"`
	// Multicast time-out.
	// Please refer to the Remote Multicast Setup specification as this field
	// has a different meaning for Class-B and Class-C groups.
	MulticastTimeout uint32 `protobuf:"varint,8,opt,name=multicast_timeout,json=multicastTimeout,proto3" json:"multicast_timeout,omitempty"`
	// Unicast time-out.
	// Set this to the value in which you at least expect an uplink frame from the
	// device. The FUOTA deployment engine will wait at least for the given time
	// before proceeding with the next steps.
	UnicastTimeout *duration.Duration `protobuf:"bytes,9,opt,name=unicast_timeout,json=unicastTimeout,proto3" json:"unicast_timeout,omitempty"`
	// Deployment state.
	// This value will be automatically set on create.
	State string `protobuf:"bytes,10,opt,name=state,proto3" json:"state,omitempty"`
	// Next step after.
	// This value will be automatically set on create.
	NextStepAfter *timestamp.Timestamp `protobuf:"bytes,11,opt,name=next_step_after,json=nextStepAfter,proto3" json:"next_step_after,omitempty"`
}

func (x *FUOTADeployment) Reset() {
	*x = FUOTADeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuotaDeployment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FUOTADeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FUOTADeployment) ProtoMessage() {}

func (x *FUOTADeployment) ProtoReflect() protoreflect.Message {
	mi := &file_fuotaDeployment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FUOTADeployment.ProtoReflect.Descriptor instead.
func (*FUOTADeployment) Descriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{0}
}

func (x *FUOTADeployment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FUOTADeployment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FUOTADeployment) GetGroupType() MulticastGroupType {
	if x != nil {
		return x.GroupType
	}
	return MulticastGroupType_CLASS_C
}

func (x *FUOTADeployment) GetDr() uint32 {
	if x != nil {
		return x.Dr
	}
	return 0
}

func (x *FUOTADeployment) GetFrequency() uint32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *FUOTADeployment) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *FUOTADeployment) GetRedundancy() uint32 {
	if x != nil {
		return x.Redundancy
	}
	return 0
}

func (x *FUOTADeployment) GetMulticastTimeout() uint32 {
	if x != nil {
		return x.MulticastTimeout
	}
	return 0
}

func (x *FUOTADeployment) GetUnicastTimeout() *duration.Duration {
	if x != nil {
		return x.UnicastTimeout
	}
	return nil
}

func (x *FUOTADeployment) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *FUOTADeployment) GetNextStepAfter() *timestamp.Timestamp {
	if x != nil {
		return x.NextStepAfter
	}
	return nil
}

type FUOTADeploymentListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the deployment (string formatted UUID).
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Name of the deployment.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Deployment state.
	State string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	// Next step after.
	NextStepAfter *timestamp.Timestamp `protobuf:"bytes,6,opt,name=next_step_after,json=nextStepAfter,proto3" json:"next_step_after,omitempty"`
}

func (x *FUOTADeploymentListItem) Reset() {
	*x = FUOTADeploymentListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuotaDeployment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FUOTADeploymentListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FUOTADeploymentListItem) ProtoMessage() {}

func (x *FUOTADeploymentListItem) ProtoReflect() protoreflect.Message {
	mi := &file_fuotaDeployment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FUOTADeploymentListItem.ProtoReflect.Descriptor instead.
func (*FUOTADeploymentListItem) Descriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{1}
}

func (x *FUOTADeploymentListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FUOTADeploymentListItem) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FUOTADeploymentListItem) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *FUOTADeploymentListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FUOTADeploymentListItem) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *FUOTADeploymentListItem) GetNextStepAfter() *timestamp.Timestamp {
	if x != nil {
		return x.NextStepAfter
	}
	return nil
}

type CreateFUOTADeploymentForDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// FUOTA deployment.
	FuotaDeployment *FUOTADeployment `protobuf:"bytes,2,opt,name=fuota_deployment,json=fuotaDeployment,proto3" json:"fuota_deployment,omitempty"`
}

func (x *CreateFUOTADeploymentForDeviceRequest) Reset() {
	*x = CreateFUOTADeploymentForDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuotaDeployment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFUOTADeploymentForDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFUOTADeploymentForDeviceRequest) ProtoMessage() {}

func (x *CreateFUOTADeploymentForDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fuotaDeployment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFUOTADeploymentForDeviceRequest.ProtoReflect.Descriptor instead.
func (*CreateFUOTADeploymentForDeviceRequest) Descriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{2}
}

func (x *CreateFUOTADeploymentForDeviceRequest) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *CreateFUOTADeploymentForDeviceRequest) GetFuotaDeployment() *FUOTADeployment {
	if x != nil {
		return x.FuotaDeployment
	}
	return nil
}

type CreateFUOTADeploymentForDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the created deployment (string formatted UUID).
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateFUOTADeploymentForDeviceResponse) Reset() {
	*x = CreateFUOTADeploymentForDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuotaDeployment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFUOTADeploymentForDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFUOTADeploymentForDeviceResponse) ProtoMessage() {}

func (x *CreateFUOTADeploymentForDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fuotaDeployment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFUOTADeploymentForDeviceResponse.ProtoReflect.Descriptor instead.
func (*CreateFUOTADeploymentForDeviceResponse) Descriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{3}
}

func (x *CreateFUOTADeploymentForDeviceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetFUOTADeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the deployment (string formatted UUID).
	// This value will be automatically assigned on create.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetFUOTADeploymentRequest) Reset() {
	*x = GetFUOTADeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuotaDeployment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFUOTADeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFUOTADeploymentRequest) ProtoMessage() {}

func (x *GetFUOTADeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fuotaDeployment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFUOTADeploymentRequest.ProtoReflect.Descriptor instead.
func (*GetFUOTADeploymentRequest) Descriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{4}
}

func (x *GetFUOTADeploymentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetFUOTADeploymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FuotaDeployment *FUOTADeployment `protobuf:"bytes,1,opt,name=fuota_deployment,json=fuotaDeployment,proto3" json:"fuota_deployment,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GetFUOTADeploymentResponse) Reset() {
	*x = GetFUOTADeploymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuotaDeployment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFUOTADeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFUOTADeploymentResponse) ProtoMessage() {}

func (x *GetFUOTADeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fuotaDeployment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFUOTADeploymentResponse.ProtoReflect.Descriptor instead.
func (*GetFUOTADeploymentResponse) Descriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{5}
}

func (x *GetFUOTADeploymentResponse) GetFuotaDeployment() *FUOTADeployment {
	if x != nil {
		return x.FuotaDeployment
	}
	return nil
}

func (x *GetFUOTADeploymentResponse) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetFUOTADeploymentResponse) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ListFUOTADeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Max number of deployments to return in the result-set.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Application ID to filter on (optional).
	ApplicationId int64 `protobuf:"varint,3,opt,name=application_id,json=applicationID,proto3" json:"application_id,omitempty"`
	// Device EUI (HEX encoded) (optional).
	DevEui string `protobuf:"bytes,4,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
}

func (x *ListFUOTADeploymentRequest) Reset() {
	*x = ListFUOTADeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuotaDeployment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFUOTADeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFUOTADeploymentRequest) ProtoMessage() {}

func (x *ListFUOTADeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fuotaDeployment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFUOTADeploymentRequest.ProtoReflect.Descriptor instead.
func (*ListFUOTADeploymentRequest) Descriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{6}
}

func (x *ListFUOTADeploymentRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListFUOTADeploymentRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListFUOTADeploymentRequest) GetApplicationId() int64 {
	if x != nil {
		return x.ApplicationId
	}
	return 0
}

func (x *ListFUOTADeploymentRequest) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

type ListFUOTADeploymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total number of deployments available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Deployments within this result-set.
	Result []*FUOTADeploymentListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListFUOTADeploymentResponse) Reset() {
	*x = ListFUOTADeploymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuotaDeployment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFUOTADeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFUOTADeploymentResponse) ProtoMessage() {}

func (x *ListFUOTADeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fuotaDeployment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFUOTADeploymentResponse.ProtoReflect.Descriptor instead.
func (*ListFUOTADeploymentResponse) Descriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{7}
}

func (x *ListFUOTADeploymentResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListFUOTADeploymentResponse) GetResult() []*FUOTADeploymentListItem {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListFUOTADeploymentDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the deployment (string formatted UUID).
	// This value will be automatically assigned on create.
	FuotaDeploymentId string `protobuf:"bytes,1,opt,name=fuota_deployment_id,json=fuotaDeploymentID,proto3" json:"fuota_deployment_id,omitempty"`
	// Max number of items to return.
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListFUOTADeploymentDevicesRequest) Reset() {
	*x = ListFUOTADeploymentDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuotaDeployment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFUOTADeploymentDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFUOTADeploymentDevicesRequest) ProtoMessage() {}

func (x *ListFUOTADeploymentDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fuotaDeployment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFUOTADeploymentDevicesRequest.ProtoReflect.Descriptor instead.
func (*ListFUOTADeploymentDevicesRequest) Descriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{8}
}

func (x *ListFUOTADeploymentDevicesRequest) GetFuotaDeploymentId() string {
	if x != nil {
		return x.FuotaDeploymentId
	}
	return ""
}

func (x *ListFUOTADeploymentDevicesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListFUOTADeploymentDevicesRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetFUOTADeploymentDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the deployment (string formatted UUID).
	// This value will be automatically assigned on create.
	FuotaDeploymentId string `protobuf:"bytes,1,opt,name=fuota_deployment_id,json=fuotaDeploymentID,proto3" json:"fuota_deployment_id,omitempty"`
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,2,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
}

func (x *GetFUOTADeploymentDeviceRequest) Reset() {
	*x = GetFUOTADeploymentDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuotaDeployment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFUOTADeploymentDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFUOTADeploymentDeviceRequest) ProtoMessage() {}

func (x *GetFUOTADeploymentDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fuotaDeployment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFUOTADeploymentDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetFUOTADeploymentDeviceRequest) Descriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{9}
}

func (x *GetFUOTADeploymentDeviceRequest) GetFuotaDeploymentId() string {
	if x != nil {
		return x.FuotaDeploymentId
	}
	return ""
}

func (x *GetFUOTADeploymentDeviceRequest) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

type GetFUOTADeploymentDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentDevice *FUOTADeploymentDeviceListItem `protobuf:"bytes,1,opt,name=deployment_device,json=deploymentDevice,proto3" json:"deployment_device,omitempty"`
}

func (x *GetFUOTADeploymentDeviceResponse) Reset() {
	*x = GetFUOTADeploymentDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuotaDeployment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFUOTADeploymentDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFUOTADeploymentDeviceResponse) ProtoMessage() {}

func (x *GetFUOTADeploymentDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fuotaDeployment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFUOTADeploymentDeviceResponse.ProtoReflect.Descriptor instead.
func (*GetFUOTADeploymentDeviceResponse) Descriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{10}
}

func (x *GetFUOTADeploymentDeviceResponse) GetDeploymentDevice() *FUOTADeploymentDeviceListItem {
	if x != nil {
		return x.DeploymentDevice
	}
	return nil
}

type ListFUOTADeploymentDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total number of devices for the FUOTA deployment.
	TotalCount int64                            `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Result     []*FUOTADeploymentDeviceListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListFUOTADeploymentDevicesResponse) Reset() {
	*x = ListFUOTADeploymentDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuotaDeployment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFUOTADeploymentDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFUOTADeploymentDevicesResponse) ProtoMessage() {}

func (x *ListFUOTADeploymentDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fuotaDeployment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFUOTADeploymentDevicesResponse.ProtoReflect.Descriptor instead.
func (*ListFUOTADeploymentDevicesResponse) Descriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{11}
}

func (x *ListFUOTADeploymentDevicesResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListFUOTADeploymentDevicesResponse) GetResult() []*FUOTADeploymentDeviceListItem {
	if x != nil {
		return x.Result
	}
	return nil
}

type FUOTADeploymentDeviceListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Device name.
	DeviceName string `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// Device state.
	State FUOTADeploymentDeviceState `protobuf:"varint,3,opt,name=state,proto3,enum=restful.FUOTADeploymentDeviceState" json:"state,omitempty"`
	// Error message (in case of error state).
	ErrorMessage string `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Updated at timestamp.
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *FUOTADeploymentDeviceListItem) Reset() {
	*x = FUOTADeploymentDeviceListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuotaDeployment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FUOTADeploymentDeviceListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FUOTADeploymentDeviceListItem) ProtoMessage() {}

func (x *FUOTADeploymentDeviceListItem) ProtoReflect() protoreflect.Message {
	mi := &file_fuotaDeployment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FUOTADeploymentDeviceListItem.ProtoReflect.Descriptor instead.
func (*FUOTADeploymentDeviceListItem) Descriptor() ([]byte, []int) {
	return file_fuotaDeployment_proto_rawDescGZIP(), []int{12}
}

func (x *FUOTADeploymentDeviceListItem) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *FUOTADeploymentDeviceListItem) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *FUOTADeploymentDeviceListItem) GetState() FUOTADeploymentDeviceState {
	if x != nil {
		return x.State
	}
	return FUOTADeploymentDeviceState_PENDING
}

func (x *FUOTADeploymentDeviceListItem) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *FUOTADeploymentDeviceListItem) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FUOTADeploymentDeviceListItem) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_fuotaDeployment_proto protoreflect.FileDescriptor

var file_fuotaDeployment_proto_rawDesc = []byte{
	0x0a, 0x15, 0x66, 0x75, 0x6f, 0x74, 0x61, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x03, 0x0a, 0x0f, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x63, 0x61, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x64, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x6e, 0x64, 0x61, 0x6e, 0x63,
	0x79, 0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x42,
	0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x53, 0x74, 0x65, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0x8d, 0x02, 0x0a,
	0x17, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x53, 0x74, 0x65, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0x85, 0x01, 0x0a,
	0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x55, 0x49, 0x12,
	0x43, 0x0a, 0x10, 0x66, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x66, 0x75, 0x6c, 0x2e, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0f, 0x66, 0x75, 0x6f, 0x74, 0x61, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x38, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x55,
	0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x66, 0x75,
	0x6f, 0x74, 0x61, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2e, 0x46,
	0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f,
	0x66, 0x75, 0x6f, 0x74, 0x61, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x55,
	0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x76,
	0x5f, 0x65, 0x75, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45,
	0x55, 0x49, 0x22, 0x78, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2e, 0x46, 0x55, 0x4f,
	0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x81, 0x01, 0x0a,
	0x21, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x66, 0x75, 0x6f, 0x74, 0x61, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0x6a, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x66, 0x75, 0x6f, 0x74, 0x61, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x55, 0x49, 0x22, 0x77, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x53, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x66, 0x75, 0x6c, 0x2e, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x55,
	0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2e, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xaf, 0x02,
	0x0a, 0x1d, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x55, 0x49, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x66,
	0x75, 0x6c, 0x2e, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a,
	0x41, 0x0a, 0x1a, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x02, 0x32, 0x90, 0x06, 0x0a, 0x16, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa7, 0x01,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x2e, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x22, 0x28, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75,
	0x69, 0x7d, 0x2f, 0x66, 0x75, 0x6f, 0x74, 0x61, 0x2d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x22,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x55, 0x4f, 0x54,
	0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12,
	0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x75, 0x6f, 0x74, 0x61, 0x2d, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x71, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x66, 0x75, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x75,
	0x6f, 0x74, 0x61, 0x2d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0xb2, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75,
	0x6c, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x55, 0x4f, 0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x40, 0x12, 0x3e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x75, 0x6f, 0x74, 0x61,
	0x2d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x66, 0x75,
	0x6f, 0x74, 0x61, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x64, 0x65, 0x76, 0x5f,
	0x65, 0x75, 0x69, 0x7d, 0x12, 0xae, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2a,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x55, 0x4f,
	0x54, 0x41, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x66, 0x75, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x55, 0x4f, 0x54, 0x41, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x12,
	0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x75, 0x6f, 0x74, 0x61, 0x2d, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x66, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x78, 0x63, 0x2d, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6c, 0x70, 0x77, 0x61, 0x6e, 0x2d, 0x61, 0x70, 0x70, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x78, 0x74, 0x61, 0x70, 0x69, 0x3b, 0x65,
	0x78, 0x74, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fuotaDeployment_proto_rawDescOnce sync.Once
	file_fuotaDeployment_proto_rawDescData = file_fuotaDeployment_proto_rawDesc
)

func file_fuotaDeployment_proto_rawDescGZIP() []byte {
	file_fuotaDeployment_proto_rawDescOnce.Do(func() {
		file_fuotaDeployment_proto_rawDescData = protoimpl.X.CompressGZIP(file_fuotaDeployment_proto_rawDescData)
	})
	return file_fuotaDeployment_proto_rawDescData
}

var file_fuotaDeployment_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fuotaDeployment_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_fuotaDeployment_proto_goTypes = []interface{}{
	(FUOTADeploymentDeviceState)(0),                // 0: restful.FUOTADeploymentDeviceState
	(*FUOTADeployment)(nil),                        // 1: restful.FUOTADeployment
	(*FUOTADeploymentListItem)(nil),                // 2: restful.FUOTADeploymentListItem
	(*CreateFUOTADeploymentForDeviceRequest)(nil),  // 3: restful.CreateFUOTADeploymentForDeviceRequest
	(*CreateFUOTADeploymentForDeviceResponse)(nil), // 4: restful.CreateFUOTADeploymentForDeviceResponse
	(*GetFUOTADeploymentRequest)(nil),              // 5: restful.GetFUOTADeploymentRequest
	(*GetFUOTADeploymentResponse)(nil),             // 6: restful.GetFUOTADeploymentResponse
	(*ListFUOTADeploymentRequest)(nil),             // 7: restful.ListFUOTADeploymentRequest
	(*ListFUOTADeploymentResponse)(nil),            // 8: restful.ListFUOTADeploymentResponse
	(*ListFUOTADeploymentDevicesRequest)(nil),      // 9: restful.ListFUOTADeploymentDevicesRequest
	(*GetFUOTADeploymentDeviceRequest)(nil),        // 10: restful.GetFUOTADeploymentDeviceRequest
	(*GetFUOTADeploymentDeviceResponse)(nil),       // 11: restful.GetFUOTADeploymentDeviceResponse
	(*ListFUOTADeploymentDevicesResponse)(nil),     // 12: restful.ListFUOTADeploymentDevicesResponse
	(*FUOTADeploymentDeviceListItem)(nil),          // 13: restful.FUOTADeploymentDeviceListItem
	(MulticastGroupType)(0),                        // 14: restful.MulticastGroupType
	(*duration.Duration)(nil),                      // 15: google.protobuf.Duration
	(*timestamp.Timestamp)(nil),                    // 16: google.protobuf.Timestamp
}
var file_fuotaDeployment_proto_depIdxs = []int32{
	14, // 0: restful.FUOTADeployment.group_type:type_name -> restful.MulticastGroupType
	15, // 1: restful.FUOTADeployment.unicast_timeout:type_name -> google.protobuf.Duration
	16, // 2: restful.FUOTADeployment.next_step_after:type_name -> google.protobuf.Timestamp
	16, // 3: restful.FUOTADeploymentListItem.created_at:type_name -> google.protobuf.Timestamp
	16, // 4: restful.FUOTADeploymentListItem.updated_at:type_name -> google.protobuf.Timestamp
	16, // 5: restful.FUOTADeploymentListItem.next_step_after:type_name -> google.protobuf.Timestamp
	1,  // 6: restful.CreateFUOTADeploymentForDeviceRequest.fuota_deployment:type_name -> restful.FUOTADeployment
	1,  // 7: restful.GetFUOTADeploymentResponse.fuota_deployment:type_name -> restful.FUOTADeployment
	16, // 8: restful.GetFUOTADeploymentResponse.created_at:type_name -> google.protobuf.Timestamp
	16, // 9: restful.GetFUOTADeploymentResponse.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 10: restful.ListFUOTADeploymentResponse.result:type_name -> restful.FUOTADeploymentListItem
	13, // 11: restful.GetFUOTADeploymentDeviceResponse.deployment_device:type_name -> restful.FUOTADeploymentDeviceListItem
	13, // 12: restful.ListFUOTADeploymentDevicesResponse.result:type_name -> restful.FUOTADeploymentDeviceListItem
	0,  // 13: restful.FUOTADeploymentDeviceListItem.state:type_name -> restful.FUOTADeploymentDeviceState
	16, // 14: restful.FUOTADeploymentDeviceListItem.created_at:type_name -> google.protobuf.Timestamp
	16, // 15: restful.FUOTADeploymentDeviceListItem.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 16: restful.FUOTADeploymentService.CreateForDevice:input_type -> restful.CreateFUOTADeploymentForDeviceRequest
	5,  // 17: restful.FUOTADeploymentService.Get:input_type -> restful.GetFUOTADeploymentRequest
	7,  // 18: restful.FUOTADeploymentService.List:input_type -> restful.ListFUOTADeploymentRequest
	10, // 19: restful.FUOTADeploymentService.GetDeploymentDevice:input_type -> restful.GetFUOTADeploymentDeviceRequest
	9,  // 20: restful.FUOTADeploymentService.ListDeploymentDevices:input_type -> restful.ListFUOTADeploymentDevicesRequest
	4,  // 21: restful.FUOTADeploymentService.CreateForDevice:output_type -> restful.CreateFUOTADeploymentForDeviceResponse
	6,  // 22: restful.FUOTADeploymentService.Get:output_type -> restful.GetFUOTADeploymentResponse
	8,  // 23: restful.FUOTADeploymentService.List:output_type -> restful.ListFUOTADeploymentResponse
	11, // 24: restful.FUOTADeploymentService.GetDeploymentDevice:output_type -> restful.GetFUOTADeploymentDeviceResponse
	12, // 25: restful.FUOTADeploymentService.ListDeploymentDevices:output_type -> restful.ListFUOTADeploymentDevicesResponse
	21, // [21:26] is the sub-list for method output_type
	16, // [16:21] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_fuotaDeployment_proto_init() }
func file_fuotaDeployment_proto_init() {
	if File_fuotaDeployment_proto != nil {
		return
	}
	file_multicastGroup_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_fuotaDeployment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FUOTADeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuotaDeployment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FUOTADeploymentListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuotaDeployment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFUOTADeploymentForDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuotaDeployment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFUOTADeploymentForDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuotaDeployment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFUOTADeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuotaDeployment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFUOTADeploymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuotaDeployment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFUOTADeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuotaDeployment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFUOTADeploymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuotaDeployment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFUOTADeploymentDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuotaDeployment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFUOTADeploymentDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuotaDeployment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFUOTADeploymentDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuotaDeployment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFUOTADeploymentDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuotaDeployment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FUOTADeploymentDeviceListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fuotaDeployment_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fuotaDeployment_proto_goTypes,
		DependencyIndexes: file_fuotaDeployment_proto_depIdxs,
		EnumInfos:         file_fuotaDeployment_proto_enumTypes,
		MessageInfos:      file_fuotaDeployment_proto_msgTypes,
	}.Build()
	File_fuotaDeployment_proto = out.File
	file_fuotaDeployment_proto_rawDesc = nil
	file_fuotaDeployment_proto_goTypes = nil
	file_fuotaDeployment_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FUOTADeploymentServiceClient is the client API for FUOTADeploymentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FUOTADeploymentServiceClient interface {
	// CreateForDevice creates a deployment for the given DevEUI.
	CreateForDevice(ctx context.Context, in *CreateFUOTADeploymentForDeviceRequest, opts ...grpc.CallOption) (*CreateFUOTADeploymentForDeviceResponse, error)
	// Get returns the fuota deployment for the given id.
	Get(ctx context.Context, in *GetFUOTADeploymentRequest, opts ...grpc.CallOption) (*GetFUOTADeploymentResponse, error)
	// List lists the fuota deployments.
	List(ctx context.Context, in *ListFUOTADeploymentRequest, opts ...grpc.CallOption) (*ListFUOTADeploymentResponse, error)
	// GetDeploymentDevice returns the deployment device.
	GetDeploymentDevice(ctx context.Context, in *GetFUOTADeploymentDeviceRequest, opts ...grpc.CallOption) (*GetFUOTADeploymentDeviceResponse, error)
	// ListDeploymentDevices lists the devices (and status) for the given fuota deployment ID.
	ListDeploymentDevices(ctx context.Context, in *ListFUOTADeploymentDevicesRequest, opts ...grpc.CallOption) (*ListFUOTADeploymentDevicesResponse, error)
}

type fUOTADeploymentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFUOTADeploymentServiceClient(cc grpc.ClientConnInterface) FUOTADeploymentServiceClient {
	return &fUOTADeploymentServiceClient{cc}
}

func (c *fUOTADeploymentServiceClient) CreateForDevice(ctx context.Context, in *CreateFUOTADeploymentForDeviceRequest, opts ...grpc.CallOption) (*CreateFUOTADeploymentForDeviceResponse, error) {
	out := new(CreateFUOTADeploymentForDeviceResponse)
	err := c.cc.Invoke(ctx, "/restful.FUOTADeploymentService/CreateForDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fUOTADeploymentServiceClient) Get(ctx context.Context, in *GetFUOTADeploymentRequest, opts ...grpc.CallOption) (*GetFUOTADeploymentResponse, error) {
	out := new(GetFUOTADeploymentResponse)
	err := c.cc.Invoke(ctx, "/restful.FUOTADeploymentService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fUOTADeploymentServiceClient) List(ctx context.Context, in *ListFUOTADeploymentRequest, opts ...grpc.CallOption) (*ListFUOTADeploymentResponse, error) {
	out := new(ListFUOTADeploymentResponse)
	err := c.cc.Invoke(ctx, "/restful.FUOTADeploymentService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fUOTADeploymentServiceClient) GetDeploymentDevice(ctx context.Context, in *GetFUOTADeploymentDeviceRequest, opts ...grpc.CallOption) (*GetFUOTADeploymentDeviceResponse, error) {
	out := new(GetFUOTADeploymentDeviceResponse)
	err := c.cc.Invoke(ctx, "/restful.FUOTADeploymentService/GetDeploymentDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fUOTADeploymentServiceClient) ListDeploymentDevices(ctx context.Context, in *ListFUOTADeploymentDevicesRequest, opts ...grpc.CallOption) (*ListFUOTADeploymentDevicesResponse, error) {
	out := new(ListFUOTADeploymentDevicesResponse)
	err := c.cc.Invoke(ctx, "/restful.FUOTADeploymentService/ListDeploymentDevices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FUOTADeploymentServiceServer is the server API for FUOTADeploymentService service.
type FUOTADeploymentServiceServer interface {
	// CreateForDevice creates a deployment for the given DevEUI.
	CreateForDevice(context.Context, *CreateFUOTADeploymentForDeviceRequest) (*CreateFUOTADeploymentForDeviceResponse, error)
	// Get returns the fuota deployment for the given id.
	Get(context.Context, *GetFUOTADeploymentRequest) (*GetFUOTADeploymentResponse, error)
	// List lists the fuota deployments.
	List(context.Context, *ListFUOTADeploymentRequest) (*ListFUOTADeploymentResponse, error)
	// GetDeploymentDevice returns the deployment device.
	GetDeploymentDevice(context.Context, *GetFUOTADeploymentDeviceRequest) (*GetFUOTADeploymentDeviceResponse, error)
	// ListDeploymentDevices lists the devices (and status) for the given fuota deployment ID.
	ListDeploymentDevices(context.Context, *ListFUOTADeploymentDevicesRequest) (*ListFUOTADeploymentDevicesResponse, error)
}

// UnimplementedFUOTADeploymentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFUOTADeploymentServiceServer struct {
}

func (*UnimplementedFUOTADeploymentServiceServer) CreateForDevice(context.Context, *CreateFUOTADeploymentForDeviceRequest) (*CreateFUOTADeploymentForDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateForDevice not implemented")
}
func (*UnimplementedFUOTADeploymentServiceServer) Get(context.Context, *GetFUOTADeploymentRequest) (*GetFUOTADeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedFUOTADeploymentServiceServer) List(context.Context, *ListFUOTADeploymentRequest) (*ListFUOTADeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedFUOTADeploymentServiceServer) GetDeploymentDevice(context.Context, *GetFUOTADeploymentDeviceRequest) (*GetFUOTADeploymentDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeploymentDevice not implemented")
}
func (*UnimplementedFUOTADeploymentServiceServer) ListDeploymentDevices(context.Context, *ListFUOTADeploymentDevicesRequest) (*ListFUOTADeploymentDevicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDeploymentDevices not implemented")
}

func RegisterFUOTADeploymentServiceServer(s *grpc.Server, srv FUOTADeploymentServiceServer) {
	s.RegisterService(&_FUOTADeploymentService_serviceDesc, srv)
}

func _FUOTADeploymentService_CreateForDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFUOTADeploymentForDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FUOTADeploymentServiceServer).CreateForDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restful.FUOTADeploymentService/CreateForDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FUOTADeploymentServiceServer).CreateForDevice(ctx, req.(*CreateFUOTADeploymentForDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FUOTADeploymentService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFUOTADeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FUOTADeploymentServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restful.FUOTADeploymentService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FUOTADeploymentServiceServer).Get(ctx, req.(*GetFUOTADeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FUOTADeploymentService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFUOTADeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FUOTADeploymentServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restful.FUOTADeploymentService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FUOTADeploymentServiceServer).List(ctx, req.(*ListFUOTADeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FUOTADeploymentService_GetDeploymentDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFUOTADeploymentDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FUOTADeploymentServiceServer).GetDeploymentDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restful.FUOTADeploymentService/GetDeploymentDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FUOTADeploymentServiceServer).GetDeploymentDevice(ctx, req.(*GetFUOTADeploymentDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FUOTADeploymentService_ListDeploymentDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFUOTADeploymentDevicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FUOTADeploymentServiceServer).ListDeploymentDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restful.FUOTADeploymentService/ListDeploymentDevices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FUOTADeploymentServiceServer).ListDeploymentDevices(ctx, req.(*ListFUOTADeploymentDevicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FUOTADeploymentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "restful.FUOTADeploymentService",
	HandlerType: (*FUOTADeploymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateForDevice",
			Handler:    _FUOTADeploymentService_CreateForDevice_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _FUOTADeploymentService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _FUOTADeploymentService_List_Handler,
		},
		{
			MethodName: "GetDeploymentDevice",
			Handler:    _FUOTADeploymentService_GetDeploymentDevice_Handler,
		},
		{
			MethodName: "ListDeploymentDevices",
			Handler:    _FUOTADeploymentService_ListDeploymentDevices_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fuotaDeployment.proto",
}
