{
  "swagger": "2.0",
  "info": {
    "title": "withdraw.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/withdraw/get-withdraw-fee": {
      "get": {
        "summary": "GetWithdrawFee data for current withdraw fee",
        "operationId": "GetWithdrawFee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/extapiGetWithdrawFeeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "currency",
            "description": "type of crypto currency.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "WithdrawService"
        ]
      }
    },
    "/api/withdraw/history": {
      "get": {
        "operationId": "GetWithdrawHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/extapiGetWithdrawHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "till",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "WithdrawService"
        ]
      }
    },
    "/api/withdraw/modify-withdraw-fee": {
      "put": {
        "operationId": "ModifyWithdrawFee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/extapiModifyWithdrawFeeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/extapiModifyWithdrawFeeRequest"
            }
          }
        ],
        "tags": [
          "WithdrawService"
        ]
      }
    },
    "/api/withdraw/req": {
      "post": {
        "summary": "after user clicks withdraw, send withdraw request to cobo directly",
        "operationId": "GetWithdraw",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/extapiGetWithdrawResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/extapiGetWithdrawRequest"
            }
          }
        ],
        "tags": [
          "WithdrawService"
        ]
      }
    }
  },
  "definitions": {
    "extapiGetWithdrawFeeResponse": {
      "type": "object",
      "properties": {
        "withdrawFee": {
          "type": "string",
          "description": "Withdraw object."
        },
        "currency": {
          "type": "string",
          "title": "actual currency of the withdraw fee\nfor BTC, withdraw fee should be in MXC"
        }
      }
    },
    "extapiGetWithdrawHistoryResponse": {
      "type": "object",
      "properties": {
        "withdrawHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/extapiWithdrawHistory"
          }
        }
      }
    },
    "extapiGetWithdrawRequest": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string",
          "format": "int64"
        },
        "ethAddress": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      }
    },
    "extapiGetWithdrawResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        }
      }
    },
    "extapiModifyWithdrawFeeRequest": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "withdrawFee": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "extapiModifyWithdrawFeeResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        }
      }
    },
    "extapiWithdrawHistory": {
      "type": "object",
      "properties": {
        "txStatus": {
          "type": "string"
        },
        "txHash": {
          "type": "string"
        },
        "denyComment": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "withdrawFee": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
