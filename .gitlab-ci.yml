stages:
  - test
  - build
  - release-private
  - release-public
  - deploy

golangci-lint:
  image: golangci/golangci-lint:v1.26.0
  stage: test
  before_script:
    - go get -u github.com/go-bindata/go-bindata/...
    - make internal/statics
  script:
    - golangci-lint run --new-from-rev origin/master ./...
  tags:
    - kubernetes
  except:
    - master
    - /crowdin/
    - /l10n/

go_test:
  image: golang:1
  stage: test
  before_script:
    - go get -u github.com/go-bindata/go-bindata/...
    - make internal/statics
  script:
    - make test
  tags:
    - kubernetes

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

build_image:
  stage: build
  image: docker:19.03.0
  services:
    - docker:19.03.0-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
  except:
    - /crowdin/
    - /l10n/
  tags:
    - kubernetes

tag_gitlab_image:
  stage: release-private
  image: docker:19.03.0
  services:
    - docker:19.03.0-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_IMAGE
    - echo $CONTAINER_IMAGE
    - docker tag $CONTAINER_IMAGE $CI_REGISTRY_IMAGE:$VERSION
    - docker push $CI_REGISTRY_IMAGE:$VERSION
  rules:
    - if: ($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "buildserver" || $CI_COMMIT_TAG)
  tags:
    - kubernetes

tag_dockerhub_image:
  stage: release-public
  image: docker:19.03.0
  services:
    - docker:19.03.0-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - echo $CONTAINER_IMAGE
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_IMAGE
    - docker login -u $DOCKER_USER -p $DOCKER_PASS $DOCKER_URL
    - docker tag $CONTAINER_IMAGE $DOCKER_REPO:$VERSION
    - docker tag $CONTAINER_IMAGE $DOCKER_REPO:latest
    - docker push $DOCKER_REPO:$VERSION
    - docker push $DOCKER_REPO:latest
  rules:
    - if: ($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG)
  tags:
    - kubernetes

deploy_review:
  stage: deploy
  image: curlimages/curl
  environment:
    name: staging
    url: $STAGINGURL
  script:
    - "curl -X POST -F token=$TRIGGERTOKEN -F ref=$TRIGGERBRANCH https://gitlab.com/api/v4/projects/13773920/trigger/pipeline"
  rules:
    - if: ($CI_COMMIT_BRANCH == "buildserver")
  tags:
    - kubernetes

deploy_test_cloud:
  stage: deploy
  image: curlimages/curl
  environment:
    name: preprod
    url: $PREPRODURL
  script:
    - "curl -X POST -F token=$TRIGGERTOKEN -F ref=$TRIGGERBRANCHTESTCLOUD https://gitlab.com/api/v4/projects/13773920/trigger/pipeline"
  rules:
    - if: ($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG)
  tags:
    - kubernetes

deploy_test_china:
  stage: deploy
  image: curlimages/curl
  environment:
    name: preprodcn
    url: $PREPRODCNURL
  script:
    - "curl -X POST -F token=$TRIGGERTOKEN -F ref=$TRIGGERBRANCHTESTCHINA https://gitlab.com/api/v4/projects/13773920/trigger/pipeline"
  rules:
    - if: ($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG)
  tags:
    - kubernetes
