stages: 
  - test 
  - build 
  - release-private 
  - release-public 
  - deploy

react_test_frontend:
  stage: test
  script:
    - sudo apt-get install software-properties-common
    - sudo add-apt-repository ppa:longsleep/golang-backports
    - curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
    - sudo -S apt-get install ca-certificates make git bash nodejs python golang-1.12 gcc g++ -y
    - sudo rm -f /usr/bin/go
    - sudo ln -s /usr/lib/go-1.12/bin/go /usr/bin/go || true
    - sudo ln -s /home/gitlab-runner/go/bin/go-bindata /usr/bin/go-bindata || true
    - cd ui
    - npm install
    - npm test
  allow_failure: true
  except:
    - master
    - develop
    - buildserver
  tags:
    - buildserver-native

syntax_test_backend:
  stage: test
  script:
    - sudo apt-get install software-properties-common
    - sudo add-apt-repository ppa:longsleep/golang-backports
    - curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
    - sudo -S apt-get install ca-certificates make git bash nodejs python golang-1.12 gcc g++ -y
    - sudo rm -f /usr/bin/go
    - sudo ln -s /usr/lib/go-1.12/bin/go /usr/bin/go || true
    - sudo ln -s /home/gitlab-runner/go/bin/go-bindata /usr/bin/go-bindata || true
    - go get -u golang.org/x/lint/golint
    - golint -set_exit_status ./...
  allow_failure: true
  except:
    - master
    - develop
    - buildserver
  tags:
    - buildserver-native

security_test_backend:
  stage: test
  script:
    - sudo apt-get install software-properties-common
    - sudo add-apt-repository ppa:longsleep/golang-backports
    - curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
    - sudo -S apt-get install ca-certificates make git bash nodejs python golang-1.12 gcc g++ -y
    - sudo rm -f /usr/bin/go
    - sudo ln -s /usr/lib/go-1.12/bin/go /usr/bin/go || true
    - sudo ln -s /home/gitlab-runner/go/bin/go-bindata /usr/bin/go-bindata || true
    - go get github.com/securego/gosec/cmd/gosec
    - gosec ./...
  allow_failure: true
  except:
    - master
    - develop
    - buildserver
  tags:
    - buildserver-native
    
variables:
  SERVICE_NAME: $APP_NAME
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  DOCKER_USER: $DOCKER_USER
  DOCKER_PASS: $DOCKER_PASS
  DOCKER_REPO: $DOCKER_REPO
  DOCKER_URL: $DOCKER_URL

before_script:
  - apk install git
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - export VERSION=$(git describe --tags|sed -e "s/^v//")
 
build_image:
  stage: build
  script:
    - docker build --pull -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
  tags:
    - buildserver

release_image_gitlab:
  stage: release-private
  script:
    - docker pull $CONTAINER_IMAGE
    - docker tag $CONTAINER_IMAGE $CI_REGISTRY_IMAGE:$SERVICE_NAME.$VERSION
    - docker push $CI_REGISTRY_IMAGE:$SERVICE_NAME.$VERSION
  only:
    - master # should really be this one only
    - develop # but we keep this enabled too
    - buildserver # and this to build image for buildserver deploy for QA
  tags:
    - buildserver

release_image_dockerhub:
  stage: release-public
  script:
    - docker pull $CI_REGISTRY_IMAGE:$SERVICE_NAME.$VERSION
    - docker login -u $DOCKER_USER -p $DOCKER_PASS $DOCKER_URL
    - docker tag $CI_REGISTRY_IMAGE:$SERVICE_NAME.$VERSION $DOCKER_REPO:$SERVICE_NAME.$VERSION
    - docker push $DOCKER_REPO:$SERVICE_NAME.$VERSION
  only:
    - master
    - develop
    - buildserver
  tags:
    - buildserver

.deploy_to_staging: #this needs migrating here from lpwan-server-docker project!!!
  stage: deploy
  script:
    - sed -i "s/DOCKER_USER/$DOCKER_USER/" config
    - sed -i "s/DOCKER_PASS/$DOCKER_PASS/" config
    - ./mxp-supernode
    - ls -l
    - docker-compose up -d appserver
  environment:
    name: staging
    url: http://35.246.213.251:8080
  only:
    - master
  tags:
    - buildserver

trigger_qa_deploy: #until above is working use a simple multiproject trigger
  stage: deploy
  image: alpine
  environment:
    name: staging
    url: http://192.168.0.226:8080
  before_script: 
    - apk install curl
  script:
    - "curl -X POST -F token=$TRIGGERTOKEN -F ref=$TRIGGERBRANCH https://gitlab.com/api/v4/projects/13773920/trigger/pipeline"
  only:
    - buildserver
  tags:
    - buildserver