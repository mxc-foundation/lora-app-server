stages:
  - test
  - build
  - release
  - deploy

default:
  before_script:
    - apk add --no-cache ca-certificates make git bash protobuf protobuf-dev nodejs nodejs-npm
    - go get -u golang.org/x/lint/golint
    - go get github.com/securego/gosec/cmd/gosec
    - go get github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway
    - go get github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger
    - go get github.com/golang/protobuf/protoc-gen-go
    - go get github.com/elazarl/go-bindata-assetfs/go-bindata-assetfs
    - go get github.com/jteeuwen/go-bindata/go-bindata

syntax_test_frontend:
  image: golang:1.12-alpine
  stage: test
  script:
    - cd ui
    - npm install
    - npm audit fix
    - npm run test
  allow_failure: true
  only:
    - buildserver

syntax_test_backend:
  image: golang:1.12-alpine
  stage: test
  script:
    - golint -set_exit_status ./...
  allow_failure: true
  only:
    - buildserver
  
security_test_backend:
  image: golang:1.12-alpine
  stage: test
  script:
    - gosec ./...
  allow_failure: true
  only:
    - buildserver
  
variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

build_branch_image:
  stage: build
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  before_script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
  only:
    - buildserver

trigger_build:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    - "curl -X POST -F token=4be6de377fa3eea1d64664765d6e86 -F ref=REF_NAME https://gitlab.com/api/v4/projects/13773920/trigger/pipeline"
  only:
    - buildserver