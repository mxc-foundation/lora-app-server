stages:
  - test
  - build
  - deploy

syntax_test_backend:
  image: golang:1.12-alpine
  stage: test
  before_script: 
    - apk add --no-cache ca-certificates make git bash protobuf protobuf-dev nodejs nodejs-npm
    - go get -u golang.org/x/lint/golint
  script:
    - golint -set_exit_status ./...
  allow_failure: true
  except:
    - buildserver
    - master
    - develop

security_test_backend:
  image: golang:1.12-alpine
  stage: test
  before_script: 
    - apk add --no-cache ca-certificates make git bash protobuf protobuf-dev nodejs nodejs-npm
    - go get github.com/securego/gosec/cmd/gosec
  script:
    - gosec ./...
  allow_failure: true
  except:
    - buildserver
    - master
    - develop
    
variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_DEVBRANCH_IMAGE: $CI_REGISTRY_IMAGE:dev
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

build_buildserver_branch_image:
  stage: build
  before_script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
  only:
    - buildserver
  tags:
    - buildserver

build_develop_branch_image:
  stage: build
  before_script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $CONTAINER_DEVBRANCH_IMAGE .
    - docker push $CONTAINER_DEVBRANCH_IMAGE
  only:
    - develop
  tags:
    - buildserver

build_master_branch_image:
  stage: build
  before_script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $CONTAINER_RELEASE_IMAGE .
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master
  tags:
    - buildserver

deploy_supernode:
  type: deploy
  image: mxcdocker/dockercompose
  script:
    - sed -i "s/DOCKER_USER/$DOCKER_USER/" config
    - sed -i "s/DOCKER_PASS/$DOCKER_PASS/" config
    - sed -i "s/DBUSER/$DBUSER/" configuration/*/*.toml
    - sed -i "s/DBPASS/$DBPASS/" configuration/*/*.toml
    - sed -i "s/DBNAME/$DBNAME/" configuration/*/*.toml
      #- ./docker-backup generate
      #  - ./docker-rm-all
      #- ./docker-backup recover
    - ./mxp-supernode
  only:
    - christian/ci/MD-17
  tags:
    - debi
